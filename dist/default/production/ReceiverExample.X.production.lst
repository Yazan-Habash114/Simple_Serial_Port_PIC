

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Nov 05 18:11:12 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAMh,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAMl,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0h,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0l,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0h,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAMh,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAMl,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67                           	dabs	1,0x95,1,_lcd_tris
    68  0000                     
    69                           ; Version 2.20
    70                           ; Generated 12/02/2020 GMT
    71                           ; 
    72                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F4620 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     _gotten	set	32
   104  0000                     _TXREG	set	4013
   105  0000                     _PIR1bits	set	3998
   106  0000                     _RCREG	set	4014
   107  0000                     _RCSTAbits	set	4011
   108  0000                     _RCSTA	set	4011
   109  0000                     _TXSTAbits	set	4012
   110  0000                     _TXSTA	set	4012
   111  0000                     _SPBRGH	set	4016
   112  0000                     _SPBRG	set	4015
   113  0000                     _BAUDCONbits	set	4024
   114                           
   115 ;;
   116 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   117 ;;
   118 ;; *************** function _main *****************
   119 ;; Defined at:
   120 ;;		line 207 in file "main.c"
   121 ;; Parameters:    Size  Location     Type
   122 ;;		None
   123 ;; Auto vars:     Size  Location     Type
   124 ;;  i               2   89[COMRAM] short 
   125 ;;  ptr             2   91[COMRAM] PTR unsigned char 
   126 ;;		 -> gotten(1), 
   127 ;; Return value:  Size  Location     Type
   128 ;;                  2   65[None  ] int 
   129 ;; Registers used:
   130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   131 ;; Tracked objects:
   132 ;;		On entry : 0/0
   133 ;;		On exit  : 0/0
   134 ;;		Unchanged: 0/0
   135 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
   136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   137 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   138 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   139 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   140 ;;Total ram usage:        5 bytes
   141 ;; Hardware stack levels required when called: 8
   142 ;; This function calls:
   143 ;;		_delay_ms
   144 ;;		_is_byte_available
   145 ;;		_print_line
   146 ;;		_read_byte_no_lib
   147 ;;		_send_string_no_lib
   148 ;;		_setupPorts
   149 ;;		_setupSerial
   150 ;;		_sprintf
   151 ;; This function is called by:
   152 ;;		Startup code after reset
   153 ;; This function uses a non-reentrant model
   154 ;;
   155                           
   156                           	psect	text0
   157  00D348                     __ptext0:
   158                           	callstack 0
   159  0000                     _TRISE	set	3990
   160  0000                     _TRISD	set	3989
   161  0000                     _TRISA	set	3986
   162  0000                     _TRISC	set	3988
   163  0000                     _TRISB	set	3987
   164  0000                     _ADCON1	set	4033
   165  0000                     _ADCON0	set	4034
   166  00D348                     _main:
   167                           	callstack 23
   168  00D348                     
   169                           ;main.c: 209:     setupPorts();
   170  00D348  EC20  F060         	call	_setupPorts	;wreg free
   171                           
   172                           ;main.c: 210:     setupSerial();
   173  00D34C  EC49  F060         	call	_setupSerial	;wreg free
   174  00D350                     
   175                           ;main.c: 212:     sprintf(buffer, "Enter a statement below:\n\r");
   176  00D350  0E00               	movlw	low _buffer
   177  00D352  0100               	movlb	0	; () banked
   178  00D354  6FD4               	movwf	sprintf@s& (0+255),b
   179  00D356  0E02               	movlw	high _buffer
   180  00D358  6FD5               	movwf	(sprintf@s+1)& (0+255),b
   181  00D35A  0E9A               	movlw	low STR_11
   182  00D35C  6FD6               	movwf	sprintf@fmt& (0+255),b
   183  00D35E  0EFF               	movlw	high STR_11
   184  00D360  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
   185  00D362  ECF9  F061         	call	_sprintf	;wreg free
   186  00D366                     
   187                           ;main.c: 213:     send_string_no_lib(buffer);
   188  00D366  0E00               	movlw	low _buffer
   189  00D368  6E02               	movwf	send_string_no_lib@p^0,c
   190  00D36A  0E02               	movlw	high _buffer
   191  00D36C  6E03               	movwf	(send_string_no_lib@p+1)^0,c
   192  00D36E  ECB0  F062         	call	_send_string_no_lib	;wreg free
   193  00D372                     
   194                           ;main.c: 216:     gotten = 'a';
   195  00D372  0E61               	movlw	97
   196  00D374  6E20               	movwf	32,c	;volatile
   197  00D376                     
   198                           ;main.c: 217:     char * ptr = &gotten;
   199  00D376  0E20               	movlw	32
   200  00D378  6E5C               	movwf	main@ptr^0,c
   201  00D37A  0E00               	movlw	0
   202  00D37C  6E5D               	movwf	(main@ptr+1)^0,c
   203  00D37E                     
   204                           ;main.c: 219:     for(short i=0; i<15; i++) {
   205  00D37E  0E00               	movlw	0
   206  00D380  6E5B               	movwf	(main@i+1)^0,c
   207  00D382  0E00               	movlw	0
   208  00D384  6E5A               	movwf	main@i^0,c
   209  00D386                     l4830:
   210                           
   211                           ;main.c: 221:             delay_ms(10);
   212  00D386  0E00               	movlw	0
   213  00D388  6E02               	movwf	(delay_ms@n+1)^0,c
   214  00D38A  0E0A               	movlw	10
   215  00D38C  6E01               	movwf	delay_ms@n^0,c
   216  00D38E  EC6C  F060         	call	_delay_ms	;wreg free
   217  00D392                     
   218                           ;main.c: 222:             if(is_byte_available()) {
   219  00D392  ECA0  F060         	call	_is_byte_available	;wreg free
   220  00D396  0900               	iorlw	0
   221  00D398  B4D8               	btfsc	status,2,c
   222  00D39A  EFD1  F069         	goto	u6441
   223  00D39E  EFD3  F069         	goto	u6440
   224  00D3A2                     u6441:
   225  00D3A2  EFC3  F069         	goto	l4830
   226  00D3A6                     u6440:
   227  00D3A6                     
   228                           ;main.c: 223:                 *ptr = read_byte_no_lib();
   229  00D3A6  EC3B  F060         	call	_read_byte_no_lib	;wreg free
   230  00D3AA  C05C  FFD9         	movff	main@ptr,fsr2l
   231  00D3AE  C05D  FFDA         	movff	main@ptr+1,fsr2h
   232  00D3B2  6EDF               	movwf	indf2,c
   233  00D3B4                     
   234                           ;main.c: 224:                 ptr++;
   235  00D3B4  4A5C               	infsnz	main@ptr^0,f,c
   236  00D3B6  2A5D               	incf	(main@ptr+1)^0,f,c
   237  00D3B8                     
   238                           ;main.c: 228:     }
   239  00D3B8  4A5A               	infsnz	main@i^0,f,c
   240  00D3BA  2A5B               	incf	(main@i+1)^0,f,c
   241  00D3BC  BE5B               	btfsc	(main@i+1)^0,7,c
   242  00D3BE  EFEA  F069         	goto	u6451
   243  00D3C2  505B               	movf	(main@i+1)^0,w,c
   244  00D3C4  E109               	bnz	u6450
   245  00D3C6  0E0F               	movlw	15
   246  00D3C8  5C5A               	subwf	main@i^0,w,c
   247  00D3CA  A0D8               	btfss	status,0,c
   248  00D3CC  EFEA  F069         	goto	u6451
   249  00D3D0  EFEC  F069         	goto	u6450
   250  00D3D4                     u6451:
   251  00D3D4  EFC3  F069         	goto	l4830
   252  00D3D8                     u6450:
   253  00D3D8                     
   254                           ;main.c: 230:     for(ptr = &gotten; *ptr; ++ptr)
   255  00D3D8  0E20               	movlw	32
   256  00D3DA  6E5C               	movwf	main@ptr^0,c
   257  00D3DC  0E00               	movlw	0
   258  00D3DE  6E5D               	movwf	(main@ptr+1)^0,c
   259  00D3E0  EF32  F06A         	goto	l4858
   260  00D3E4                     l4844:
   261                           
   262                           ;main.c: 231:         if(*ptr >= 'A' && *ptr <= 'Z')
   263  00D3E4  C05C  FFD9         	movff	main@ptr,fsr2l
   264  00D3E8  C05D  FFDA         	movff	main@ptr+1,fsr2h
   265  00D3EC  0E40               	movlw	64
   266  00D3EE  64DF               	cpfsgt	indf2,c
   267  00D3F0  EFFC  F069         	goto	u6461
   268  00D3F4  EFFE  F069         	goto	u6460
   269  00D3F8                     u6461:
   270  00D3F8  EF12  F06A         	goto	l4850
   271  00D3FC                     u6460:
   272  00D3FC  C05C  FFD9         	movff	main@ptr,fsr2l
   273  00D400  C05D  FFDA         	movff	main@ptr+1,fsr2h
   274  00D404  0E5B               	movlw	91
   275  00D406  60DF               	cpfslt	indf2,c
   276  00D408  EF08  F06A         	goto	u6471
   277  00D40C  EF0A  F06A         	goto	u6470
   278  00D410                     u6471:
   279  00D410  EF12  F06A         	goto	l4850
   280  00D414                     u6470:
   281  00D414                     
   282                           ;main.c: 232:             *ptr += 32;
   283  00D414  C05C  FFD9         	movff	main@ptr,fsr2l
   284  00D418  C05D  FFDA         	movff	main@ptr+1,fsr2h
   285  00D41C  0E20               	movlw	32
   286  00D41E  26DF               	addwf	indf2,f,c
   287  00D420  EF30  F06A         	goto	l4856
   288  00D424                     l4850:
   289  00D424  C05C  FFD9         	movff	main@ptr,fsr2l
   290  00D428  C05D  FFDA         	movff	main@ptr+1,fsr2h
   291  00D42C  0E60               	movlw	96
   292  00D42E  64DF               	cpfsgt	indf2,c
   293  00D430  EF1C  F06A         	goto	u6481
   294  00D434  EF1E  F06A         	goto	u6480
   295  00D438                     u6481:
   296  00D438  EF30  F06A         	goto	l4856
   297  00D43C                     u6480:
   298  00D43C  C05C  FFD9         	movff	main@ptr,fsr2l
   299  00D440  C05D  FFDA         	movff	main@ptr+1,fsr2h
   300  00D444  0E7B               	movlw	123
   301  00D446  60DF               	cpfslt	indf2,c
   302  00D448  EF28  F06A         	goto	u6491
   303  00D44C  EF2A  F06A         	goto	u6490
   304  00D450                     u6491:
   305  00D450  EF30  F06A         	goto	l4856
   306  00D454                     u6490:
   307  00D454                     
   308                           ;main.c: 234:             *ptr -= 32;
   309  00D454  C05C  FFD9         	movff	main@ptr,fsr2l
   310  00D458  C05D  FFDA         	movff	main@ptr+1,fsr2h
   311  00D45C  0E20               	movlw	32
   312  00D45E  5EDF               	subwf	indf2,f,c
   313  00D460                     l4856:
   314  00D460  4A5C               	infsnz	main@ptr^0,f,c
   315  00D462  2A5D               	incf	(main@ptr+1)^0,f,c
   316  00D464                     l4858:
   317  00D464  C05C  FFD9         	movff	main@ptr,fsr2l
   318  00D468  C05D  FFDA         	movff	main@ptr+1,fsr2h
   319  00D46C  50DF               	movf	indf2,w,c
   320  00D46E  A4D8               	btfss	status,2,c
   321  00D470  EF3C  F06A         	goto	u6501
   322  00D474  EF3E  F06A         	goto	u6500
   323  00D478                     u6501:
   324  00D478  EFF2  F069         	goto	l4844
   325  00D47C                     u6500:
   326  00D47C                     
   327                           ;main.c: 236:     ptr = &gotten;
   328  00D47C  0E20               	movlw	32
   329  00D47E  6E5C               	movwf	main@ptr^0,c
   330  00D480  0E00               	movlw	0
   331  00D482  6E5D               	movwf	(main@ptr+1)^0,c
   332  00D484                     
   333                           ;main.c: 237:     sprintf(buffer, "\n\rReceived string: ");
   334  00D484  0E00               	movlw	low _buffer
   335  00D486  0100               	movlb	0	; () banked
   336  00D488  6FD4               	movwf	sprintf@s& (0+255),b
   337  00D48A  0E02               	movlw	high _buffer
   338  00D48C  6FD5               	movwf	(sprintf@s+1)& (0+255),b
   339  00D48E  0EB5               	movlw	low STR_12
   340  00D490  6FD6               	movwf	sprintf@fmt& (0+255),b
   341  00D492  0EFF               	movlw	high STR_12
   342  00D494  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
   343  00D496  ECF9  F061         	call	_sprintf	;wreg free
   344  00D49A                     
   345                           ;main.c: 238:     send_string_no_lib(buffer);
   346  00D49A  0E00               	movlw	low _buffer
   347  00D49C  6E02               	movwf	send_string_no_lib@p^0,c
   348  00D49E  0E02               	movlw	high _buffer
   349  00D4A0  6E03               	movwf	(send_string_no_lib@p+1)^0,c
   350  00D4A2  ECB0  F062         	call	_send_string_no_lib	;wreg free
   351  00D4A6                     
   352                           ;main.c: 239:     send_string_no_lib(ptr);
   353  00D4A6  C05C  F002         	movff	main@ptr,send_string_no_lib@p
   354  00D4AA  C05D  F003         	movff	main@ptr+1,send_string_no_lib@p+1
   355  00D4AE  ECB0  F062         	call	_send_string_no_lib	;wreg free
   356  00D4B2                     
   357                           ;main.c: 240:     sprintf(buffer, "\r\n");
   358  00D4B2  0E00               	movlw	low _buffer
   359  00D4B4  0100               	movlb	0	; () banked
   360  00D4B6  6FD4               	movwf	sprintf@s& (0+255),b
   361  00D4B8  0E02               	movlw	high _buffer
   362  00D4BA  6FD5               	movwf	(sprintf@s+1)& (0+255),b
   363  00D4BC  0EBA               	movlw	low (STR_1+57)
   364  00D4BE  6FD6               	movwf	sprintf@fmt& (0+255),b
   365  00D4C0  0EFE               	movlw	high (STR_1+57)
   366  00D4C2  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
   367  00D4C4  ECF9  F061         	call	_sprintf	;wreg free
   368  00D4C8                     
   369                           ;main.c: 241:     send_string_no_lib(buffer);
   370  00D4C8  0E00               	movlw	low _buffer
   371  00D4CA  6E02               	movwf	send_string_no_lib@p^0,c
   372  00D4CC  0E02               	movlw	high _buffer
   373  00D4CE  6E03               	movwf	(send_string_no_lib@p+1)^0,c
   374  00D4D0  ECB0  F062         	call	_send_string_no_lib	;wreg free
   375  00D4D4                     
   376                           ;main.c: 242:     print_line();
   377  00D4D4  EC19  F060         	call	_print_line	;wreg free
   378  00D4D8                     l78:
   379  00D4D8  0004               	clrwdt		;# 
   380  00D4DA  EF6C  F06A         	goto	l78
   381  00D4DE  EF00  F000         	goto	start
   382  00D4E2                     __end_of_main:
   383                           	callstack 0
   384                           
   385                           	psect	mediumconst
   386  00FE80                     __pmediumconst:
   387                           	callstack 0
   388  00FE80  00                 	db	0
   389  00FE81                     STR_1:
   390  00FE81  2D                 	db	45
   391  00FE82  2D                 	db	45
   392  00FE83  2D                 	db	45
   393  00FE84  2D                 	db	45
   394  00FE85  2D                 	db	45
   395  00FE86  2D                 	db	45
   396  00FE87  2D                 	db	45
   397  00FE88  2D                 	db	45
   398  00FE89  2D                 	db	45
   399  00FE8A  2D                 	db	45
   400  00FE8B  2D                 	db	45
   401  00FE8C  2D                 	db	45
   402  00FE8D  2D                 	db	45
   403  00FE8E  2D                 	db	45
   404  00FE8F  2D                 	db	45
   405  00FE90  2D                 	db	45
   406  00FE91  2D                 	db	45
   407  00FE92  2D                 	db	45
   408  00FE93  2D                 	db	45
   409  00FE94  2D                 	db	45
   410  00FE95  2D                 	db	45
   411  00FE96  2D                 	db	45
   412  00FE97  2D                 	db	45
   413  00FE98  2D                 	db	45
   414  00FE99  2D                 	db	45
   415  00FE9A  2D                 	db	45
   416  00FE9B  2D                 	db	45
   417  00FE9C  2D                 	db	45
   418  00FE9D  2D                 	db	45
   419  00FE9E  2D                 	db	45
   420  00FE9F  2D                 	db	45
   421  00FEA0  2D                 	db	45
   422  00FEA1  2D                 	db	45
   423  00FEA2  2D                 	db	45
   424  00FEA3  2D                 	db	45
   425  00FEA4  2D                 	db	45
   426  00FEA5  2D                 	db	45
   427  00FEA6  2D                 	db	45
   428  00FEA7  2D                 	db	45
   429  00FEA8  2D                 	db	45
   430  00FEA9  2D                 	db	45
   431  00FEAA  2D                 	db	45
   432  00FEAB  2D                 	db	45
   433  00FEAC  2D                 	db	45
   434  00FEAD  2D                 	db	45
   435  00FEAE  2D                 	db	45
   436  00FEAF  2D                 	db	45
   437  00FEB0  2D                 	db	45
   438  00FEB1  2D                 	db	45
   439  00FEB2  2D                 	db	45
   440  00FEB3  2D                 	db	45
   441  00FEB4  2D                 	db	45
   442  00FEB5  2D                 	db	45
   443  00FEB6  2D                 	db	45
   444  00FEB7  2D                 	db	45
   445  00FEB8  2D                 	db	45
   446  00FEB9  2D                 	db	45
   447  00FEBA  0D                 	db	13
   448  00FEBB  0A                 	db	10
   449  00FEBC  00                 	db	0
   450  00FEBD  63                 	db	99	;'c'
   451  00FEBE  68                 	db	104	;'h'
   452  00FEBF  72                 	db	114	;'r'
   453  00FEC0  20                 	db	32
   454  00FEC1  3D                 	db	61	;'='
   455  00FEC2  20                 	db	32
   456  00FEC3  25                 	db	37
   457  00FEC4  30                 	db	48	;'0'
   458  00FEC5  32                 	db	50	;'2'
   459  00FEC6  58                 	db	88	;'X'
   460  00FEC7  2C                 	db	44
   461  00FEC8  20                 	db	32
   462  00FEC9  73                 	db	115	;'s'
   463  00FECA  68                 	db	104	;'h'
   464  00FECB  72                 	db	114	;'r'
   465  00FECC  74                 	db	116	;'t'
   466  00FECD  20                 	db	32
   467  00FECE  3D                 	db	61	;'='
   468  00FECF  20                 	db	32
   469  00FED0  25                 	db	37
   470  00FED1  30                 	db	48	;'0'
   471  00FED2  34                 	db	52	;'4'
   472  00FED3  58                 	db	88	;'X'
   473  00FED4  2C                 	db	44
   474  00FED5  20                 	db	32
   475  00FED6  6C                 	db	108	;'l'
   476  00FED7  6E                 	db	110	;'n'
   477  00FED8  67                 	db	103	;'g'
   478  00FED9  20                 	db	32
   479  00FEDA  3D                 	db	61	;'='
   480  00FEDB  20                 	db	32
   481  00FEDC  25                 	db	37
   482  00FEDD  30                 	db	48	;'0'
   483  00FEDE  34                 	db	52	;'4'
   484  00FEDF  58                 	db	88	;'X'
   485  00FEE0  25                 	db	37
   486  00FEE1  30                 	db	48	;'0'
   487  00FEE2  34                 	db	52	;'4'
   488  00FEE3  58                 	db	88	;'X'
   489  00FEE4  0D                 	db	13
   490  00FEE5  0A                 	db	10
   491  00FEE6  00                 	db	0
   492  00FEE7                     STR_4:
   493  00FEE7  63                 	db	99	;'c'
   494  00FEE8  68                 	db	104	;'h'
   495  00FEE9  72                 	db	114	;'r'
   496  00FEEA  20                 	db	32
   497  00FEEB  3D                 	db	61	;'='
   498  00FEEC  20                 	db	32
   499  00FEED  25                 	db	37
   500  00FEEE  63                 	db	99	;'c'
   501  00FEEF  2C                 	db	44
   502  00FEF0  20                 	db	32
   503  00FEF1  73                 	db	115	;'s'
   504  00FEF2  68                 	db	104	;'h'
   505  00FEF3  72                 	db	114	;'r'
   506  00FEF4  74                 	db	116	;'t'
   507  00FEF5  20                 	db	32
   508  00FEF6  3D                 	db	61	;'='
   509  00FEF7  20                 	db	32
   510  00FEF8  25                 	db	37
   511  00FEF9  64                 	db	100	;'d'
   512  00FEFA  2C                 	db	44
   513  00FEFB  20                 	db	32
   514  00FEFC  6C                 	db	108	;'l'
   515  00FEFD  6E                 	db	110	;'n'
   516  00FEFE  67                 	db	103	;'g'
   517  00FEFF  20                 	db	32
   518  00FF00  3D                 	db	61	;'='
   519  00FF01  20                 	db	32
   520  00FF02  25                 	db	37
   521  00FF03  6C                 	db	108	;'l'
   522  00FF04  64                 	db	100	;'d'
   523  00FF05  2C                 	db	44
   524  00FF06  20                 	db	32
   525  00FF07  66                 	db	102	;'f'
   526  00FF08  6C                 	db	108	;'l'
   527  00FF09  74                 	db	116	;'t'
   528  00FF0A  3D                 	db	61	;'='
   529  00FF0B  25                 	db	37
   530  00FF0C  66                 	db	102	;'f'
   531  00FF0D  0D                 	db	13
   532  00FF0E  0A                 	db	10
   533  00FF0F  00                 	db	0
   534  00FF10  63                 	db	99	;'c'
   535  00FF11  68                 	db	104	;'h'
   536  00FF12  72                 	db	114	;'r'
   537  00FF13  20                 	db	32
   538  00FF14  3D                 	db	61	;'='
   539  00FF15  20                 	db	32
   540  00FF16  25                 	db	37
   541  00FF17  30                 	db	48	;'0'
   542  00FF18  32                 	db	50	;'2'
   543  00FF19  58                 	db	88	;'X'
   544  00FF1A  2C                 	db	44
   545  00FF1B  20                 	db	32
   546  00FF1C  73                 	db	115	;'s'
   547  00FF1D  68                 	db	104	;'h'
   548  00FF1E  72                 	db	114	;'r'
   549  00FF1F  74                 	db	116	;'t'
   550  00FF20  20                 	db	32
   551  00FF21  3D                 	db	61	;'='
   552  00FF22  20                 	db	32
   553  00FF23  25                 	db	37
   554  00FF24  30                 	db	48	;'0'
   555  00FF25  34                 	db	52	;'4'
   556  00FF26  58                 	db	88	;'X'
   557  00FF27  2C                 	db	44
   558  00FF28  20                 	db	32
   559  00FF29  6C                 	db	108	;'l'
   560  00FF2A  6E                 	db	110	;'n'
   561  00FF2B  67                 	db	103	;'g'
   562  00FF2C  20                 	db	32
   563  00FF2D  3D                 	db	61	;'='
   564  00FF2E  20                 	db	32
   565  00FF2F  25                 	db	37
   566  00FF30  30                 	db	48	;'0'
   567  00FF31  38                 	db	56	;'8'
   568  00FF32  58                 	db	88	;'X'
   569  00FF33  0D                 	db	13
   570  00FF34  0A                 	db	10
   571  00FF35  00                 	db	0
   572  00FF36  25                 	db	37
   573  00FF37  30                 	db	48	;'0'
   574  00FF38  78                 	db	120	;'x'
   575  00FF39  20                 	db	32
   576  00FF3A  25                 	db	37
   577  00FF3B  30                 	db	48	;'0'
   578  00FF3C  78                 	db	120	;'x'
   579  00FF3D  20                 	db	32
   580  00FF3E  25                 	db	37
   581  00FF3F  30                 	db	48	;'0'
   582  00FF40  78                 	db	120	;'x'
   583  00FF41  20                 	db	32
   584  00FF42  25                 	db	37
   585  00FF43  30                 	db	48	;'0'
   586  00FF44  78                 	db	120	;'x'
   587  00FF45  20                 	db	32
   588  00FF46  25                 	db	37
   589  00FF47  30                 	db	48	;'0'
   590  00FF48  78                 	db	120	;'x'
   591  00FF49  20                 	db	32
   592  00FF4A  25                 	db	37
   593  00FF4B  30                 	db	48	;'0'
   594  00FF4C  78                 	db	120	;'x'
   595  00FF4D  20                 	db	32
   596  00FF4E  25                 	db	37
   597  00FF4F  30                 	db	48	;'0'
   598  00FF50  78                 	db	120	;'x'
   599  00FF51  20                 	db	32
   600  00FF52  25                 	db	37
   601  00FF53  30                 	db	48	;'0'
   602  00FF54  78                 	db	120	;'x'
   603  00FF55  0D                 	db	13
   604  00FF56  0A                 	db	10
   605  00FF57  00                 	db	0
   606  00FF58  50                 	db	80	;'P'
   607  00FF59  72                 	db	114	;'r'
   608  00FF5A  69                 	db	105	;'i'
   609  00FF5B  6E                 	db	110	;'n'
   610  00FF5C  74                 	db	116	;'t'
   611  00FF5D  69                 	db	105	;'i'
   612  00FF5E  6E                 	db	110	;'n'
   613  00FF5F  67                 	db	103	;'g'
   614  00FF60  20                 	db	32
   615  00FF61  53                 	db	83	;'S'
   616  00FF62  54                 	db	84	;'T'
   617  00FF63  79                 	db	121	;'y'
   618  00FF64  70                 	db	112	;'p'
   619  00FF65  65                 	db	101	;'e'
   620  00FF66  20                 	db	32
   621  00FF67  66                 	db	102	;'f'
   622  00FF68  69                 	db	105	;'i'
   623  00FF69  65                 	db	101	;'e'
   624  00FF6A  6C                 	db	108	;'l'
   625  00FF6B  64                 	db	100	;'d'
   626  00FF6C  73                 	db	115	;'s'
   627  00FF6D  20                 	db	32
   628  00FF6E  61                 	db	97	;'a'
   629  00FF6F  74                 	db	116	;'t'
   630  00FF70  20                 	db	32
   631  00FF71  28                 	db	40
   632  00FF72  25                 	db	37
   633  00FF73  64                 	db	100	;'d'
   634  00FF74  29                 	db	41
   635  00FF75  3A                 	db	58	;':'
   636  00FF76  0D                 	db	13
   637  00FF77  0A                 	db	10
   638  00FF78  00                 	db	0
   639  00FF79  50                 	db	80	;'P'
   640  00FF7A  72                 	db	114	;'r'
   641  00FF7B  69                 	db	105	;'i'
   642  00FF7C  6E                 	db	110	;'n'
   643  00FF7D  74                 	db	116	;'t'
   644  00FF7E  69                 	db	105	;'i'
   645  00FF7F  6E                 	db	110	;'n'
   646  00FF80  67                 	db	103	;'g'
   647  00FF81  20                 	db	32
   648  00FF82  55                 	db	85	;'U'
   649  00FF83  54                 	db	84	;'T'
   650  00FF84  79                 	db	121	;'y'
   651  00FF85  70                 	db	112	;'p'
   652  00FF86  65                 	db	101	;'e'
   653  00FF87  20                 	db	32
   654  00FF88  66                 	db	102	;'f'
   655  00FF89  69                 	db	105	;'i'
   656  00FF8A  65                 	db	101	;'e'
   657  00FF8B  6C                 	db	108	;'l'
   658  00FF8C  64                 	db	100	;'d'
   659  00FF8D  73                 	db	115	;'s'
   660  00FF8E  20                 	db	32
   661  00FF8F  61                 	db	97	;'a'
   662  00FF90  74                 	db	116	;'t'
   663  00FF91  20                 	db	32
   664  00FF92  28                 	db	40
   665  00FF93  25                 	db	37
   666  00FF94  64                 	db	100	;'d'
   667  00FF95  29                 	db	41
   668  00FF96  3A                 	db	58	;':'
   669  00FF97  0D                 	db	13
   670  00FF98  0A                 	db	10
   671  00FF99  00                 	db	0
   672  00FF9A                     STR_11:
   673  00FF9A  45                 	db	69	;'E'
   674  00FF9B  6E                 	db	110	;'n'
   675  00FF9C  74                 	db	116	;'t'
   676  00FF9D  65                 	db	101	;'e'
   677  00FF9E  72                 	db	114	;'r'
   678  00FF9F  20                 	db	32
   679  00FFA0  61                 	db	97	;'a'
   680  00FFA1  20                 	db	32
   681  00FFA2  73                 	db	115	;'s'
   682  00FFA3  74                 	db	116	;'t'
   683  00FFA4  61                 	db	97	;'a'
   684  00FFA5  74                 	db	116	;'t'
   685  00FFA6  65                 	db	101	;'e'
   686  00FFA7  6D                 	db	109	;'m'
   687  00FFA8  65                 	db	101	;'e'
   688  00FFA9  6E                 	db	110	;'n'
   689  00FFAA  74                 	db	116	;'t'
   690  00FFAB  20                 	db	32
   691  00FFAC  62                 	db	98	;'b'
   692  00FFAD  65                 	db	101	;'e'
   693  00FFAE  6C                 	db	108	;'l'
   694  00FFAF  6F                 	db	111	;'o'
   695  00FFB0  77                 	db	119	;'w'
   696  00FFB1  3A                 	db	58	;':'
   697  00FFB2  0A                 	db	10
   698  00FFB3  0D                 	db	13
   699  00FFB4  00                 	db	0
   700  00FFB5                     STR_12:
   701  00FFB5  0A                 	db	10
   702  00FFB6  0D                 	db	13
   703  00FFB7  52                 	db	82	;'R'
   704  00FFB8  65                 	db	101	;'e'
   705  00FFB9  63                 	db	99	;'c'
   706  00FFBA  65                 	db	101	;'e'
   707  00FFBB  69                 	db	105	;'i'
   708  00FFBC  76                 	db	118	;'v'
   709  00FFBD  65                 	db	101	;'e'
   710  00FFBE  64                 	db	100	;'d'
   711  00FFBF  20                 	db	32
   712  00FFC0  73                 	db	115	;'s'
   713  00FFC1  74                 	db	116	;'t'
   714  00FFC2  72                 	db	114	;'r'
   715  00FFC3  69                 	db	105	;'i'
   716  00FFC4  6E                 	db	110	;'n'
   717  00FFC5  67                 	db	103	;'g'
   718  00FFC6  3A                 	db	58	;':'
   719  00FFC7  20                 	db	32
   720  00FFC8  00                 	db	0
   721  00FFC9  42                 	db	66	;'B'
   722  00FFCA  79                 	db	121	;'y'
   723  00FFCB  74                 	db	116	;'t'
   724  00FFCC  65                 	db	101	;'e'
   725  00FFCD  20                 	db	32
   726  00FFCE  61                 	db	97	;'a'
   727  00FFCF  74                 	db	116	;'t'
   728  00FFD0  20                 	db	32
   729  00FFD1  28                 	db	40
   730  00FFD2  25                 	db	37
   731  00FFD3  64                 	db	100	;'d'
   732  00FFD4  29                 	db	41
   733  00FFD5  3A                 	db	58	;':'
   734  00FFD6  00                 	db	0
   735  00FFD7  25                 	db	37
   736  00FFD8  30                 	db	48	;'0'
   737  00FFD9  32                 	db	50	;'2'
   738  00FFDA  58                 	db	88	;'X'
   739  00FFDB  48                 	db	72	;'H'
   740  00FFDC  3A                 	db	58	;':'
   741  00FFDD  20                 	db	32
   742  00FFDE  00                 	db	0
   743  00FFDF                     STR_14:
   744  00FFDF  49                 	db	73	;'I'
   745  00FFE0  4E                 	db	78	;'N'
   746  00FFE1  46                 	db	70	;'F'
   747  00FFE2  00                 	db	0
   748  00FFE3                     STR_18:
   749  00FFE3  4E                 	db	78	;'N'
   750  00FFE4  41                 	db	65	;'A'
   751  00FFE5  4E                 	db	78	;'N'
   752  00FFE6  00                 	db	0
   753  00FFE7                     STR_15:
   754  00FFE7  69                 	db	105	;'i'
   755  00FFE8  6E                 	db	110	;'n'
   756  00FFE9  66                 	db	102	;'f'
   757  00FFEA  00                 	db	0
   758  00FFEB                     STR_19:
   759  00FFEB  6E                 	db	110	;'n'
   760  00FFEC  61                 	db	97	;'a'
   761  00FFED  6E                 	db	110	;'n'
   762  00FFEE  00                 	db	0
   763  00FFEF                     STR_40:
   764  00FFEF  6C                 	db	108	;'l'
   765  00FFF0  58                 	db	88	;'X'
   766  00FFF1  00                 	db	0
   767  00FFF2                     STR_22:
   768  00FFF2  6C                 	db	108	;'l'
   769  00FFF3  64                 	db	100	;'d'
   770  00FFF4  00                 	db	0
   771  00FFF5                     STR_31:
   772  00FFF5  6C                 	db	108	;'l'
   773  00FFF6  66                 	db	102	;'f'
   774  00FFF7  00                 	db	0
   775  00FFF8                     STR_26:
   776  00FFF8  6C                 	db	108	;'l'
   777  00FFF9  69                 	db	105	;'i'
   778  00FFFA  00                 	db	0
   779  00FFFB                     STR_36:
   780  00FFFB  6C                 	db	108	;'l'
   781  00FFFC  78                 	db	120	;'x'
   782  00FFFD  00                 	db	0
   783  00FFFE  00                 	db	0	; dummy byte at the end
   784  0000                     
   785                           ; #config settings
   786                           
   787                           	psect	cinit
   788  00C2D4                     __pcinit:
   789                           	callstack 0
   790  00C2D4                     start_initialization:
   791                           	callstack 0
   792  00C2D4                     __initialization:
   793                           	callstack 0
   794                           
   795                           ; Clear objects allocated to BANK2 (200 bytes)
   796  00C2D4  EE02  F000         	lfsr	0,__pbssBANK2
   797  00C2D8  0EC8               	movlw	200
   798  00C2DA                     clear_0:
   799  00C2DA  6AEE               	clrf	postinc0,c
   800  00C2DC  06E8               	decf	wreg,f,c
   801  00C2DE  E1FD               	bnz	clear_0
   802                           
   803                           ; Clear objects allocated to BANK1 (80 bytes)
   804  00C2E0  EE01  F000         	lfsr	0,__pbssBANK1
   805  00C2E4  0E50               	movlw	80
   806  00C2E6                     clear_1:
   807  00C2E6  6AEE               	clrf	postinc0,c
   808  00C2E8  06E8               	decf	wreg,f,c
   809  00C2EA  E1FD               	bnz	clear_1
   810                           
   811                           ; Clear objects allocated to BANK0h (6 bytes)
   812  00C2EC  0100               	movlb	0
   813  00C2EE  6BFE               	clrf	(__pbssBANK0h+5)& (0+255),b
   814  00C2F0  6BFD               	clrf	(__pbssBANK0h+4)& (0+255),b
   815  00C2F2  6BFC               	clrf	(__pbssBANK0h+3)& (0+255),b
   816  00C2F4  6BFB               	clrf	(__pbssBANK0h+2)& (0+255),b
   817  00C2F6  6BFA               	clrf	(__pbssBANK0h+1)& (0+255),b
   818  00C2F8  6BF9               	clrf	__pbssBANK0h& (0+255),b
   819                           
   820                           ; Clear objects allocated to COMRAMh (2 bytes)
   821  00C2FA  6A7D               	clrf	(__pbssCOMRAMh+1)& (0+255),c
   822  00C2FC  6A7C               	clrf	__pbssCOMRAMh& (0+255),c
   823                           
   824                           ; Clear objects allocated to COMRAMl (1 bytes)
   825  00C2FE  6A7E               	clrf	__pbssCOMRAMl& (0+255),c
   826                           
   827                           ; Clear objects allocated to BANK0l (9 bytes)
   828  00C300  EE00  F0F0         	lfsr	0,__pbssBANK0l
   829  00C304  0E09               	movlw	9
   830  00C306                     clear_2:
   831  00C306  6AEE               	clrf	postinc0,c
   832  00C308  06E8               	decf	wreg,f,c
   833  00C30A  E1FD               	bnz	clear_2
   834  00C30C                     end_of_initialization:
   835                           	callstack 0
   836  00C30C                     __end_of__initialization:
   837                           	callstack 0
   838  00C30C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   839  00C30E  6EF8               	movwf	tblptru,c
   840  00C310  0100               	movlb	0
   841  00C312  EFA4  F069         	goto	_main	;jump to C main() function
   842                           
   843                           	psect	bssCOMRAMh
   844  00007C                     __pbssCOMRAMh:
   845                           	callstack 0
   846  00007C                     _flags:
   847                           	callstack 0
   848  00007C                     	ds	2
   849                           
   850                           	psect	bssCOMRAMl
   851  00007E                     __pbssCOMRAMl:
   852                           	callstack 0
   853  00007E                     _data1:
   854                           	callstack 0
   855  00007E                     	ds	1
   856                           
   857                           	psect	bssBANK0h
   858  0000F9                     __pbssBANK0h:
   859                           	callstack 0
   860  0000F9                     _nout:
   861                           	callstack 0
   862  0000F9                     	ds	2
   863  0000FB                     _width:
   864                           	callstack 0
   865  0000FB                     	ds	2
   866  0000FD                     _prec:
   867                           	callstack 0
   868  0000FD                     	ds	2
   869                           
   870                           	psect	bssBANK0l
   871  0000F0                     __pbssBANK0l:
   872                           	callstack 0
   873  0000F0                     floorf@F527:
   874                           	callstack 0
   875  0000F0                     	ds	4
   876  0000F4                     ___fpclassifyf@F465:
   877                           	callstack 0
   878  0000F4                     	ds	4
   879  0000F8                     _X1:
   880                           	callstack 0
   881  0000F8                     	ds	1
   882                           
   883                           	psect	bssBANK1
   884  000100                     __pbssBANK1:
   885                           	callstack 0
   886  000100                     _dbuf:
   887                           	callstack 0
   888  000100                     	ds	80
   889                           
   890                           	psect	bssBANK2
   891  000200                     __pbssBANK2:
   892                           	callstack 0
   893  000200                     _buffer:
   894                           	callstack 0
   895  000200                     	ds	200
   896                           
   897                           	psect	cstackBANK0h
   898  000096                     __pcstackBANK0h:
   899                           	callstack 0
   900  000096                     _efgtoa$1051:
   901                           	callstack 0
   902                           
   903                           ; 2 bytes @ 0x0
   904  000096                     	ds	2
   905  000098                     _efgtoa$1052:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x2
   909  000098                     	ds	2
   910  00009A                     _efgtoa$1056:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x4
   914  00009A                     	ds	2
   915  00009C                     _efgtoa$1060:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x6
   919  00009C                     	ds	2
   920  00009E                     _efgtoa$1061:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x8
   924  00009E                     	ds	2
   925  0000A0                     _efgtoa$1062:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0xA
   929  0000A0                     	ds	2
   930  0000A2                     efgtoa@t:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0xC
   934  0000A2                     	ds	2
   935  0000A4                     efgtoa@pp:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0xE
   939  0000A4                     	ds	2
   940  0000A6                     efgtoa@ne:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0x10
   944  0000A6                     	ds	2
   945  0000A8                     efgtoa@m:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x12
   949  0000A8                     	ds	2
   950  0000AA                     efgtoa@ou:
   951                           	callstack 0
   952                           
   953                           ; 4 bytes @ 0x14
   954  0000AA                     	ds	4
   955  0000AE                     efgtoa@d:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x18
   959  0000AE                     	ds	2
   960  0000B0                     efgtoa@sign:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x1A
   964  0000B0                     	ds	2
   965  0000B2                     efgtoa@p:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x1C
   969  0000B2                     	ds	2
   970  0000B4                     efgtoa@w:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x1E
   974  0000B4                     	ds	2
   975  0000B6                     efgtoa@nmode:
   976                           	callstack 0
   977                           
   978                           ; 1 bytes @ 0x20
   979  0000B6                     	ds	1
   980  0000B7                     efgtoa@mode:
   981                           	callstack 0
   982                           
   983                           ; 1 bytes @ 0x21
   984  0000B7                     	ds	1
   985  0000B8                     efgtoa@h:
   986                           	callstack 0
   987                           
   988                           ; 4 bytes @ 0x22
   989  0000B8                     	ds	4
   990  0000BC                     efgtoa@l:
   991                           	callstack 0
   992                           
   993                           ; 4 bytes @ 0x26
   994  0000BC                     	ds	4
   995  0000C0                     efgtoa@i:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x2A
   999  0000C0                     	ds	2
  1000  0000C2                     efgtoa@g:
  1001                           	callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x2C
  1004  0000C2                     	ds	4
  1005  0000C6                     efgtoa@e:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x30
  1009  0000C6                     	ds	2
  1010  0000C8                     efgtoa@n:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x32
  1014  0000C8                     	ds	2
  1015  0000CA                     efgtoa@u:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x34
  1019  0000CA                     	ds	4
  1020  0000CE                     ?_vfprintf:
  1021                           	callstack 0
  1022  0000CE                     vfprintf@fp:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x38
  1026  0000CE                     	ds	2
  1027  0000D0                     vfprintf@fmt:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x3A
  1031  0000D0                     	ds	2
  1032  0000D2                     vfprintf@ap:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x3C
  1036  0000D2                     	ds	2
  1037  0000D4                     ?_sprintf:
  1038                           	callstack 0
  1039  0000D4                     sprintf@s:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x3E
  1043  0000D4                     	ds	2
  1044  0000D6                     sprintf@fmt:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x40
  1048  0000D6                     	ds	18
  1049  0000E8                     sprintf@ap:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x52
  1053  0000E8                     	ds	2
  1054  0000EA                     sprintf@f:
  1055                           	callstack 0
  1056                           
  1057                           ; 6 bytes @ 0x54
  1058  0000EA                     	ds	6
  1059                           
  1060                           	psect	cstackCOMRAMh
  1061  000001                     __pcstackCOMRAMh:
  1062                           	callstack 0
  1063  000001                     ?_strlen:
  1064                           	callstack 0
  1065  000001                     ?___fpclassifyf:
  1066                           	callstack 0
  1067  000001                     ?_isupper:
  1068                           	callstack 0
  1069  000001                     ?_isalpha:
  1070                           	callstack 0
  1071  000001                     ?_isdigit:
  1072                           	callstack 0
  1073  000001                     ?_strncmp:
  1074                           	callstack 0
  1075  000001                     ?_isspace:
  1076                           	callstack 0
  1077  000001                     ?_islower:
  1078                           	callstack 0
  1079  000001                     ?___wmul:
  1080                           	callstack 0
  1081  000001                     ?___awdiv:
  1082                           	callstack 0
  1083  000001                     ?___awmod:
  1084                           	callstack 0
  1085  000001                     ?___fladd:
  1086                           	callstack 0
  1087  000001                     ?___fldiv:
  1088                           	callstack 0
  1089  000001                     ?___flmul:
  1090                           	callstack 0
  1091  000001                     ?___flneg:
  1092                           	callstack 0
  1093  000001                     ?___fltol:
  1094                           	callstack 0
  1095  000001                     ?___aodiv:
  1096                           	callstack 0
  1097  000001                     ?___aomod:
  1098                           	callstack 0
  1099  000001                     read_byte_no_lib@c:
  1100                           	callstack 0
  1101  000001                     send_byte_no_lib@c:
  1102                           	callstack 0
  1103  000001                     delay_ms@n:
  1104                           	callstack 0
  1105  000001                     ___wmul@multiplier:
  1106                           	callstack 0
  1107  000001                     ___awdiv@dividend:
  1108                           	callstack 0
  1109  000001                     ___awmod@dividend:
  1110                           	callstack 0
  1111  000001                     isalpha@c:
  1112                           	callstack 0
  1113  000001                     isdigit@c:
  1114                           	callstack 0
  1115  000001                     isspace@c:
  1116                           	callstack 0
  1117  000001                     isupper@c:
  1118                           	callstack 0
  1119  000001                     fputc@c:
  1120                           	callstack 0
  1121  000001                     strcpy@dest:
  1122                           	callstack 0
  1123  000001                     strlen@s:
  1124                           	callstack 0
  1125  000001                     strncmp@_l:
  1126                           	callstack 0
  1127  000001                     islower@c:
  1128                           	callstack 0
  1129  000001                     ___fleq@ff1:
  1130                           	callstack 0
  1131  000001                     ___flneg@f1:
  1132                           	callstack 0
  1133  000001                     ___fltol@f1:
  1134                           	callstack 0
  1135  000001                     ___fladd@b:
  1136                           	callstack 0
  1137  000001                     ___fldiv@b:
  1138                           	callstack 0
  1139  000001                     ___flmul@b:
  1140                           	callstack 0
  1141  000001                     ___fpclassifyf@x:
  1142                           	callstack 0
  1143  000001                     ___aodiv@dividend:
  1144                           	callstack 0
  1145  000001                     ___aomod@dividend:
  1146                           	callstack 0
  1147                           
  1148                           ; 8 bytes @ 0x0
  1149  000001                     	ds	1
  1150  000002                     send_string_no_lib@p:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x1
  1154  000002                     	ds	1
  1155  000003                     ??_isupper:
  1156  000003                     ??_isalpha:
  1157  000003                     ??_isdigit:
  1158  000003                     ??_isspace:
  1159  000003                     ??_islower:
  1160  000003                     delay_ms@i:
  1161                           	callstack 0
  1162  000003                     ___wmul@multiplicand:
  1163                           	callstack 0
  1164  000003                     ___awdiv@divisor:
  1165                           	callstack 0
  1166  000003                     ___awmod@divisor:
  1167                           	callstack 0
  1168  000003                     fputc@fp:
  1169                           	callstack 0
  1170  000003                     strcpy@src:
  1171                           	callstack 0
  1172  000003                     strlen@a:
  1173                           	callstack 0
  1174  000003                     strncmp@_r:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x2
  1178  000003                     	ds	1
  1179  000004                     
  1180                           ; 1 bytes @ 0x3
  1181  000004                     	ds	1
  1182  000005                     ??_fputc:
  1183  000005                     ??___fpclassifyf:
  1184  000005                     ??_strcpy:
  1185  000005                     ??___fltol:
  1186  000005                     ___awdiv@counter:
  1187                           	callstack 0
  1188  000005                     ___awmod@counter:
  1189                           	callstack 0
  1190  000005                     ___wmul@product:
  1191                           	callstack 0
  1192  000005                     strncmp@n:
  1193                           	callstack 0
  1194  000005                     ___fleq@ff2:
  1195                           	callstack 0
  1196  000005                     ___fladd@a:
  1197                           	callstack 0
  1198  000005                     ___fldiv@a:
  1199                           	callstack 0
  1200  000005                     ___flmul@a:
  1201                           	callstack 0
  1202                           
  1203                           ; 4 bytes @ 0x4
  1204  000005                     	ds	1
  1205  000006                     ___awdiv@sign:
  1206                           	callstack 0
  1207  000006                     ___awmod@sign:
  1208                           	callstack 0
  1209                           
  1210                           ; 1 bytes @ 0x5
  1211  000006                     	ds	1
  1212  000007                     ??_strncmp:
  1213  000007                     ?_tolower:
  1214                           	callstack 0
  1215  000007                     ?_toupper:
  1216                           	callstack 0
  1217  000007                     _isspace$1188:
  1218                           	callstack 0
  1219  000007                     ___awdiv@quotient:
  1220                           	callstack 0
  1221  000007                     strcpy@s:
  1222                           	callstack 0
  1223  000007                     tolower@c:
  1224                           	callstack 0
  1225  000007                     toupper@c:
  1226                           	callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x6
  1229  000007                     	ds	1
  1230  000008                     ?_atoi:
  1231                           	callstack 0
  1232  000008                     atoi@s:
  1233                           	callstack 0
  1234  000008                     strncmp@l:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x7
  1238  000008                     	ds	1
  1239  000009                     ??___fladd:
  1240  000009                     ??___fldiv:
  1241  000009                     ??___flmul:
  1242  000009                     ??_tolower:
  1243  000009                     ??_toupper:
  1244  000009                     ??___fleq:
  1245  000009                     ___fltol@sign1:
  1246                           	callstack 0
  1247  000009                     ___fpclassifyf@e:
  1248                           	callstack 0
  1249  000009                     strcpy@d:
  1250                           	callstack 0
  1251  000009                     ___aodiv@divisor:
  1252                           	callstack 0
  1253  000009                     ___aomod@divisor:
  1254                           	callstack 0
  1255                           
  1256                           ; 8 bytes @ 0x8
  1257  000009                     	ds	1
  1258  00000A                     ??_atoi:
  1259  00000A                     ?_ctoa:
  1260                           	callstack 0
  1261  00000A                     ___fltol@exp1:
  1262                           	callstack 0
  1263  00000A                     ctoa@fp:
  1264                           	callstack 0
  1265  00000A                     fputs@s:
  1266                           	callstack 0
  1267  00000A                     strncmp@r:
  1268                           	callstack 0
  1269                           
  1270                           ; 2 bytes @ 0x9
  1271  00000A                     	ds	1
  1272  00000B                     ___fpclassifyf@u:
  1273                           	callstack 0
  1274                           
  1275                           ; 4 bytes @ 0xA
  1276  00000B                     	ds	1
  1277  00000C                     ctoa@c:
  1278                           	callstack 0
  1279  00000C                     fputs@fp:
  1280                           	callstack 0
  1281                           
  1282                           ; 2 bytes @ 0xB
  1283  00000C                     	ds	1
  1284  00000D                     ??_ctoa:
  1285  00000D                     ___fladd@signs:
  1286                           	callstack 0
  1287  00000D                     ___flmul@sign:
  1288                           	callstack 0
  1289  00000D                     _tolower$1252:
  1290                           	callstack 0
  1291  00000D                     _toupper$1267:
  1292                           	callstack 0
  1293  00000D                     ___fldiv@rem:
  1294                           	callstack 0
  1295                           
  1296                           ; 4 bytes @ 0xC
  1297  00000D                     	ds	1
  1298  00000E                     ___fladd@aexp:
  1299                           	callstack 0
  1300  00000E                     fputs@c:
  1301                           	callstack 0
  1302  00000E                     ctoa@l:
  1303                           	callstack 0
  1304  00000E                     atoi@neg:
  1305                           	callstack 0
  1306  00000E                     ___flmul@grs:
  1307                           	callstack 0
  1308                           
  1309                           ; 4 bytes @ 0xD
  1310  00000E                     	ds	1
  1311  00000F                     ___fladd@bexp:
  1312                           	callstack 0
  1313  00000F                     fputs@i:
  1314                           	callstack 0
  1315                           
  1316                           ; 2 bytes @ 0xE
  1317  00000F                     	ds	1
  1318  000010                     ___fladd@grs:
  1319                           	callstack 0
  1320  000010                     ctoa@w:
  1321                           	callstack 0
  1322  000010                     _atoi$1148:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0xF
  1326  000010                     	ds	1
  1327  000011                     ?_pad:
  1328                           	callstack 0
  1329  000011                     ___aodiv@counter:
  1330                           	callstack 0
  1331  000011                     ___aomod@counter:
  1332                           	callstack 0
  1333  000011                     ___fldiv@sign:
  1334                           	callstack 0
  1335  000011                     pad@fp:
  1336                           	callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x10
  1339  000011                     	ds	1
  1340  000012                     ___aodiv@sign:
  1341                           	callstack 0
  1342  000012                     ___aomod@sign:
  1343                           	callstack 0
  1344  000012                     ___flmul@aexp:
  1345                           	callstack 0
  1346  000012                     ___fldiv@new_exp:
  1347                           	callstack 0
  1348  000012                     _atoi$1150:
  1349                           	callstack 0
  1350                           
  1351                           ; 2 bytes @ 0x11
  1352  000012                     	ds	1
  1353  000013                     ?_abs:
  1354                           	callstack 0
  1355  000013                     ___flmul@bexp:
  1356                           	callstack 0
  1357  000013                     pad@buf:
  1358                           	callstack 0
  1359  000013                     abs@a:
  1360                           	callstack 0
  1361  000013                     ___aodiv@quotient:
  1362                           	callstack 0
  1363                           
  1364                           ; 8 bytes @ 0x12
  1365  000013                     	ds	1
  1366  000014                     _atoi$1149:
  1367                           	callstack 0
  1368  000014                     ___fldiv@grs:
  1369                           	callstack 0
  1370  000014                     ___flmul@prod:
  1371                           	callstack 0
  1372                           
  1373                           ; 4 bytes @ 0x13
  1374  000014                     	ds	1
  1375  000015                     ??_abs:
  1376  000015                     pad@p:
  1377                           	callstack 0
  1378  000015                     atoi@n:
  1379                           	callstack 0
  1380                           
  1381                           ; 2 bytes @ 0x14
  1382  000015                     	ds	2
  1383  000017                     ??_pad:
  1384                           
  1385                           ; 1 bytes @ 0x16
  1386  000017                     	ds	1
  1387  000018                     ___fldiv@bexp:
  1388                           	callstack 0
  1389  000018                     ___flmul@temp:
  1390                           	callstack 0
  1391  000018                     pad@i:
  1392                           	callstack 0
  1393                           
  1394                           ; 2 bytes @ 0x17
  1395  000018                     	ds	1
  1396  000019                     ___fldiv@aexp:
  1397                           	callstack 0
  1398                           
  1399                           ; 1 bytes @ 0x18
  1400  000019                     	ds	1
  1401  00001A                     ?___flsub:
  1402                           	callstack 0
  1403  00001A                     ?_floorf:
  1404                           	callstack 0
  1405  00001A                     pad@w:
  1406                           	callstack 0
  1407  00001A                     ___flge@ff1:
  1408                           	callstack 0
  1409  00001A                     ___flsub@b:
  1410                           	callstack 0
  1411  00001A                     floorf@x:
  1412                           	callstack 0
  1413                           
  1414                           ; 4 bytes @ 0x19
  1415  00001A                     	ds	2
  1416  00001C                     ?_dtoa:
  1417                           	callstack 0
  1418  00001C                     ?_xtoa:
  1419                           	callstack 0
  1420  00001C                     dtoa@fp:
  1421                           	callstack 0
  1422  00001C                     xtoa@fp:
  1423                           	callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x1B
  1426  00001C                     	ds	2
  1427  00001E                     ??_floorf:
  1428  00001E                     ___flge@ff2:
  1429                           	callstack 0
  1430  00001E                     ___flsub@a:
  1431                           	callstack 0
  1432  00001E                     dtoa@d:
  1433                           	callstack 0
  1434  00001E                     xtoa@d:
  1435                           	callstack 0
  1436                           
  1437                           ; 8 bytes @ 0x1D
  1438  00001E                     	ds	4
  1439  000022                     ??___flge:
  1440                           
  1441                           ; 1 bytes @ 0x21
  1442  000022                     	ds	2
  1443  000024                     floorf@m:
  1444                           	callstack 0
  1445                           
  1446                           ; 4 bytes @ 0x23
  1447  000024                     	ds	2
  1448  000026                     ??_dtoa:
  1449  000026                     xtoa@x:
  1450                           	callstack 0
  1451                           
  1452                           ; 1 bytes @ 0x25
  1453  000026                     	ds	1
  1454  000027                     ??_xtoa:
  1455                           
  1456                           ; 1 bytes @ 0x26
  1457  000027                     	ds	1
  1458  000028                     floorf@e:
  1459                           	callstack 0
  1460                           
  1461                           ; 2 bytes @ 0x27
  1462  000028                     	ds	2
  1463  00002A                     floorf@u:
  1464                           	callstack 0
  1465                           
  1466                           ; 4 bytes @ 0x29
  1467  00002A                     	ds	4
  1468  00002E                     ?_efgtoa:
  1469                           	callstack 0
  1470  00002E                     _dtoa$1027:
  1471                           	callstack 0
  1472  00002E                     efgtoa@fp:
  1473                           	callstack 0
  1474                           
  1475                           ; 2 bytes @ 0x2D
  1476  00002E                     	ds	1
  1477  00002F                     _xtoa$1072:
  1478                           	callstack 0
  1479                           
  1480                           ; 2 bytes @ 0x2E
  1481  00002F                     	ds	1
  1482  000030                     dtoa@p:
  1483                           	callstack 0
  1484  000030                     efgtoa@f:
  1485                           	callstack 0
  1486                           
  1487                           ; 4 bytes @ 0x2F
  1488  000030                     	ds	1
  1489  000031                     _xtoa$1073:
  1490                           	callstack 0
  1491                           
  1492                           ; 2 bytes @ 0x30
  1493  000031                     	ds	1
  1494  000032                     dtoa@w:
  1495                           	callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x31
  1498  000032                     	ds	1
  1499  000033                     xtoa@p:
  1500                           	callstack 0
  1501                           
  1502                           ; 2 bytes @ 0x32
  1503  000033                     	ds	1
  1504  000034                     efgtoa@c:
  1505                           	callstack 0
  1506  000034                     dtoa@s:
  1507                           	callstack 0
  1508                           
  1509                           ; 2 bytes @ 0x33
  1510  000034                     	ds	1
  1511  000035                     ??_efgtoa:
  1512  000035                     xtoa@w:
  1513                           	callstack 0
  1514                           
  1515                           ; 2 bytes @ 0x34
  1516  000035                     	ds	1
  1517  000036                     dtoa@n:
  1518                           	callstack 0
  1519                           
  1520                           ; 8 bytes @ 0x35
  1521  000036                     	ds	1
  1522  000037                     xtoa@n:
  1523                           	callstack 0
  1524                           
  1525                           ; 8 bytes @ 0x36
  1526  000037                     	ds	7
  1527  00003E                     dtoa@i:
  1528                           	callstack 0
  1529                           
  1530                           ; 2 bytes @ 0x3D
  1531  00003E                     	ds	1
  1532  00003F                     xtoa@i:
  1533                           	callstack 0
  1534                           
  1535                           ; 2 bytes @ 0x3E
  1536  00003F                     	ds	2
  1537  000041                     xtoa@c:
  1538                           	callstack 0
  1539                           
  1540                           ; 2 bytes @ 0x40
  1541  000041                     	ds	2
  1542  000043                     ?_vfpfcnvrt:
  1543                           	callstack 0
  1544  000043                     vfpfcnvrt@fp:
  1545                           	callstack 0
  1546                           
  1547                           ; 2 bytes @ 0x42
  1548  000043                     	ds	2
  1549  000045                     vfpfcnvrt@fmt:
  1550                           	callstack 0
  1551                           
  1552                           ; 2 bytes @ 0x44
  1553  000045                     	ds	2
  1554  000047                     vfpfcnvrt@ap:
  1555                           	callstack 0
  1556                           
  1557                           ; 2 bytes @ 0x46
  1558  000047                     	ds	2
  1559  000049                     ??_vfpfcnvrt:
  1560                           
  1561                           ; 1 bytes @ 0x48
  1562  000049                     	ds	14
  1563  000057                     vfprintf@cfmt:
  1564                           	callstack 0
  1565                           
  1566                           ; 2 bytes @ 0x56
  1567  000057                     	ds	2
  1568  000059                     
  1569                           ; 1 bytes @ 0x58
  1570  000059                     	ds	1
  1571  00005A                     main@i:
  1572                           	callstack 0
  1573                           
  1574                           ; 2 bytes @ 0x59
  1575  00005A                     	ds	2
  1576  00005C                     main@ptr:
  1577                           	callstack 0
  1578                           
  1579                           ; 2 bytes @ 0x5B
  1580  00005C                     	ds	2
  1581                           
  1582                           	psect	cstackCOMRAMl
  1583  00005E                     __pcstackCOMRAMl:
  1584                           	callstack 0
  1585  00005E                     vfpfcnvrt@done:
  1586                           	callstack 0
  1587                           
  1588                           ; 2 bytes @ 0x0
  1589  00005E                     	ds	2
  1590  000060                     _vfpfcnvrt$1087:
  1591                           	callstack 0
  1592                           
  1593                           ; 2 bytes @ 0x2
  1594  000060                     	ds	2
  1595  000062                     _vfpfcnvrt$1098:
  1596                           	callstack 0
  1597                           
  1598                           ; 2 bytes @ 0x4
  1599  000062                     	ds	2
  1600  000064                     vfpfcnvrt@ll:
  1601                           	callstack 0
  1602                           
  1603                           ; 8 bytes @ 0x6
  1604  000064                     	ds	8
  1605  00006C                     vfpfcnvrt@llu:
  1606                           	callstack 0
  1607                           
  1608                           ; 8 bytes @ 0xE
  1609  00006C                     	ds	8
  1610  000074                     vfpfcnvrt@f:
  1611                           	callstack 0
  1612                           
  1613                           ; 4 bytes @ 0x16
  1614  000074                     	ds	4
  1615  000078                     vfpfcnvrt@ct:
  1616                           	callstack 0
  1617                           
  1618                           ; 3 bytes @ 0x1A
  1619  000078                     	ds	3
  1620  00007B                     vfpfcnvrt@c:
  1621                           	callstack 0
  1622                           
  1623                           ; 1 bytes @ 0x1D
  1624  00007B                     	ds	1
  1625                           
  1626 ;; *************** function _sprintf *****************
  1627 ;; Defined at:
  1628 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  s               2   62[BANK0h] PTR unsigned char 
  1631 ;;		 -> buffer(200), 
  1632 ;;  fmt             2   64[BANK0h] PTR const unsigned char 
  1633 ;;		 -> STR_13(3), STR_12(20), STR_11(27), STR_10(34), 
  1634 ;;		 -> STR_9(8), STR_8(14), STR_7(41), STR_6(42), 
  1635 ;;		 -> STR_5(33), STR_4(41), STR_3(38), STR_2(33), 
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  f               6   84[BANK0h] struct _IO_FILE
  1638 ;;  ap              2   82[BANK0h] PTR void [1]
  1639 ;;		 -> ?_sprintf(2), 
  1640 ;;  ret             2    0        int 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  2   62[BANK0h] int 
  1643 ;; Registers used:
  1644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  1650 ;;      Params:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1651 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1653 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1654 ;;Total ram usage:       28 bytes
  1655 ;; Hardware stack levels used: 1
  1656 ;; Hardware stack levels required when called: 7
  1657 ;; This function calls:
  1658 ;;		_vfprintf
  1659 ;; This function is called by:
  1660 ;;		_main
  1661 ;;		_print_structure
  1662 ;;		_print_union
  1663 ;;		_print_byte
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text1
  1668  00C3F2                     __ptext1:
  1669                           	callstack 0
  1670  00C3F2                     _sprintf:
  1671                           	callstack 23
  1672  00C3F2  0ED8               	movlw	low (?_sprintf+4)
  1673  00C3F4  0100               	movlb	0	; () banked
  1674  00C3F6  6FE8               	movwf	sprintf@ap& (0+255),b
  1675  00C3F8  0E00               	movlw	high (?_sprintf+4)
  1676  00C3FA  6FE9               	movwf	(sprintf@ap+1)& (0+255),b
  1677  00C3FC  C0D4  F0EA         	movff	sprintf@s,sprintf@f
  1678  00C400  C0D5  F0EB         	movff	sprintf@s+1,sprintf@f+1
  1679  00C404                     
  1680                           ; BSR set to: 0
  1681  00C404  0E00               	movlw	0
  1682  00C406  6FED               	movwf	(sprintf@f+3)& (0+255),b
  1683  00C408  0E00               	movlw	0
  1684  00C40A  6FEC               	movwf	(sprintf@f+2)& (0+255),b
  1685  00C40C                     
  1686                           ; BSR set to: 0
  1687  00C40C  0E00               	movlw	0
  1688  00C40E  6FEF               	movwf	(sprintf@f+5)& (0+255),b
  1689  00C410  0E00               	movlw	0
  1690  00C412  6FEE               	movwf	(sprintf@f+4)& (0+255),b
  1691  00C414                     
  1692                           ; BSR set to: 0
  1693  00C414  0EEA               	movlw	low sprintf@f
  1694  00C416  6FCE               	movwf	vfprintf@fp& (0+255),b
  1695  00C418  0E00               	movlw	high sprintf@f
  1696  00C41A  6FCF               	movwf	(vfprintf@fp+1)& (0+255),b
  1697  00C41C  C0D6  F0D0         	movff	sprintf@fmt,vfprintf@fmt
  1698  00C420  C0D7  F0D1         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1699  00C424  0EE8               	movlw	low sprintf@ap
  1700  00C426  6FD2               	movwf	vfprintf@ap& (0+255),b
  1701  00C428  0E00               	movlw	high sprintf@ap
  1702  00C42A  6FD3               	movwf	(vfprintf@ap+1)& (0+255),b
  1703  00C42C  ECE1  F062         	call	_vfprintf	;wreg free
  1704  00C430  0100               	movlb	0	; () banked
  1705  00C432  51EC               	movf	(sprintf@f+2)& (0+255),w,b
  1706  00C434  25D4               	addwf	sprintf@s& (0+255),w,b
  1707  00C436  6ED9               	movwf	fsr2l,c
  1708  00C438  51ED               	movf	(sprintf@f+3)& (0+255),w,b
  1709  00C43A  21D5               	addwfc	(sprintf@s+1)& (0+255),w,b
  1710  00C43C  6EDA               	movwf	fsr2h,c
  1711  00C43E  0E00               	movlw	0
  1712  00C440  6EDF               	movwf	indf2,c
  1713  00C442                     
  1714                           ; BSR set to: 0
  1715  00C442  0012               	return		;funcret
  1716  00C444                     __end_of_sprintf:
  1717                           	callstack 0
  1718                           
  1719 ;; *************** function _vfprintf *****************
  1720 ;; Defined at:
  1721 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  fp              2   56[BANK0h] PTR struct _IO_FILE
  1724 ;;		 -> sprintf@f(6), 
  1725 ;;  fmt             2   58[BANK0h] PTR const unsigned char 
  1726 ;;		 -> STR_13(3), STR_12(20), STR_11(27), STR_10(34), 
  1727 ;;		 -> STR_9(8), STR_8(14), STR_7(41), STR_6(42), 
  1728 ;;		 -> STR_5(33), STR_4(41), STR_3(38), STR_2(33), 
  1729 ;;  ap              2   60[BANK0h] PTR PTR void 
  1730 ;;		 -> sprintf@ap(2), 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1733 ;;		 -> STR_13(3), STR_12(20), STR_11(27), STR_10(34), 
  1734 ;;		 -> STR_9(8), STR_8(14), STR_7(41), STR_6(42), 
  1735 ;;		 -> STR_5(33), STR_4(41), STR_3(38), STR_2(33), 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  2   56[BANK0h] int 
  1738 ;; Registers used:
  1739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  1745 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1746 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1748 ;;      Totals:         2       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1749 ;;Total ram usage:        8 bytes
  1750 ;; Hardware stack levels used: 1
  1751 ;; Hardware stack levels required when called: 6
  1752 ;; This function calls:
  1753 ;;		_vfpfcnvrt
  1754 ;; This function is called by:
  1755 ;;		_sprintf
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text2
  1760  00C5C2                     __ptext2:
  1761                           	callstack 0
  1762  00C5C2                     _vfprintf:
  1763                           	callstack 23
  1764  00C5C2                     
  1765                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1766  00C5C2  C0D0  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1767  00C5C6  C0D1  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1768  00C5CA                     
  1769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1770  00C5CA  0E00               	movlw	0
  1771  00C5CC  0100               	movlb	0	; () banked
  1772  00C5CE  6FFA               	movwf	(_nout+1)& (0+255),b
  1773  00C5D0  0E00               	movlw	0
  1774  00C5D2  6FF9               	movwf	_nout& (0+255),b
  1775                           
  1776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1777  00C5D4  EFFF  F062         	goto	l4698
  1778  00C5D8                     l4696:
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1782  00C5D8  C0CE  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1783  00C5DC  C0CF  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1784  00C5E0  0E57               	movlw	low vfprintf@cfmt
  1785  00C5E2  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1786  00C5E4  0E00               	movlw	high vfprintf@cfmt
  1787  00C5E6  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1788  00C5E8  C0D2  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1789  00C5EC  C0D3  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1790  00C5F0  EC97  F074         	call	_vfpfcnvrt	;wreg free
  1791  00C5F4  5043               	movf	?_vfpfcnvrt^0,w,c
  1792  00C5F6  0100               	movlb	0	; () banked
  1793  00C5F8  27F9               	addwf	_nout& (0+255),f,b
  1794  00C5FA  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1795  00C5FC  23FA               	addwfc	(_nout+1)& (0+255),f,b
  1796  00C5FE                     l4698:
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1800  00C5FE  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1801  00C602  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1802  00C606                     	if	0	;tblptru may be non-zero
  1803  00C606                     	endif
  1804  00C606                     	if	0	;tblptru may be non-zero
  1805  00C606                     	endif
  1806  00C606  0008               	tblrd		*
  1807  00C608  50F5               	movf	tablat,w,c
  1808  00C60A  0900               	iorlw	0
  1809  00C60C  A4D8               	btfss	status,2,c
  1810  00C60E  EF0B  F063         	goto	u6281
  1811  00C612  EF0D  F063         	goto	u6280
  1812  00C616                     u6281:
  1813  00C616  EFEC  F062         	goto	l4696
  1814  00C61A                     u6280:
  1815  00C61A                     
  1816                           ; BSR set to: 0
  1817                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1818  00C61A  C0F9  F0CE         	movff	_nout,?_vfprintf
  1819  00C61E  C0FA  F0CF         	movff	_nout+1,?_vfprintf+1
  1820  00C622                     
  1821                           ; BSR set to: 0
  1822  00C622  0012               	return		;funcret
  1823  00C624                     __end_of_vfprintf:
  1824                           	callstack 0
  1825                           
  1826 ;; *************** function _vfpfcnvrt *****************
  1827 ;; Defined at:
  1828 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1831 ;;		 -> sprintf@f(6), 
  1832 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1833 ;;		 -> vfprintf@cfmt(2), 
  1834 ;;  ap              2   70[COMRAM] PTR PTR void 
  1835 ;;		 -> sprintf@ap(2), 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;  llu             8   14[COMRAM] unsigned long long 
  1838 ;;  ll              8    6[COMRAM] long long 
  1839 ;;  f               4   22[COMRAM] long long 
  1840 ;;  ct              3   26[COMRAM] unsigned char [3]
  1841 ;;  vp              3    0        PTR void 
  1842 ;;  cp              3    0        PTR unsigned char 
  1843 ;;  done            2    0[COMRAM] int 
  1844 ;;  i               2    0        int 
  1845 ;;  c               1   29[COMRAM] unsigned char 
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  2   66[COMRAM] int 
  1848 ;; Registers used:
  1849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  1855 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1856 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1857 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1858 ;;      Totals:        20      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1859 ;;Total ram usage:       50 bytes
  1860 ;; Hardware stack levels used: 1
  1861 ;; Hardware stack levels required when called: 5
  1862 ;; This function calls:
  1863 ;;		_atoi
  1864 ;;		_ctoa
  1865 ;;		_dtoa
  1866 ;;		_efgtoa
  1867 ;;		_fputc
  1868 ;;		_isdigit
  1869 ;;		_isupper
  1870 ;;		_strncmp
  1871 ;;		_tolower
  1872 ;;		_xtoa
  1873 ;; This function is called by:
  1874 ;;		_vfprintf
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text3
  1879  00E92E                     __ptext3:
  1880                           	callstack 0
  1881  00E92E                     _vfpfcnvrt:
  1882                           	callstack 23
  1883  00E92E                     
  1884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1885  00E92E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1886  00E932  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1887  00E936  CFDE FFF6          	movff	postinc2,tblptrl
  1888  00E93A  CFDD FFF7          	movff	postdec2,tblptrh
  1889  00E93E                     	if	0	;tblptru may be non-zero
  1890  00E93E                     	endif
  1891  00E93E                     	if	0	;tblptru may be non-zero
  1892  00E93E                     	endif
  1893  00E93E  0008               	tblrd		*
  1894  00E940  50F5               	movf	tablat,w,c
  1895  00E942  0A25               	xorlw	37
  1896  00E944  A4D8               	btfss	status,2,c
  1897  00E946  EFA7  F074         	goto	u6001
  1898  00E94A  EFA9  F074         	goto	u6000
  1899  00E94E                     u6001:
  1900  00E94E  EFF7  F078         	goto	l4672
  1901  00E952                     u6000:
  1902  00E952                     
  1903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1904  00E952  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1905  00E956  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1906  00E95A  2ADE               	incf	postinc2,f,c
  1907  00E95C  0E00               	movlw	0
  1908  00E95E  22DD               	addwfc	postdec2,f,c
  1909  00E960                     
  1910                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1911  00E960  0E00               	movlw	0
  1912  00E962  0100               	movlb	0	; () banked
  1913  00E964  6FFC               	movwf	(_width+1)& (0+255),b
  1914  00E966  0E00               	movlw	0
  1915  00E968  6FFB               	movwf	_width& (0+255),b
  1916  00E96A  C0FB  F07C         	movff	_width,_flags
  1917  00E96E  C0FC  F07D         	movff	_width+1,_flags+1
  1918  00E972                     
  1919                           ; BSR set to: 0
  1920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1921  00E972  69FD               	setf	_prec& (0+255),b
  1922  00E974  69FE               	setf	(_prec+1)& (0+255),b
  1923  00E976                     
  1924                           ; BSR set to: 0
  1925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1926  00E976  0E00               	movlw	0
  1927  00E978  6E5F               	movwf	(vfpfcnvrt@done+1)^0,c
  1928  00E97A  0E00               	movlw	0
  1929  00E97C  6E5E               	movwf	vfpfcnvrt@done^0,c
  1930                           
  1931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1932  00E97E  EF07  F075         	goto	l4540
  1933  00E982                     l4514:
  1934                           
  1935                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1936  00E982  807C               	bsf	_flags^0,0,c
  1937  00E984                     l4516:
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1940  00E984  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1941  00E988  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1942  00E98C  2ADE               	incf	postinc2,f,c
  1943  00E98E  0E00               	movlw	0
  1944  00E990  22DD               	addwfc	postdec2,f,c
  1945                           
  1946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1947  00E992  EF07  F075         	goto	l4540
  1948  00E996                     l4518:
  1949                           
  1950                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1951  00E996  827C               	bsf	_flags^0,1,c
  1952  00E998  EFC2  F074         	goto	l4516
  1953  00E99C                     l4522:
  1954                           
  1955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1956  00E99C  847C               	bsf	_flags^0,2,c
  1957  00E99E  EFC2  F074         	goto	l4516
  1958  00E9A2                     l4526:
  1959                           
  1960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1961  00E9A2  867C               	bsf	_flags^0,3,c
  1962  00E9A4  EFC2  F074         	goto	l4516
  1963  00E9A8                     l4530:
  1964                           
  1965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1966  00E9A8  887C               	bsf	_flags^0,4,c
  1967  00E9AA  EFC2  F074         	goto	l4516
  1968  00E9AE                     l4534:
  1969                           
  1970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1971  00E9AE  0E00               	movlw	0
  1972  00E9B0  6E5F               	movwf	(vfpfcnvrt@done+1)^0,c
  1973  00E9B2  0E01               	movlw	1
  1974  00E9B4  6E5E               	movwf	vfpfcnvrt@done^0,c
  1975                           
  1976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1977  00E9B6  EF07  F075         	goto	l4540
  1978  00E9BA                     l4538:
  1979  00E9BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1980  00E9BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1981  00E9C2  CFDE FFF6          	movff	postinc2,tblptrl
  1982  00E9C6  CFDD FFF7          	movff	postdec2,tblptrh
  1983  00E9CA                     	if	0	;tblptru may be non-zero
  1984  00E9CA                     	endif
  1985  00E9CA                     	if	0	;tblptru may be non-zero
  1986  00E9CA                     	endif
  1987  00E9CA  0008               	tblrd		*
  1988  00E9CC  50F5               	movf	tablat,w,c
  1989  00E9CE  6E49               	movwf	??_vfpfcnvrt^0,c
  1990  00E9D0  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1991                           
  1992                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1993                           ; Switch size 1, requested type "simple"
  1994                           ; Number of cases is 1, Range of values is 0 to 0
  1995                           ; switch strategies available:
  1996                           ; Name         Instructions Cycles
  1997                           ; simple_byte            4     3 (average)
  1998                           ;	Chosen strategy is simple_byte
  1999  00E9D2  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2000  00E9D4  0A00               	xorlw	0	; case 0
  2001  00E9D6  B4D8               	btfsc	status,2,c
  2002  00E9D8  EFF0  F074         	goto	l4914
  2003  00E9DC  EFD7  F074         	goto	l4534
  2004  00E9E0                     l4914:
  2005                           
  2006                           ; Switch size 1, requested type "simple"
  2007                           ; Number of cases is 5, Range of values is 32 to 48
  2008                           ; switch strategies available:
  2009                           ; Name         Instructions Cycles
  2010                           ; simple_byte           16     9 (average)
  2011                           ;	Chosen strategy is simple_byte
  2012  00E9E0  5049               	movf	??_vfpfcnvrt^0,w,c
  2013  00E9E2  0A20               	xorlw	32	; case 32
  2014  00E9E4  B4D8               	btfsc	status,2,c
  2015  00E9E6  EFD1  F074         	goto	l4526
  2016  00E9EA  0A03               	xorlw	3	; case 35
  2017  00E9EC  B4D8               	btfsc	status,2,c
  2018  00E9EE  EFD4  F074         	goto	l4530
  2019  00E9F2  0A08               	xorlw	8	; case 43
  2020  00E9F4  B4D8               	btfsc	status,2,c
  2021  00E9F6  EFCE  F074         	goto	l4522
  2022  00E9FA  0A06               	xorlw	6	; case 45
  2023  00E9FC  B4D8               	btfsc	status,2,c
  2024  00E9FE  EFC1  F074         	goto	l4514
  2025  00EA02  0A1D               	xorlw	29	; case 48
  2026  00EA04  B4D8               	btfsc	status,2,c
  2027  00EA06  EFCB  F074         	goto	l4518
  2028  00EA0A  EFD7  F074         	goto	l4534
  2029  00EA0E                     l4540:
  2030                           
  2031                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2032  00EA0E  505E               	movf	vfpfcnvrt@done^0,w,c
  2033  00EA10  105F               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  2034  00EA12  B4D8               	btfsc	status,2,c
  2035  00EA14  EF0E  F075         	goto	u6011
  2036  00EA18  EF10  F075         	goto	u6010
  2037  00EA1C                     u6011:
  2038  00EA1C  EFDD  F074         	goto	l4538
  2039  00EA20                     u6010:
  2040  00EA20                     
  2041                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2042  00EA20  A07C               	btfss	_flags^0,0,c
  2043  00EA22  EF15  F075         	goto	u6021
  2044  00EA26  EF17  F075         	goto	u6020
  2045  00EA2A                     u6021:
  2046  00EA2A  EF18  F075         	goto	l4544
  2047  00EA2E                     u6020:
  2048  00EA2E                     
  2049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2050  00EA2E  927C               	bcf	_flags^0,1,c
  2051  00EA30                     l4544:
  2052                           
  2053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2054  00EA30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2055  00EA34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2056  00EA38  CFDE FFF6          	movff	postinc2,tblptrl
  2057  00EA3C  CFDD FFF7          	movff	postdec2,tblptrh
  2058  00EA40                     	if	0	;tblptru may be non-zero
  2059  00EA40                     	endif
  2060  00EA40                     	if	0	;tblptru may be non-zero
  2061  00EA40                     	endif
  2062  00EA40  0008               	tblrd		*
  2063  00EA42  50F5               	movf	tablat,w,c
  2064  00EA44  0A2A               	xorlw	42
  2065  00EA46  A4D8               	btfss	status,2,c
  2066  00EA48  EF28  F075         	goto	u6031
  2067  00EA4C  EF2A  F075         	goto	u6030
  2068  00EA50                     u6031:
  2069  00EA50  EF54  F075         	goto	l4552
  2070  00EA54                     u6030:
  2071  00EA54                     
  2072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2073  00EA54  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2074  00EA58  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2075  00EA5C  2ADE               	incf	postinc2,f,c
  2076  00EA5E  0E00               	movlw	0
  2077  00EA60  22DD               	addwfc	postdec2,f,c
  2078                           
  2079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2080  00EA62  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2081  00EA66  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2082  00EA6A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2083  00EA6E  0E02               	movlw	2
  2084  00EA70  26DE               	addwf	postinc2,f,c
  2085  00EA72  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2086  00EA76  0E00               	movlw	0
  2087  00EA78  22DD               	addwfc	postdec2,f,c
  2088  00EA7A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2089  00EA7E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2090  00EA82  CFDE F0FB          	movff	postinc2,_width
  2091  00EA86  CFDD F0FC          	movff	postdec2,_width+1
  2092  00EA8A                     
  2093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2094  00EA8A  0100               	movlb	0	; () banked
  2095  00EA8C  BFFC               	btfsc	(_width+1)& (0+255),7,b
  2096  00EA8E  EF4D  F075         	goto	u6040
  2097  00EA92  EF4B  F075         	goto	u6041
  2098  00EA96                     u6041:
  2099  00EA96  EF97  F075         	goto	l4562
  2100  00EA9A                     u6040:
  2101  00EA9A                     
  2102                           ; BSR set to: 0
  2103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2104  00EA9A  807C               	bsf	_flags^0,0,c
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2107  00EA9C  6DFB               	negf	_width& (0+255),b
  2108  00EA9E  1FFC               	comf	(_width+1)& (0+255),f,b
  2109  00EAA0  B0D8               	btfsc	status,0,c
  2110  00EAA2  2BFC               	incf	(_width+1)& (0+255),f,b
  2111  00EAA4  EF97  F075         	goto	l4562
  2112  00EAA8                     l4552:
  2113                           
  2114                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2115  00EAA8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2116  00EAAC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2117  00EAB0  CFDE F008          	movff	postinc2,atoi@s
  2118  00EAB4  CFDD F009          	movff	postdec2,atoi@s+1
  2119  00EAB8  ECDC  F068         	call	_atoi	;wreg free
  2120  00EABC  C008  F0FB         	movff	?_atoi,_width
  2121  00EAC0  C009  F0FC         	movff	?_atoi+1,_width+1
  2122                           
  2123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2124  00EAC4  EF6B  F075         	goto	l4556
  2125  00EAC8                     l4554:
  2126                           
  2127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2128  00EAC8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2129  00EACC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2130  00EAD0  2ADE               	incf	postinc2,f,c
  2131  00EAD2  0E00               	movlw	0
  2132  00EAD4  22DD               	addwfc	postdec2,f,c
  2133  00EAD6                     l4556:
  2134  00EAD6  0ED0               	movlw	208
  2135  00EAD8  6E49               	movwf	??_vfpfcnvrt^0,c
  2136  00EADA  0EFF               	movlw	255
  2137  00EADC  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  2138  00EADE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2139  00EAE2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2140  00EAE6  CFDE FFF6          	movff	postinc2,tblptrl
  2141  00EAEA  CFDD FFF7          	movff	postdec2,tblptrh
  2142  00EAEE                     	if	0	;tblptru may be non-zero
  2143  00EAEE                     	endif
  2144  00EAEE                     	if	0	;tblptru may be non-zero
  2145  00EAEE                     	endif
  2146  00EAEE  0008               	tblrd		*
  2147  00EAF0  50F5               	movf	tablat,w,c
  2148  00EAF2  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  2149  00EAF4  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  2150  00EAF6  5049               	movf	??_vfpfcnvrt^0,w,c
  2151  00EAF8  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2152  00EAFA  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2153  00EAFC  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2154  00EAFE  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  2155  00EB00  E10A               	bnz	u6050
  2156  00EB02  0E0A               	movlw	10
  2157  00EB04  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2158  00EB06  A0D8               	btfss	status,0,c
  2159  00EB08  EF88  F075         	goto	u6051
  2160  00EB0C  EF8B  F075         	goto	u6050
  2161  00EB10                     u6051:
  2162  00EB10  0E01               	movlw	1
  2163  00EB12  EF8C  F075         	goto	u6060
  2164  00EB16                     u6050:
  2165  00EB16  0E00               	movlw	0
  2166  00EB18                     u6060:
  2167  00EB18  6E60               	movwf	_vfpfcnvrt$1087^0,c
  2168  00EB1A  6A61               	clrf	(_vfpfcnvrt$1087+1)^0,c
  2169  00EB1C  5060               	movf	_vfpfcnvrt$1087^0,w,c
  2170  00EB1E  1061               	iorwf	(_vfpfcnvrt$1087+1)^0,w,c
  2171  00EB20  A4D8               	btfss	status,2,c
  2172  00EB22  EF95  F075         	goto	u6071
  2173  00EB26  EF97  F075         	goto	u6070
  2174  00EB2A                     u6071:
  2175  00EB2A  EF64  F075         	goto	l4554
  2176  00EB2E                     u6070:
  2177  00EB2E                     l4562:
  2178                           
  2179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2180  00EB2E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2181  00EB32  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2182  00EB36  CFDE FFF6          	movff	postinc2,tblptrl
  2183  00EB3A  CFDD FFF7          	movff	postdec2,tblptrh
  2184  00EB3E                     	if	0	;tblptru may be non-zero
  2185  00EB3E                     	endif
  2186  00EB3E                     	if	0	;tblptru may be non-zero
  2187  00EB3E                     	endif
  2188  00EB3E  0008               	tblrd		*
  2189  00EB40  50F5               	movf	tablat,w,c
  2190  00EB42  6E07               	movwf	tolower@c^0,c
  2191  00EB44  6A08               	clrf	(tolower@c+1)^0,c
  2192  00EB46  EC80  F062         	call	_tolower	;wreg free
  2193  00EB4A  5007               	movf	?_tolower^0,w,c
  2194  00EB4C  6E78               	movwf	vfpfcnvrt@ct^0,c
  2195  00EB4E                     
  2196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2197  00EB4E  5078               	movf	vfpfcnvrt@ct^0,w,c
  2198  00EB50  B4D8               	btfsc	status,2,c
  2199  00EB52  EFAD  F075         	goto	u6081
  2200  00EB56  EFAF  F075         	goto	u6080
  2201  00EB5A                     u6081:
  2202  00EB5A  EFE7  F075         	goto	l4572
  2203  00EB5E                     u6080:
  2204  00EB5E                     
  2205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2206  00EB5E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2207  00EB62  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2208  00EB66  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  2209  00EB6A  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  2210  00EB6E  0E01               	movlw	1
  2211  00EB70  2649               	addwf	??_vfpfcnvrt^0,f,c
  2212  00EB72  0E00               	movlw	0
  2213  00EB74  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2214  00EB76  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2215  00EB7A  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2216  00EB7E                     	if	0	;tblptru may be non-zero
  2217  00EB7E                     	endif
  2218  00EB7E                     	if	0	;tblptru may be non-zero
  2219  00EB7E                     	endif
  2220  00EB7E  0008               	tblrd		*
  2221  00EB80  50F5               	movf	tablat,w,c
  2222  00EB82  6E07               	movwf	tolower@c^0,c
  2223  00EB84  6A08               	clrf	(tolower@c+1)^0,c
  2224  00EB86  EC80  F062         	call	_tolower	;wreg free
  2225  00EB8A  5007               	movf	?_tolower^0,w,c
  2226  00EB8C  6E79               	movwf	(vfpfcnvrt@ct+1)^0,c
  2227  00EB8E                     
  2228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2229  00EB8E  5079               	movf	(vfpfcnvrt@ct+1)^0,w,c
  2230  00EB90  B4D8               	btfsc	status,2,c
  2231  00EB92  EFCD  F075         	goto	u6091
  2232  00EB96  EFCF  F075         	goto	u6090
  2233  00EB9A                     u6091:
  2234  00EB9A  EFE7  F075         	goto	l4572
  2235  00EB9E                     u6090:
  2236  00EB9E                     
  2237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2238  00EB9E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2239  00EBA2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2240  00EBA6  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  2241  00EBAA  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  2242  00EBAE  0E02               	movlw	2
  2243  00EBB0  2649               	addwf	??_vfpfcnvrt^0,f,c
  2244  00EBB2  0E00               	movlw	0
  2245  00EBB4  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2246  00EBB6  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2247  00EBBA  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2248  00EBBE                     	if	0	;tblptru may be non-zero
  2249  00EBBE                     	endif
  2250  00EBBE                     	if	0	;tblptru may be non-zero
  2251  00EBBE                     	endif
  2252  00EBBE  0008               	tblrd		*
  2253  00EBC0  50F5               	movf	tablat,w,c
  2254  00EBC2  6E07               	movwf	tolower@c^0,c
  2255  00EBC4  6A08               	clrf	(tolower@c+1)^0,c
  2256  00EBC6  EC80  F062         	call	_tolower	;wreg free
  2257  00EBCA  5007               	movf	?_tolower^0,w,c
  2258  00EBCC  6E7A               	movwf	(vfpfcnvrt@ct+2)^0,c
  2259  00EBCE                     l4572:
  2260                           
  2261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2262  00EBCE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2263  00EBD2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2264  00EBD6  CFDE FFF6          	movff	postinc2,tblptrl
  2265  00EBDA  CFDD FFF7          	movff	postdec2,tblptrh
  2266  00EBDE                     	if	0	;tblptru may be non-zero
  2267  00EBDE                     	endif
  2268  00EBDE                     	if	0	;tblptru may be non-zero
  2269  00EBDE                     	endif
  2270  00EBDE  0008               	tblrd		*
  2271  00EBE0  50F5               	movf	tablat,w,c
  2272  00EBE2  0A63               	xorlw	99
  2273  00EBE4  A4D8               	btfss	status,2,c
  2274  00EBE6  EFF7  F075         	goto	u6101
  2275  00EBEA  EFF9  F075         	goto	u6100
  2276  00EBEE                     u6101:
  2277  00EBEE  EF20  F076         	goto	l4580
  2278  00EBF2                     u6100:
  2279  00EBF2                     
  2280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2281  00EBF2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2282  00EBF6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2283  00EBFA  2ADE               	incf	postinc2,f,c
  2284  00EBFC  0E00               	movlw	0
  2285  00EBFE  22DD               	addwfc	postdec2,f,c
  2286                           
  2287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2288  00EC00  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2289  00EC04  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2290  00EC08  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2291  00EC0C  0E02               	movlw	2
  2292  00EC0E  26DE               	addwf	postinc2,f,c
  2293  00EC10  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2294  00EC14  0E00               	movlw	0
  2295  00EC16  22DD               	addwfc	postdec2,f,c
  2296  00EC18  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2297  00EC1C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2298  00EC20  50DF               	movf	indf2,w,c
  2299  00EC22  6E7B               	movwf	vfpfcnvrt@c^0,c
  2300  00EC24                     
  2301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2302  00EC24  C043  F00A         	movff	vfpfcnvrt@fp,ctoa@fp
  2303  00EC28  C044  F00B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2304  00EC2C  C07B  F00C         	movff	vfpfcnvrt@c,ctoa@c
  2305  00EC30  ECE7  F064         	call	_ctoa	;wreg free
  2306  00EC34  C00A  F043         	movff	?_ctoa,?_vfpfcnvrt
  2307  00EC38  C00B  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2308  00EC3C  EF12  F079         	goto	l1057
  2309  00EC40                     l4580:
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2312  00EC40  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2313  00EC44  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2314  00EC48  CFDE FFF6          	movff	postinc2,tblptrl
  2315  00EC4C  CFDD FFF7          	movff	postdec2,tblptrh
  2316  00EC50                     	if	0	;tblptru may be non-zero
  2317  00EC50                     	endif
  2318  00EC50                     	if	0	;tblptru may be non-zero
  2319  00EC50                     	endif
  2320  00EC50  0008               	tblrd		*
  2321  00EC52  50F5               	movf	tablat,w,c
  2322  00EC54  0A64               	xorlw	100
  2323  00EC56  B4D8               	btfsc	status,2,c
  2324  00EC58  EF30  F076         	goto	u6111
  2325  00EC5C  EF32  F076         	goto	u6110
  2326  00EC60                     u6111:
  2327  00EC60  EF44  F076         	goto	l4584
  2328  00EC64                     u6110:
  2329  00EC64  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2330  00EC68  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2331  00EC6C  CFDE FFF6          	movff	postinc2,tblptrl
  2332  00EC70  CFDD FFF7          	movff	postdec2,tblptrh
  2333  00EC74                     	if	0	;tblptru may be non-zero
  2334  00EC74                     	endif
  2335  00EC74                     	if	0	;tblptru may be non-zero
  2336  00EC74                     	endif
  2337  00EC74  0008               	tblrd		*
  2338  00EC76  50F5               	movf	tablat,w,c
  2339  00EC78  0A69               	xorlw	105
  2340  00EC7A  A4D8               	btfss	status,2,c
  2341  00EC7C  EF42  F076         	goto	u6121
  2342  00EC80  EF44  F076         	goto	u6120
  2343  00EC84                     u6121:
  2344  00EC84  EF84  F076         	goto	l4590
  2345  00EC88                     u6120:
  2346  00EC88                     l4584:
  2347                           
  2348                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2349  00EC88  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2350  00EC8C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2351  00EC90  2ADE               	incf	postinc2,f,c
  2352  00EC92  0E00               	movlw	0
  2353  00EC94  22DD               	addwfc	postdec2,f,c
  2354                           
  2355                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2356  00EC96  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2357  00EC9A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2358  00EC9E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2359  00ECA2  0E02               	movlw	2
  2360  00ECA4  26DE               	addwf	postinc2,f,c
  2361  00ECA6  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2362  00ECAA  0E00               	movlw	0
  2363  00ECAC  22DD               	addwfc	postdec2,f,c
  2364  00ECAE  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2365  00ECB2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2366  00ECB6  CFDE F064          	movff	postinc2,vfpfcnvrt@ll
  2367  00ECBA  CFDD F065          	movff	postdec2,vfpfcnvrt@ll+1
  2368  00ECBE  0E00               	movlw	0
  2369  00ECC0  BE65               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2370  00ECC2  0EFF               	movlw	-1
  2371  00ECC4  6E66               	movwf	(vfpfcnvrt@ll+2)^0,c
  2372  00ECC6  6E67               	movwf	(vfpfcnvrt@ll+3)^0,c
  2373  00ECC8  6E68               	movwf	(vfpfcnvrt@ll+4)^0,c
  2374  00ECCA  6E69               	movwf	(vfpfcnvrt@ll+5)^0,c
  2375  00ECCC  6E6A               	movwf	(vfpfcnvrt@ll+6)^0,c
  2376  00ECCE  6E6B               	movwf	(vfpfcnvrt@ll+7)^0,c
  2377  00ECD0                     l4586:
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2380  00ECD0  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2381  00ECD4  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2382  00ECD8  C064  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2383  00ECDC  C065  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2384  00ECE0  C066  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2385  00ECE4  C067  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2386  00ECE8  C068  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2387  00ECEC  C069  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2388  00ECF0  C06A  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2389  00ECF4  C06B  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2390  00ECF8  ECE5  F06C         	call	_dtoa	;wreg free
  2391  00ECFC  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  2392  00ED00  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2393  00ED04  EF12  F079         	goto	l1057
  2394  00ED08                     l4590:
  2395                           
  2396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 857:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
  2397  00ED08  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2398  00ED0C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2399  00ED10  CFDE F001          	movff	postinc2,strncmp@_l
  2400  00ED14  CFDD F002          	movff	postdec2,strncmp@_l+1
  2401  00ED18  0EF2               	movlw	low STR_22
  2402  00ED1A  6E03               	movwf	strncmp@_r^0,c
  2403  00ED1C  0EFF               	movlw	high STR_22
  2404  00ED1E  6E04               	movwf	(strncmp@_r+1)^0,c
  2405  00ED20  0E00               	movlw	0
  2406  00ED22  6E06               	movwf	(strncmp@n+1)^0,c
  2407  00ED24  0E02               	movlw	2
  2408  00ED26  6E05               	movwf	strncmp@n^0,c
  2409  00ED28  ECD6  F066         	call	_strncmp	;wreg free
  2410  00ED2C  5001               	movf	?_strncmp^0,w,c
  2411  00ED2E  1002               	iorwf	(?_strncmp+1)^0,w,c
  2412  00ED30  B4D8               	btfsc	status,2,c
  2413  00ED32  EF9D  F076         	goto	u6131
  2414  00ED36  EF9F  F076         	goto	u6130
  2415  00ED3A                     u6131:
  2416  00ED3A  EFBA  F076         	goto	l4594
  2417  00ED3E                     u6130:
  2418  00ED3E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2419  00ED42  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2420  00ED46  CFDE F001          	movff	postinc2,strncmp@_l
  2421  00ED4A  CFDD F002          	movff	postdec2,strncmp@_l+1
  2422  00ED4E  0EF8               	movlw	low STR_26
  2423  00ED50  6E03               	movwf	strncmp@_r^0,c
  2424  00ED52  0EFF               	movlw	high STR_26
  2425  00ED54  6E04               	movwf	(strncmp@_r+1)^0,c
  2426  00ED56  0E00               	movlw	0
  2427  00ED58  6E06               	movwf	(strncmp@n+1)^0,c
  2428  00ED5A  0E02               	movlw	2
  2429  00ED5C  6E05               	movwf	strncmp@n^0,c
  2430  00ED5E  ECD6  F066         	call	_strncmp	;wreg free
  2431  00ED62  5001               	movf	?_strncmp^0,w,c
  2432  00ED64  1002               	iorwf	(?_strncmp+1)^0,w,c
  2433  00ED66  A4D8               	btfss	status,2,c
  2434  00ED68  EFB8  F076         	goto	u6141
  2435  00ED6C  EFBA  F076         	goto	u6140
  2436  00ED70                     u6141:
  2437  00ED70  EFFD  F076         	goto	l4600
  2438  00ED74                     u6140:
  2439  00ED74                     l4594:
  2440                           
  2441                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 858: ;C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 860:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
  2442  00ED74  0E02               	movlw	2
  2443  00ED76  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2444  00ED7A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2445  00ED7E  26DE               	addwf	postinc2,f,c
  2446  00ED80  0E00               	movlw	0
  2447  00ED82  22DD               	addwfc	postdec2,f,c
  2448                           
  2449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 861:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  2450  00ED84  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2451  00ED88  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2452  00ED8C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2453  00ED90  0E04               	movlw	4
  2454  00ED92  26DE               	addwf	postinc2,f,c
  2455  00ED94  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2456  00ED98  0E00               	movlw	0
  2457  00ED9A  22DD               	addwfc	postdec2,f,c
  2458  00ED9C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2459  00EDA0  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2460  00EDA4  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2461  00EDA8  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2462  00EDAC  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2463  00EDB0  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2464  00EDB4  C04B  F04F         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  2465  00EDB8  C04C  F050         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  2466  00EDBC  C04D  F051         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  2467  00EDC0  C04E  F052         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  2468  00EDC4  6A53               	clrf	(??_vfpfcnvrt+10)^0,c
  2469  00EDC6  BE52               	btfsc	(??_vfpfcnvrt+9)^0,7,c
  2470  00EDC8  6853               	setf	(??_vfpfcnvrt+10)^0,c
  2471  00EDCA  C053  F054         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  2472  00EDCE  C053  F055         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  2473  00EDD2  C053  F056         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  2474  00EDD6  C04F  F064         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  2475  00EDDA  C050  F065         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  2476  00EDDE  C051  F066         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  2477  00EDE2  C052  F067         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  2478  00EDE6  C053  F068         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  2479  00EDEA  C054  F069         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  2480  00EDEE  C055  F06A         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  2481  00EDF2  C056  F06B         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  2482  00EDF6  EF68  F076         	goto	l4586
  2483  00EDFA                     l4600:
  2484                           
  2485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2486  00EDFA  0E66               	movlw	102
  2487  00EDFC  1878               	xorwf	vfpfcnvrt@ct^0,w,c
  2488  00EDFE  A4D8               	btfss	status,2,c
  2489  00EE00  EF04  F077         	goto	u6151
  2490  00EE04  EF06  F077         	goto	u6150
  2491  00EE08                     u6151:
  2492  00EE08  EF46  F077         	goto	l4612
  2493  00EE0C                     u6150:
  2494  00EE0C                     
  2495                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2496  00EE0C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2497  00EE10  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2498  00EE14  CFDE FFF6          	movff	postinc2,tblptrl
  2499  00EE18  CFDD FFF7          	movff	postdec2,tblptrh
  2500  00EE1C                     	if	0	;tblptru may be non-zero
  2501  00EE1C                     	endif
  2502  00EE1C                     	if	0	;tblptru may be non-zero
  2503  00EE1C                     	endif
  2504  00EE1C  0008               	tblrd		*
  2505  00EE1E  CFF5 F07B          	movff	tablat,vfpfcnvrt@c
  2506  00EE22                     
  2507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2508  00EE22  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2509  00EE26  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2510  00EE2A  2ADE               	incf	postinc2,f,c
  2511  00EE2C  0E00               	movlw	0
  2512  00EE2E  22DD               	addwfc	postdec2,f,c
  2513  00EE30                     
  2514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2515  00EE30  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2516  00EE34  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2517  00EE38  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2518  00EE3C  0E04               	movlw	4
  2519  00EE3E  26DE               	addwf	postinc2,f,c
  2520  00EE40  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2521  00EE44  0E00               	movlw	0
  2522  00EE46  22DD               	addwfc	postdec2,f,c
  2523  00EE48  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2524  00EE4C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2525  00EE50  CFDE F074          	movff	postinc2,vfpfcnvrt@f
  2526  00EE54  CFDE F075          	movff	postinc2,vfpfcnvrt@f+1
  2527  00EE58  CFDE F076          	movff	postinc2,vfpfcnvrt@f+2
  2528  00EE5C  CFDE F077          	movff	postinc2,vfpfcnvrt@f+3
  2529  00EE60                     l4608:
  2530                           
  2531                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2532  00EE60  C043  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  2533  00EE64  C044  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2534  00EE68  C074  F030         	movff	vfpfcnvrt@f,efgtoa@f
  2535  00EE6C  C075  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2536  00EE70  C076  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2537  00EE74  C077  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2538  00EE78  C07B  F034         	movff	vfpfcnvrt@c,efgtoa@c
  2539  00EE7C  EC13  F079         	call	_efgtoa	;wreg free
  2540  00EE80  C02E  F043         	movff	?_efgtoa,?_vfpfcnvrt
  2541  00EE84  C02F  F044         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2542  00EE88  EF12  F079         	goto	l1057
  2543  00EE8C                     l4612:
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2546  00EE8C  0E78               	movlw	low vfpfcnvrt@ct
  2547  00EE8E  6E01               	movwf	strncmp@_l^0,c
  2548  00EE90  0E00               	movlw	high vfpfcnvrt@ct
  2549  00EE92  6E02               	movwf	(strncmp@_l+1)^0,c
  2550  00EE94  0EF5               	movlw	low STR_31
  2551  00EE96  6E03               	movwf	strncmp@_r^0,c
  2552  00EE98  0EFF               	movlw	high STR_31
  2553  00EE9A  6E04               	movwf	(strncmp@_r+1)^0,c
  2554  00EE9C  0E00               	movlw	0
  2555  00EE9E  6E06               	movwf	(strncmp@n+1)^0,c
  2556  00EEA0  0E02               	movlw	2
  2557  00EEA2  6E05               	movwf	strncmp@n^0,c
  2558  00EEA4  ECD6  F066         	call	_strncmp	;wreg free
  2559  00EEA8  5001               	movf	?_strncmp^0,w,c
  2560  00EEAA  1002               	iorwf	(?_strncmp+1)^0,w,c
  2561  00EEAC  A4D8               	btfss	status,2,c
  2562  00EEAE  EF5B  F077         	goto	u6161
  2563  00EEB2  EF5D  F077         	goto	u6160
  2564  00EEB6                     u6161:
  2565  00EEB6  EFD8  F077         	goto	l4628
  2566  00EEBA                     u6160:
  2567  00EEBA                     
  2568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2569  00EEBA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2570  00EEBE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2571  00EEC2  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  2572  00EEC6  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  2573  00EECA  0E01               	movlw	1
  2574  00EECC  2649               	addwf	??_vfpfcnvrt^0,f,c
  2575  00EECE  0E00               	movlw	0
  2576  00EED0  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2577  00EED2  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2578  00EED6  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2579  00EEDA                     	if	0	;tblptru may be non-zero
  2580  00EEDA                     	endif
  2581  00EEDA                     	if	0	;tblptru may be non-zero
  2582  00EEDA                     	endif
  2583  00EEDA  0008               	tblrd		*
  2584  00EEDC  CFF5 F07B          	movff	tablat,vfpfcnvrt@c
  2585  00EEE0  0EBF               	movlw	191
  2586  00EEE2  6E49               	movwf	??_vfpfcnvrt^0,c
  2587  00EEE4  0EFF               	movlw	255
  2588  00EEE6  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  2589  00EEE8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2590  00EEEC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2591  00EEF0  CFDE FFF6          	movff	postinc2,tblptrl
  2592  00EEF4  CFDD FFF7          	movff	postdec2,tblptrh
  2593  00EEF8                     	if	0	;tblptru may be non-zero
  2594  00EEF8                     	endif
  2595  00EEF8                     	if	0	;tblptru may be non-zero
  2596  00EEF8                     	endif
  2597  00EEF8  0008               	tblrd		*
  2598  00EEFA  50F5               	movf	tablat,w,c
  2599  00EEFC  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  2600  00EEFE  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  2601  00EF00  5049               	movf	??_vfpfcnvrt^0,w,c
  2602  00EF02  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2603  00EF04  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2604  00EF06  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2605  00EF08  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  2606  00EF0A  E10A               	bnz	u6170
  2607  00EF0C  0E1A               	movlw	26
  2608  00EF0E  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2609  00EF10  A0D8               	btfss	status,0,c
  2610  00EF12  EF8D  F077         	goto	u6171
  2611  00EF16  EF90  F077         	goto	u6170
  2612  00EF1A                     u6171:
  2613  00EF1A  0E01               	movlw	1
  2614  00EF1C  EF91  F077         	goto	u6180
  2615  00EF20                     u6170:
  2616  00EF20  0E00               	movlw	0
  2617  00EF22                     u6180:
  2618  00EF22  6E62               	movwf	_vfpfcnvrt$1098^0,c
  2619  00EF24  6A63               	clrf	(_vfpfcnvrt$1098+1)^0,c
  2620  00EF26  5062               	movf	_vfpfcnvrt$1098^0,w,c
  2621  00EF28  1063               	iorwf	(_vfpfcnvrt$1098+1)^0,w,c
  2622  00EF2A  B4D8               	btfsc	status,2,c
  2623  00EF2C  EF9A  F077         	goto	u6191
  2624  00EF30  EF9C  F077         	goto	u6190
  2625  00EF34                     u6191:
  2626  00EF34  EFB6  F077         	goto	l4622
  2627  00EF38                     u6190:
  2628  00EF38                     
  2629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2630  00EF38  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2631  00EF3C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2632  00EF40  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2633  00EF44  0E04               	movlw	4
  2634  00EF46  26DE               	addwf	postinc2,f,c
  2635  00EF48  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2636  00EF4C  0E00               	movlw	0
  2637  00EF4E  22DD               	addwfc	postdec2,f,c
  2638  00EF50  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2639  00EF54  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2640  00EF58  CFDE F074          	movff	postinc2,vfpfcnvrt@f
  2641  00EF5C  CFDE F075          	movff	postinc2,vfpfcnvrt@f+1
  2642  00EF60  CFDE F076          	movff	postinc2,vfpfcnvrt@f+2
  2643  00EF64  CFDE F077          	movff	postinc2,vfpfcnvrt@f+3
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2646  00EF68  EFCE  F077         	goto	l1071
  2647  00EF6C                     l4622:
  2648                           
  2649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2650  00EF6C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2651  00EF70  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2652  00EF74  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2653  00EF78  0E04               	movlw	4
  2654  00EF7A  26DE               	addwf	postinc2,f,c
  2655  00EF7C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2656  00EF80  0E00               	movlw	0
  2657  00EF82  22DD               	addwfc	postdec2,f,c
  2658  00EF84  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2659  00EF88  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2660  00EF8C  CFDE F074          	movff	postinc2,vfpfcnvrt@f
  2661  00EF90  CFDE F075          	movff	postinc2,vfpfcnvrt@f+1
  2662  00EF94  CFDE F076          	movff	postinc2,vfpfcnvrt@f+2
  2663  00EF98  CFDE F077          	movff	postinc2,vfpfcnvrt@f+3
  2664  00EF9C                     l1071:
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2667  00EF9C  0E02               	movlw	2
  2668  00EF9E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2669  00EFA2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2670  00EFA6  26DE               	addwf	postinc2,f,c
  2671  00EFA8  0E00               	movlw	0
  2672  00EFAA  22DD               	addwfc	postdec2,f,c
  2673  00EFAC  EF30  F077         	goto	l4608
  2674  00EFB0                     l4628:
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  2677  00EFB0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2678  00EFB4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2679  00EFB8  CFDE FFF6          	movff	postinc2,tblptrl
  2680  00EFBC  CFDD FFF7          	movff	postdec2,tblptrh
  2681  00EFC0                     	if	0	;tblptru may be non-zero
  2682  00EFC0                     	endif
  2683  00EFC0                     	if	0	;tblptru may be non-zero
  2684  00EFC0                     	endif
  2685  00EFC0  0008               	tblrd		*
  2686  00EFC2  50F5               	movf	tablat,w,c
  2687  00EFC4  0A78               	xorlw	120
  2688  00EFC6  B4D8               	btfsc	status,2,c
  2689  00EFC8  EFE8  F077         	goto	u6201
  2690  00EFCC  EFEA  F077         	goto	u6200
  2691  00EFD0                     u6201:
  2692  00EFD0  EFFC  F077         	goto	l4632
  2693  00EFD4                     u6200:
  2694  00EFD4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2695  00EFD8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2696  00EFDC  CFDE FFF6          	movff	postinc2,tblptrl
  2697  00EFE0  CFDD FFF7          	movff	postdec2,tblptrh
  2698  00EFE4                     	if	0	;tblptru may be non-zero
  2699  00EFE4                     	endif
  2700  00EFE4                     	if	0	;tblptru may be non-zero
  2701  00EFE4                     	endif
  2702  00EFE4  0008               	tblrd		*
  2703  00EFE6  50F5               	movf	tablat,w,c
  2704  00EFE8  0A58               	xorlw	88
  2705  00EFEA  A4D8               	btfss	status,2,c
  2706  00EFEC  EFFA  F077         	goto	u6211
  2707  00EFF0  EFFC  F077         	goto	u6210
  2708  00EFF4                     u6211:
  2709  00EFF4  EF4A  F078         	goto	l4642
  2710  00EFF8                     u6210:
  2711  00EFF8                     l4632:
  2712                           
  2713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  2714  00EFF8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2715  00EFFC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2716  00F000  CFDE FFF6          	movff	postinc2,tblptrl
  2717  00F004  CFDD FFF7          	movff	postdec2,tblptrh
  2718  00F008                     	if	0	;tblptru may be non-zero
  2719  00F008                     	endif
  2720  00F008                     	if	0	;tblptru may be non-zero
  2721  00F008                     	endif
  2722  00F008  0008               	tblrd		*
  2723  00F00A  CFF5 F07B          	movff	tablat,vfpfcnvrt@c
  2724  00F00E                     
  2725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  2726  00F00E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2727  00F012  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2728  00F016  2ADE               	incf	postinc2,f,c
  2729  00F018  0E00               	movlw	0
  2730  00F01A  22DD               	addwfc	postdec2,f,c
  2731  00F01C                     
  2732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2733  00F01C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2734  00F020  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2735  00F024  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2736  00F028  0E02               	movlw	2
  2737  00F02A  26DE               	addwf	postinc2,f,c
  2738  00F02C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2739  00F030  0E00               	movlw	0
  2740  00F032  22DD               	addwfc	postdec2,f,c
  2741  00F034  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2742  00F038  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2743  00F03C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2744  00F040  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2745  00F044  C04B  F06C         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2746  00F048  C04C  F06D         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2747  00F04C  6A6E               	clrf	(vfpfcnvrt@llu+2)^0,c
  2748  00F04E  6A6F               	clrf	(vfpfcnvrt@llu+3)^0,c
  2749  00F050  6A70               	clrf	(vfpfcnvrt@llu+4)^0,c
  2750  00F052  6A71               	clrf	(vfpfcnvrt@llu+5)^0,c
  2751  00F054  6A72               	clrf	(vfpfcnvrt@llu+6)^0,c
  2752  00F056  6A73               	clrf	(vfpfcnvrt@llu+7)^0,c
  2753  00F058                     l4638:
  2754                           
  2755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  2756  00F058  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  2757  00F05C  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2758  00F060  C06C  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  2759  00F064  C06D  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2760  00F068  C06E  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2761  00F06C  C06F  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2762  00F070  C070  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2763  00F074  C071  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2764  00F078  C072  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2765  00F07C  C073  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2766  00F080  C07B  F026         	movff	vfpfcnvrt@c,xtoa@x
  2767  00F084  EC7A  F06B         	call	_xtoa	;wreg free
  2768  00F088  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  2769  00F08C  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  2770  00F090  EF12  F079         	goto	l1057
  2771  00F094                     l4642:
  2772                           
  2773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1307:         if 
      +                          (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((size
      +                          of("lX")/sizeof("lX"[0]))-1))) {
  2774  00F094  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2775  00F098  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2776  00F09C  CFDE F001          	movff	postinc2,strncmp@_l
  2777  00F0A0  CFDD F002          	movff	postdec2,strncmp@_l+1
  2778  00F0A4  0EFB               	movlw	low STR_36
  2779  00F0A6  6E03               	movwf	strncmp@_r^0,c
  2780  00F0A8  0EFF               	movlw	high STR_36
  2781  00F0AA  6E04               	movwf	(strncmp@_r+1)^0,c
  2782  00F0AC  0E00               	movlw	0
  2783  00F0AE  6E06               	movwf	(strncmp@n+1)^0,c
  2784  00F0B0  0E02               	movlw	2
  2785  00F0B2  6E05               	movwf	strncmp@n^0,c
  2786  00F0B4  ECD6  F066         	call	_strncmp	;wreg free
  2787  00F0B8  5001               	movf	?_strncmp^0,w,c
  2788  00F0BA  1002               	iorwf	(?_strncmp+1)^0,w,c
  2789  00F0BC  B4D8               	btfsc	status,2,c
  2790  00F0BE  EF63  F078         	goto	u6221
  2791  00F0C2  EF65  F078         	goto	u6220
  2792  00F0C6                     u6221:
  2793  00F0C6  EF80  F078         	goto	l4646
  2794  00F0CA                     u6220:
  2795  00F0CA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2796  00F0CE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2797  00F0D2  CFDE F001          	movff	postinc2,strncmp@_l
  2798  00F0D6  CFDD F002          	movff	postdec2,strncmp@_l+1
  2799  00F0DA  0EEF               	movlw	low STR_40
  2800  00F0DC  6E03               	movwf	strncmp@_r^0,c
  2801  00F0DE  0EFF               	movlw	high STR_40
  2802  00F0E0  6E04               	movwf	(strncmp@_r+1)^0,c
  2803  00F0E2  0E00               	movlw	0
  2804  00F0E4  6E06               	movwf	(strncmp@n+1)^0,c
  2805  00F0E6  0E02               	movlw	2
  2806  00F0E8  6E05               	movwf	strncmp@n^0,c
  2807  00F0EA  ECD6  F066         	call	_strncmp	;wreg free
  2808  00F0EE  5001               	movf	?_strncmp^0,w,c
  2809  00F0F0  1002               	iorwf	(?_strncmp+1)^0,w,c
  2810  00F0F2  A4D8               	btfss	status,2,c
  2811  00F0F4  EF7E  F078         	goto	u6231
  2812  00F0F8  EF80  F078         	goto	u6230
  2813  00F0FC                     u6231:
  2814  00F0FC  EFC1  F078         	goto	l4656
  2815  00F100                     u6230:
  2816  00F100                     l4646:
  2817                           
  2818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1308: ;C:\Program
      +                           Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1310:             c = (*fmt)
      +                          [1];
  2819  00F100  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2820  00F104  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2821  00F108  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  2822  00F10C  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  2823  00F110  0E01               	movlw	1
  2824  00F112  2649               	addwf	??_vfpfcnvrt^0,f,c
  2825  00F114  0E00               	movlw	0
  2826  00F116  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2827  00F118  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2828  00F11C  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2829  00F120                     	if	0	;tblptru may be non-zero
  2830  00F120                     	endif
  2831  00F120                     	if	0	;tblptru may be non-zero
  2832  00F120                     	endif
  2833  00F120  0008               	tblrd		*
  2834  00F122  CFF5 F07B          	movff	tablat,vfpfcnvrt@c
  2835  00F126                     
  2836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1311:            
      +                           *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
  2837  00F126  0E02               	movlw	2
  2838  00F128  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2839  00F12C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2840  00F130  26DE               	addwf	postinc2,f,c
  2841  00F132  0E00               	movlw	0
  2842  00F134  22DD               	addwfc	postdec2,f,c
  2843  00F136                     
  2844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1312:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
  2845  00F136  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2846  00F13A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2847  00F13E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2848  00F142  0E04               	movlw	4
  2849  00F144  26DE               	addwf	postinc2,f,c
  2850  00F146  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2851  00F14A  0E00               	movlw	0
  2852  00F14C  22DD               	addwfc	postdec2,f,c
  2853  00F14E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2854  00F152  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2855  00F156  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2856  00F15A  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2857  00F15E  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2858  00F162  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2859  00F166  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  2860  00F168  6E6C               	movwf	vfpfcnvrt@llu^0,c
  2861  00F16A  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  2862  00F16C  6E6D               	movwf	(vfpfcnvrt@llu+1)^0,c
  2863  00F16E  504D               	movf	(??_vfpfcnvrt+4)^0,w,c
  2864  00F170  6E6E               	movwf	(vfpfcnvrt@llu+2)^0,c
  2865  00F172  504E               	movf	(??_vfpfcnvrt+5)^0,w,c
  2866  00F174  6E6F               	movwf	(vfpfcnvrt@llu+3)^0,c
  2867  00F176  6A70               	clrf	(vfpfcnvrt@llu+4)^0,c
  2868  00F178  6A71               	clrf	(vfpfcnvrt@llu+5)^0,c
  2869  00F17A  6A72               	clrf	(vfpfcnvrt@llu+6)^0,c
  2870  00F17C  6A73               	clrf	(vfpfcnvrt@llu+7)^0,c
  2871  00F17E  EF2C  F078         	goto	l4638
  2872  00F182                     l4656:
  2873                           
  2874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2875  00F182  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2876  00F186  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2877  00F18A  CFDE FFF6          	movff	postinc2,tblptrl
  2878  00F18E  CFDD FFF7          	movff	postdec2,tblptrh
  2879  00F192                     	if	0	;tblptru may be non-zero
  2880  00F192                     	endif
  2881  00F192                     	if	0	;tblptru may be non-zero
  2882  00F192                     	endif
  2883  00F192  0008               	tblrd		*
  2884  00F194  50F5               	movf	tablat,w,c
  2885  00F196  0A25               	xorlw	37
  2886  00F198  A4D8               	btfss	status,2,c
  2887  00F19A  EFD1  F078         	goto	u6241
  2888  00F19E  EFD3  F078         	goto	u6240
  2889  00F1A2                     u6241:
  2890  00F1A2  EFEA  F078         	goto	l4666
  2891  00F1A6                     u6240:
  2892  00F1A6                     
  2893                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2894  00F1A6  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2895  00F1AA  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2896  00F1AE  2ADE               	incf	postinc2,f,c
  2897  00F1B0  0E00               	movlw	0
  2898  00F1B2  22DD               	addwfc	postdec2,f,c
  2899  00F1B4                     
  2900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2901  00F1B4  0E00               	movlw	0
  2902  00F1B6  6E02               	movwf	(fputc@c+1)^0,c
  2903  00F1B8  0E25               	movlw	37
  2904  00F1BA  6E01               	movwf	fputc@c^0,c
  2905  00F1BC  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2906  00F1C0  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2907  00F1C4  EC82  F064         	call	_fputc	;wreg free
  2908  00F1C8                     l4662:
  2909                           
  2910                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2911  00F1C8  0E00               	movlw	0
  2912  00F1CA  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  2913  00F1CC  0E01               	movlw	1
  2914  00F1CE  6E43               	movwf	?_vfpfcnvrt^0,c
  2915  00F1D0  EF12  F079         	goto	l1057
  2916  00F1D4                     l4666:
  2917                           
  2918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2919  00F1D4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2920  00F1D8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2921  00F1DC  2ADE               	incf	postinc2,f,c
  2922  00F1DE  0E00               	movlw	0
  2923  00F1E0  22DD               	addwfc	postdec2,f,c
  2924  00F1E2                     
  2925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2926  00F1E2  0E00               	movlw	0
  2927  00F1E4  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  2928  00F1E6  0E00               	movlw	0
  2929  00F1E8  6E43               	movwf	?_vfpfcnvrt^0,c
  2930  00F1EA  EF12  F079         	goto	l1057
  2931  00F1EE                     l4672:
  2932                           
  2933                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2934  00F1EE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2935  00F1F2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2936  00F1F6  CFDE FFF6          	movff	postinc2,tblptrl
  2937  00F1FA  CFDD FFF7          	movff	postdec2,tblptrh
  2938  00F1FE                     	if	0	;tblptru may be non-zero
  2939  00F1FE                     	endif
  2940  00F1FE                     	if	0	;tblptru may be non-zero
  2941  00F1FE                     	endif
  2942  00F1FE  0008               	tblrd		*
  2943  00F200  50F5               	movf	tablat,w,c
  2944  00F202  6E01               	movwf	fputc@c^0,c
  2945  00F204  6A02               	clrf	(fputc@c+1)^0,c
  2946  00F206  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2947  00F20A  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2948  00F20E  EC82  F064         	call	_fputc	;wreg free
  2949  00F212                     
  2950                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2951  00F212  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2952  00F216  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2953  00F21A  2ADE               	incf	postinc2,f,c
  2954  00F21C  0E00               	movlw	0
  2955  00F21E  22DD               	addwfc	postdec2,f,c
  2956  00F220  EFE4  F078         	goto	l4662
  2957  00F224                     l1057:
  2958  00F224  0012               	return		;funcret
  2959  00F226                     __end_of_vfpfcnvrt:
  2960                           	callstack 0
  2961                           
  2962 ;; *************** function _xtoa *****************
  2963 ;; Defined at:
  2964 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2967 ;;		 -> sprintf@f(6), 
  2968 ;;  d               8   29[COMRAM] unsigned long long 
  2969 ;;  x               1   37[COMRAM] unsigned char 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  n               8   54[COMRAM] unsigned long long 
  2972 ;;  c               2   64[COMRAM] int 
  2973 ;;  i               2   62[COMRAM] int 
  2974 ;;  w               2   52[COMRAM] int 
  2975 ;;  p               2   50[COMRAM] int 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  2   27[COMRAM] int 
  2978 ;; Registers used:
  2979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  2985 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2986 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2987 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2988 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  2989 ;;Total ram usage:       39 bytes
  2990 ;; Hardware stack levels used: 1
  2991 ;; Hardware stack levels required when called: 4
  2992 ;; This function calls:
  2993 ;;		_isalpha
  2994 ;;		_isupper
  2995 ;;		_pad
  2996 ;;		_toupper
  2997 ;; This function is called by:
  2998 ;;		_vfpfcnvrt
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001                           
  3002                           	psect	text4
  3003  00D6F4                     __ptext4:
  3004                           	callstack 0
  3005  00D6F4                     _xtoa:
  3006                           	callstack 23
  3007  00D6F4                     
  3008                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  3009  00D6F4  0100               	movlb	0	; () banked
  3010  00D6F6  BFFE               	btfsc	(_prec+1)& (0+255),7,b
  3011  00D6F8  EF80  F06B         	goto	u5681
  3012  00D6FC  EF82  F06B         	goto	u5680
  3013  00D700                     u5681:
  3014  00D700  EF83  F06B         	goto	l4376
  3015  00D704                     u5680:
  3016  00D704                     
  3017                           ; BSR set to: 0
  3018                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  3019  00D704  927C               	bcf	_flags^0,1,c
  3020  00D706                     l4376:
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  3024  00D706  BFFE               	btfsc	(_prec+1)& (0+255),7,b
  3025  00D708  EF90  F06B         	goto	u5690
  3026  00D70C  51FE               	movf	(_prec+1)& (0+255),w,b
  3027  00D70E  E106               	bnz	u5691
  3028  00D710  05FD               	decf	_prec& (0+255),w,b
  3029  00D712  B0D8               	btfsc	status,0,c
  3030  00D714  EF8E  F06B         	goto	u5691
  3031  00D718  EF90  F06B         	goto	u5690
  3032  00D71C                     u5691:
  3033  00D71C  EF96  F06B         	goto	l1003
  3034  00D720                     u5690:
  3035  00D720                     
  3036                           ; BSR set to: 0
  3037  00D720  0E00               	movlw	0
  3038  00D722  6E34               	movwf	(xtoa@p+1)^0,c
  3039  00D724  0E01               	movlw	1
  3040  00D726  6E33               	movwf	xtoa@p^0,c
  3041  00D728  EF9A  F06B         	goto	l1005
  3042  00D72C                     l1003:
  3043                           
  3044                           ; BSR set to: 0
  3045  00D72C  C0FD  F033         	movff	_prec,xtoa@p
  3046  00D730  C0FE  F034         	movff	_prec+1,xtoa@p+1
  3047  00D734                     l1005:
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  3051  00D734  C0FB  F035         	movff	_width,xtoa@w
  3052  00D738  C0FC  F036         	movff	_width+1,xtoa@w+1
  3053                           
  3054                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  3055  00D73C  A87C               	btfss	_flags^0,4,c
  3056  00D73E  EFA3  F06B         	goto	u5701
  3057  00D742  EFA5  F06B         	goto	u5700
  3058  00D746                     u5701:
  3059  00D746  EFA9  F06B         	goto	l4382
  3060  00D74A                     u5700:
  3061  00D74A                     
  3062                           ; BSR set to: 0
  3063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  3064  00D74A  0EFE               	movlw	254
  3065  00D74C  2635               	addwf	xtoa@w^0,f,c
  3066  00D74E  0EFF               	movlw	255
  3067  00D750  2236               	addwfc	(xtoa@w+1)^0,f,c
  3068  00D752                     l4382:
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  3072  00D752  C01E  F037         	movff	xtoa@d,xtoa@n
  3073  00D756  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  3074  00D75A  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  3075  00D75E  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  3076  00D762  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  3077  00D766  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  3078  00D76A  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  3079  00D76E  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  3080  00D772                     
  3081                           ; BSR set to: 0
  3082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  3083  00D772  0E00               	movlw	0
  3084  00D774  6E40               	movwf	(xtoa@i+1)^0,c
  3085  00D776  0E4F               	movlw	79
  3086  00D778  6E3F               	movwf	xtoa@i^0,c
  3087  00D77A                     
  3088                           ; BSR set to: 0
  3089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  3090  00D77A  0E00               	movlw	0
  3091  00D77C  0101               	movlb	1	; () banked
  3092  00D77E  6F4F               	movwf	(_dbuf+79)& (0+255),b
  3093                           
  3094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3095  00D780  EF75  F06C         	goto	l4418
  3096  00D784                     l4388:
  3097                           
  3098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  3099  00D784  063F               	decf	xtoa@i^0,f,c
  3100  00D786  A0D8               	btfss	status,0,c
  3101  00D788  0640               	decf	(xtoa@i+1)^0,f,c
  3102  00D78A                     
  3103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  3104  00D78A  0E0F               	movlw	15
  3105  00D78C  1437               	andwf	xtoa@n^0,w,c
  3106  00D78E  6E41               	movwf	xtoa@c^0,c
  3107  00D790  6A42               	clrf	(xtoa@c+1)^0,c
  3108  00D792                     
  3109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  3110  00D792  BE42               	btfsc	(xtoa@c+1)^0,7,c
  3111  00D794  EFD5  F06B         	goto	u5711
  3112  00D798  5042               	movf	(xtoa@c+1)^0,w,c
  3113  00D79A  E109               	bnz	u5710
  3114  00D79C  0E0A               	movlw	10
  3115  00D79E  5C41               	subwf	xtoa@c^0,w,c
  3116  00D7A0  A0D8               	btfss	status,0,c
  3117  00D7A2  EFD5  F06B         	goto	u5711
  3118  00D7A6  EFD7  F06B         	goto	u5710
  3119  00D7AA                     u5711:
  3120  00D7AA  EFDF  F06B         	goto	l4396
  3121  00D7AE                     u5710:
  3122  00D7AE  0E57               	movlw	87
  3123  00D7B0  2441               	addwf	xtoa@c^0,w,c
  3124  00D7B2  6E41               	movwf	xtoa@c^0,c
  3125  00D7B4  0E00               	movlw	0
  3126  00D7B6  2042               	addwfc	(xtoa@c+1)^0,w,c
  3127  00D7B8  6E42               	movwf	(xtoa@c+1)^0,c
  3128  00D7BA  EFE5  F06B         	goto	l1012
  3129  00D7BE                     l4396:
  3130  00D7BE  0E30               	movlw	48
  3131  00D7C0  2441               	addwf	xtoa@c^0,w,c
  3132  00D7C2  6E41               	movwf	xtoa@c^0,c
  3133  00D7C4  0E00               	movlw	0
  3134  00D7C6  2042               	addwfc	(xtoa@c+1)^0,w,c
  3135  00D7C8  6E42               	movwf	(xtoa@c+1)^0,c
  3136  00D7CA                     l1012:
  3137  00D7CA  0EBF               	movlw	191
  3138  00D7CC  6E27               	movwf	??_xtoa^0,c
  3139  00D7CE  0EFF               	movlw	255
  3140  00D7D0  6E28               	movwf	(??_xtoa+1)^0,c
  3141  00D7D2  5026               	movf	xtoa@x^0,w,c
  3142  00D7D4  6E29               	movwf	(??_xtoa+2)^0,c
  3143  00D7D6  6A2A               	clrf	(??_xtoa+3)^0,c
  3144  00D7D8  5027               	movf	??_xtoa^0,w,c
  3145  00D7DA  2629               	addwf	(??_xtoa+2)^0,f,c
  3146  00D7DC  5028               	movf	(??_xtoa+1)^0,w,c
  3147  00D7DE  222A               	addwfc	(??_xtoa+3)^0,f,c
  3148  00D7E0  502A               	movf	(??_xtoa+3)^0,w,c
  3149  00D7E2  E10A               	bnz	u5720
  3150  00D7E4  0E1A               	movlw	26
  3151  00D7E6  5C29               	subwf	(??_xtoa+2)^0,w,c
  3152  00D7E8  A0D8               	btfss	status,0,c
  3153  00D7EA  EFF9  F06B         	goto	u5721
  3154  00D7EE  EFFC  F06B         	goto	u5720
  3155  00D7F2                     u5721:
  3156  00D7F2  0E01               	movlw	1
  3157  00D7F4  EFFD  F06B         	goto	u5730
  3158  00D7F8                     u5720:
  3159  00D7F8  0E00               	movlw	0
  3160  00D7FA                     u5730:
  3161  00D7FA  6E2F               	movwf	_xtoa$1072^0,c
  3162  00D7FC  6A30               	clrf	(_xtoa$1072+1)^0,c
  3163  00D7FE  502F               	movf	_xtoa$1072^0,w,c
  3164  00D800  1030               	iorwf	(_xtoa$1072+1)^0,w,c
  3165  00D802  B4D8               	btfsc	status,2,c
  3166  00D804  EF06  F06C         	goto	u5741
  3167  00D808  EF08  F06C         	goto	u5740
  3168  00D80C                     u5741:
  3169  00D80C  EF38  F06C         	goto	l4410
  3170  00D810                     u5740:
  3171  00D810  0E9F               	movlw	159
  3172  00D812  6E27               	movwf	??_xtoa^0,c
  3173  00D814  0EFF               	movlw	255
  3174  00D816  6E28               	movwf	(??_xtoa+1)^0,c
  3175  00D818  0E20               	movlw	32
  3176  00D81A  1041               	iorwf	xtoa@c^0,w,c
  3177  00D81C  6E29               	movwf	(??_xtoa+2)^0,c
  3178  00D81E  0E00               	movlw	0
  3179  00D820  1042               	iorwf	(xtoa@c+1)^0,w,c
  3180  00D822  6E2A               	movwf	(??_xtoa+3)^0,c
  3181  00D824  5027               	movf	??_xtoa^0,w,c
  3182  00D826  2629               	addwf	(??_xtoa+2)^0,f,c
  3183  00D828  5028               	movf	(??_xtoa+1)^0,w,c
  3184  00D82A  222A               	addwfc	(??_xtoa+3)^0,f,c
  3185  00D82C  502A               	movf	(??_xtoa+3)^0,w,c
  3186  00D82E  E10A               	bnz	u5750
  3187  00D830  0E1A               	movlw	26
  3188  00D832  5C29               	subwf	(??_xtoa+2)^0,w,c
  3189  00D834  A0D8               	btfss	status,0,c
  3190  00D836  EF1F  F06C         	goto	u5751
  3191  00D83A  EF22  F06C         	goto	u5750
  3192  00D83E                     u5751:
  3193  00D83E  0E01               	movlw	1
  3194  00D840  EF23  F06C         	goto	u5760
  3195  00D844                     u5750:
  3196  00D844  0E00               	movlw	0
  3197  00D846                     u5760:
  3198  00D846  6E31               	movwf	_xtoa$1073^0,c
  3199  00D848  6A32               	clrf	(_xtoa$1073+1)^0,c
  3200  00D84A  5031               	movf	_xtoa$1073^0,w,c
  3201  00D84C  1032               	iorwf	(_xtoa$1073+1)^0,w,c
  3202  00D84E  B4D8               	btfsc	status,2,c
  3203  00D850  EF2C  F06C         	goto	u5771
  3204  00D854  EF2E  F06C         	goto	u5770
  3205  00D858                     u5771:
  3206  00D858  EF38  F06C         	goto	l4410
  3207  00D85C                     u5770:
  3208  00D85C                     
  3209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  3210  00D85C  C041  F007         	movff	xtoa@c,toupper@c
  3211  00D860  C042  F008         	movff	xtoa@c+1,toupper@c+1
  3212  00D864  EC51  F062         	call	_toupper	;wreg free
  3213  00D868  C007  F041         	movff	?_toupper,xtoa@c
  3214  00D86C  C008  F042         	movff	?_toupper+1,xtoa@c+1
  3215  00D870                     l4410:
  3216                           
  3217                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  3218  00D870  0E00               	movlw	low _dbuf
  3219  00D872  243F               	addwf	xtoa@i^0,w,c
  3220  00D874  6ED9               	movwf	fsr2l,c
  3221  00D876  0E01               	movlw	high _dbuf
  3222  00D878  2040               	addwfc	(xtoa@i+1)^0,w,c
  3223  00D87A  6EDA               	movwf	fsr2h,c
  3224  00D87C  C041  FFDF         	movff	xtoa@c,indf2
  3225  00D880                     
  3226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  3227  00D880  0633               	decf	xtoa@p^0,f,c
  3228  00D882  A0D8               	btfss	status,0,c
  3229  00D884  0634               	decf	(xtoa@p+1)^0,f,c
  3230  00D886                     
  3231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  3232  00D886  0635               	decf	xtoa@w^0,f,c
  3233  00D888  A0D8               	btfss	status,0,c
  3234  00D88A  0636               	decf	(xtoa@w+1)^0,f,c
  3235  00D88C                     
  3236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  3237  00D88C  C037  F027         	movff	xtoa@n,??_xtoa
  3238  00D890  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  3239  00D894  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  3240  00D898  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  3241  00D89C  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  3242  00D8A0  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  3243  00D8A4  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  3244  00D8A8  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  3245  00D8AC  0E05               	movlw	5
  3246  00D8AE  EF62  F06C         	goto	u5780
  3247  00D8B2                     u5785:
  3248  00D8B2  90D8               	bcf	status,0,c
  3249  00D8B4  322E               	rrcf	(??_xtoa+7)^0,f,c
  3250  00D8B6  322D               	rrcf	(??_xtoa+6)^0,f,c
  3251  00D8B8  322C               	rrcf	(??_xtoa+5)^0,f,c
  3252  00D8BA  322B               	rrcf	(??_xtoa+4)^0,f,c
  3253  00D8BC  322A               	rrcf	(??_xtoa+3)^0,f,c
  3254  00D8BE  3229               	rrcf	(??_xtoa+2)^0,f,c
  3255  00D8C0  3228               	rrcf	(??_xtoa+1)^0,f,c
  3256  00D8C2  3227               	rrcf	??_xtoa^0,f,c
  3257  00D8C4                     u5780:
  3258  00D8C4  2EE8               	decfsz	wreg,f,c
  3259  00D8C6  EF59  F06C         	goto	u5785
  3260  00D8CA  C027  F037         	movff	??_xtoa,xtoa@n
  3261  00D8CE  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  3262  00D8D2  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  3263  00D8D6  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  3264  00D8DA  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  3265  00D8DE  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  3266  00D8E2  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  3267  00D8E6  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  3268  00D8EA                     l4418:
  3269                           
  3270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3271  00D8EA  BE40               	btfsc	(xtoa@i+1)^0,7,c
  3272  00D8EC  EF81  F06C         	goto	u5791
  3273  00D8F0  5040               	movf	(xtoa@i+1)^0,w,c
  3274  00D8F2  E109               	bnz	u5790
  3275  00D8F4  0E02               	movlw	2
  3276  00D8F6  5C3F               	subwf	xtoa@i^0,w,c
  3277  00D8F8  A0D8               	btfss	status,0,c
  3278  00D8FA  EF81  F06C         	goto	u5791
  3279  00D8FE  EF83  F06C         	goto	u5790
  3280  00D902                     u5791:
  3281  00D902  EFB3  F06C         	goto	l1026
  3282  00D906                     u5790:
  3283  00D906  5037               	movf	xtoa@n^0,w,c
  3284  00D908  1038               	iorwf	(xtoa@n+1)^0,w,c
  3285  00D90A  1039               	iorwf	(xtoa@n+2)^0,w,c
  3286  00D90C  103A               	iorwf	(xtoa@n+3)^0,w,c
  3287  00D90E  103B               	iorwf	(xtoa@n+4)^0,w,c
  3288  00D910  103C               	iorwf	(xtoa@n+5)^0,w,c
  3289  00D912  103D               	iorwf	(xtoa@n+6)^0,w,c
  3290  00D914  103E               	iorwf	(xtoa@n+7)^0,w,c
  3291  00D916  A4D8               	btfss	status,2,c
  3292  00D918  EF90  F06C         	goto	u5801
  3293  00D91C  EF92  F06C         	goto	u5800
  3294  00D920                     u5801:
  3295  00D920  EFC2  F06B         	goto	l4388
  3296  00D924                     u5800:
  3297  00D924  BE34               	btfsc	(xtoa@p+1)^0,7,c
  3298  00D926  EF9F  F06C         	goto	u5810
  3299  00D92A  5034               	movf	(xtoa@p+1)^0,w,c
  3300  00D92C  E106               	bnz	u5811
  3301  00D92E  0433               	decf	xtoa@p^0,w,c
  3302  00D930  B0D8               	btfsc	status,0,c
  3303  00D932  EF9D  F06C         	goto	u5811
  3304  00D936  EF9F  F06C         	goto	u5810
  3305  00D93A                     u5811:
  3306  00D93A  EFC2  F06B         	goto	l4388
  3307  00D93E                     u5810:
  3308  00D93E  BE36               	btfsc	(xtoa@w+1)^0,7,c
  3309  00D940  EFAA  F06C         	goto	u5821
  3310  00D944  5036               	movf	(xtoa@w+1)^0,w,c
  3311  00D946  E108               	bnz	u5820
  3312  00D948  0435               	decf	xtoa@w^0,w,c
  3313  00D94A  A0D8               	btfss	status,0,c
  3314  00D94C  EFAA  F06C         	goto	u5821
  3315  00D950  EFAC  F06C         	goto	u5820
  3316  00D954                     u5821:
  3317  00D954  EFB3  F06C         	goto	l1026
  3318  00D958                     u5820:
  3319  00D958  B27C               	btfsc	_flags^0,1,c
  3320  00D95A  EFB1  F06C         	goto	u5831
  3321  00D95E  EFB3  F06C         	goto	u5830
  3322  00D962                     u5831:
  3323  00D962  EFC2  F06B         	goto	l4388
  3324  00D966                     u5830:
  3325  00D966                     l1026:
  3326                           
  3327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  3328  00D966  A87C               	btfss	_flags^0,4,c
  3329  00D968  EFB8  F06C         	goto	u5841
  3330  00D96C  EFBA  F06C         	goto	u5840
  3331  00D970                     u5841:
  3332  00D970  EFD0  F06C         	goto	l4434
  3333  00D974                     u5840:
  3334  00D974                     
  3335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  3336  00D974  063F               	decf	xtoa@i^0,f,c
  3337  00D976  A0D8               	btfss	status,0,c
  3338  00D978  0640               	decf	(xtoa@i+1)^0,f,c
  3339  00D97A                     
  3340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  3341  00D97A  0E00               	movlw	low _dbuf
  3342  00D97C  243F               	addwf	xtoa@i^0,w,c
  3343  00D97E  6ED9               	movwf	fsr2l,c
  3344  00D980  0E01               	movlw	high _dbuf
  3345  00D982  2040               	addwfc	(xtoa@i+1)^0,w,c
  3346  00D984  6EDA               	movwf	fsr2h,c
  3347  00D986  C026  FFDF         	movff	xtoa@x,indf2
  3348  00D98A                     
  3349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  3350  00D98A  063F               	decf	xtoa@i^0,f,c
  3351  00D98C  A0D8               	btfss	status,0,c
  3352  00D98E  0640               	decf	(xtoa@i+1)^0,f,c
  3353                           
  3354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  3355  00D990  0E00               	movlw	low _dbuf
  3356  00D992  243F               	addwf	xtoa@i^0,w,c
  3357  00D994  6ED9               	movwf	fsr2l,c
  3358  00D996  0E01               	movlw	high _dbuf
  3359  00D998  2040               	addwfc	(xtoa@i+1)^0,w,c
  3360  00D99A  6EDA               	movwf	fsr2h,c
  3361  00D99C  0E30               	movlw	48
  3362  00D99E  6EDF               	movwf	indf2,c
  3363  00D9A0                     l4434:
  3364                           
  3365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  3366  00D9A0  C01C  F011         	movff	xtoa@fp,pad@fp
  3367  00D9A4  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  3368  00D9A8  0E00               	movlw	low _dbuf
  3369  00D9AA  243F               	addwf	xtoa@i^0,w,c
  3370  00D9AC  6E13               	movwf	pad@buf^0,c
  3371  00D9AE  0E01               	movlw	high _dbuf
  3372  00D9B0  2040               	addwfc	(xtoa@i+1)^0,w,c
  3373  00D9B2  6E14               	movwf	(pad@buf+1)^0,c
  3374  00D9B4  C035  F015         	movff	xtoa@w,pad@p
  3375  00D9B8  C036  F016         	movff	xtoa@w+1,pad@p+1
  3376  00D9BC  ECBF  F063         	call	_pad	;wreg free
  3377  00D9C0  C011  F01C         	movff	?_pad,?_xtoa
  3378  00D9C4  C012  F01D         	movff	?_pad+1,?_xtoa+1
  3379  00D9C8  0012               	return		;funcret
  3380  00D9CA                     __end_of_xtoa:
  3381                           	callstack 0
  3382                           
  3383 ;; *************** function _toupper *****************
  3384 ;; Defined at:
  3385 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  c               2    6[COMRAM] int 
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  2    6[COMRAM] int 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  3399 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3400 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3401 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3402 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3403 ;;Total ram usage:        8 bytes
  3404 ;; Hardware stack levels used: 1
  3405 ;; Hardware stack levels required when called: 1
  3406 ;; This function calls:
  3407 ;;		_islower
  3408 ;; This function is called by:
  3409 ;;		_xtoa
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           	psect	text5
  3414  00C4A2                     __ptext5:
  3415                           	callstack 0
  3416  00C4A2                     _toupper:
  3417                           	callstack 25
  3418  00C4A2  0E9F               	movlw	159
  3419  00C4A4  6E09               	movwf	??_toupper^0,c
  3420  00C4A6  0EFF               	movlw	255
  3421  00C4A8  6E0A               	movwf	(??_toupper+1)^0,c
  3422  00C4AA  C007  F00B         	movff	toupper@c,??_toupper+2
  3423  00C4AE  C008  F00C         	movff	toupper@c+1,??_toupper+3
  3424  00C4B2  5009               	movf	??_toupper^0,w,c
  3425  00C4B4  260B               	addwf	(??_toupper+2)^0,f,c
  3426  00C4B6  500A               	movf	(??_toupper+1)^0,w,c
  3427  00C4B8  220C               	addwfc	(??_toupper+3)^0,f,c
  3428  00C4BA  500C               	movf	(??_toupper+3)^0,w,c
  3429  00C4BC  E10A               	bnz	u4870
  3430  00C4BE  0E1A               	movlw	26
  3431  00C4C0  5C0B               	subwf	(??_toupper+2)^0,w,c
  3432  00C4C2  A0D8               	btfss	status,0,c
  3433  00C4C4  EF66  F062         	goto	u4871
  3434  00C4C8  EF69  F062         	goto	u4870
  3435  00C4CC                     u4871:
  3436  00C4CC  0E01               	movlw	1
  3437  00C4CE  EF6A  F062         	goto	u4880
  3438  00C4D2                     u4870:
  3439  00C4D2  0E00               	movlw	0
  3440  00C4D4                     u4880:
  3441  00C4D4  6E0D               	movwf	_toupper$1267^0,c
  3442  00C4D6  6A0E               	clrf	(_toupper$1267+1)^0,c
  3443  00C4D8  500D               	movf	_toupper$1267^0,w,c
  3444  00C4DA  100E               	iorwf	(_toupper$1267+1)^0,w,c
  3445  00C4DC  B4D8               	btfsc	status,2,c
  3446  00C4DE  EF73  F062         	goto	u4891
  3447  00C4E2  EF75  F062         	goto	u4890
  3448  00C4E6                     u4891:
  3449  00C4E6  EF7B  F062         	goto	l1234
  3450  00C4EA                     u4890:
  3451  00C4EA  0E5F               	movlw	95
  3452  00C4EC  1407               	andwf	toupper@c^0,w,c
  3453  00C4EE  6E07               	movwf	?_toupper^0,c
  3454  00C4F0  6A08               	clrf	(?_toupper+1)^0,c
  3455  00C4F2  EF7F  F062         	goto	l1239
  3456  00C4F6                     l1234:
  3457  00C4F6  C007  F007         	movff	toupper@c,?_toupper
  3458  00C4FA  C008  F008         	movff	toupper@c+1,?_toupper+1
  3459  00C4FE                     l1239:
  3460  00C4FE  0012               	return		;funcret
  3461  00C500                     __end_of_toupper:
  3462                           	callstack 0
  3463                           
  3464 ;; *************** function _islower *****************
  3465 ;; Defined at:
  3466 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;  c               2    0[COMRAM] int 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;		None
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  2    0[COMRAM] int 
  3473 ;; Registers used:
  3474 ;;		wreg, status,2, status,0
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  3480 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3482 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3483 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3484 ;;Total ram usage:        6 bytes
  3485 ;; Hardware stack levels used: 1
  3486 ;; This function calls:
  3487 ;;		Nothing
  3488 ;; This function is called by:
  3489 ;;		_toupper
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           	psect	text6
  3494  00C220                     __ptext6:
  3495                           	callstack 0
  3496  00C220                     _islower:
  3497                           	callstack 25
  3498  00C220  0E9F               	movlw	159
  3499  00C222  6E03               	movwf	??_islower^0,c
  3500  00C224  0EFF               	movlw	255
  3501  00C226  6E04               	movwf	(??_islower+1)^0,c
  3502  00C228  C001  F005         	movff	islower@c,??_islower+2
  3503  00C22C  C002  F006         	movff	islower@c+1,??_islower+3
  3504  00C230  5003               	movf	??_islower^0,w,c
  3505  00C232  2605               	addwf	(??_islower+2)^0,f,c
  3506  00C234  5004               	movf	(??_islower+1)^0,w,c
  3507  00C236  2206               	addwfc	(??_islower+3)^0,f,c
  3508  00C238  5006               	movf	(??_islower+3)^0,w,c
  3509  00C23A  E10A               	bnz	u3730
  3510  00C23C  0E1A               	movlw	26
  3511  00C23E  5C05               	subwf	(??_islower+2)^0,w,c
  3512  00C240  A0D8               	btfss	status,0,c
  3513  00C242  EF25  F061         	goto	u3731
  3514  00C246  EF28  F061         	goto	u3730
  3515  00C24A                     u3731:
  3516  00C24A  0E01               	movlw	1
  3517  00C24C  EF29  F061         	goto	u3740
  3518  00C250                     u3730:
  3519  00C250  0E00               	movlw	0
  3520  00C252                     u3740:
  3521  00C252  6E01               	movwf	?_islower^0,c
  3522  00C254  6A02               	clrf	(?_islower+1)^0,c
  3523  00C256  0012               	return		;funcret
  3524  00C258                     __end_of_islower:
  3525                           	callstack 0
  3526                           
  3527 ;; *************** function _isalpha *****************
  3528 ;; Defined at:
  3529 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  c               2    0[COMRAM] int 
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;		None
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  2    0[COMRAM] int 
  3536 ;; Registers used:
  3537 ;;		wreg, status,2, status,0
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  3543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3545 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3546 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3547 ;;Total ram usage:        6 bytes
  3548 ;; Hardware stack levels used: 1
  3549 ;; This function calls:
  3550 ;;		Nothing
  3551 ;; This function is called by:
  3552 ;;		_xtoa
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text7
  3557  00C258                     __ptext7:
  3558                           	callstack 0
  3559  00C258                     _isalpha:
  3560                           	callstack 26
  3561  00C258  0E9F               	movlw	159
  3562  00C25A  6E03               	movwf	??_isalpha^0,c
  3563  00C25C  0EFF               	movlw	255
  3564  00C25E  6E04               	movwf	(??_isalpha+1)^0,c
  3565  00C260  0E20               	movlw	32
  3566  00C262  1001               	iorwf	isalpha@c^0,w,c
  3567  00C264  6E05               	movwf	(??_isalpha+2)^0,c
  3568  00C266  0E00               	movlw	0
  3569  00C268  1002               	iorwf	(isalpha@c+1)^0,w,c
  3570  00C26A  6E06               	movwf	(??_isalpha+3)^0,c
  3571  00C26C  5003               	movf	??_isalpha^0,w,c
  3572  00C26E  2605               	addwf	(??_isalpha+2)^0,f,c
  3573  00C270  5004               	movf	(??_isalpha+1)^0,w,c
  3574  00C272  2206               	addwfc	(??_isalpha+3)^0,f,c
  3575  00C274  5006               	movf	(??_isalpha+3)^0,w,c
  3576  00C276  E10A               	bnz	u4850
  3577  00C278  0E1A               	movlw	26
  3578  00C27A  5C05               	subwf	(??_isalpha+2)^0,w,c
  3579  00C27C  A0D8               	btfss	status,0,c
  3580  00C27E  EF43  F061         	goto	u4851
  3581  00C282  EF46  F061         	goto	u4850
  3582  00C286                     u4851:
  3583  00C286  0E01               	movlw	1
  3584  00C288  EF47  F061         	goto	u4860
  3585  00C28C                     u4850:
  3586  00C28C  0E00               	movlw	0
  3587  00C28E                     u4860:
  3588  00C28E  6E01               	movwf	?_isalpha^0,c
  3589  00C290  6A02               	clrf	(?_isalpha+1)^0,c
  3590  00C292  0012               	return		;funcret
  3591  00C294                     __end_of_isalpha:
  3592                           	callstack 0
  3593                           
  3594 ;; *************** function _strncmp *****************
  3595 ;; Defined at:
  3596 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3599 ;;		 -> vfpfcnvrt@ct(3), STR_13(3), STR_12(20), STR_11(27), 
  3600 ;;		 -> STR_10(34), STR_9(8), STR_8(14), STR_7(41), 
  3601 ;;		 -> STR_6(42), STR_5(33), STR_4(41), STR_3(38), 
  3602 ;;		 -> STR_2(33), 
  3603 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3604 ;;		 -> STR_42(3), STR_38(3), STR_33(3), STR_28(3), 
  3605 ;;		 -> STR_24(3), 
  3606 ;;  n               2    4[COMRAM] unsigned int 
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3609 ;;		 -> STR_42(3), STR_38(3), STR_33(3), STR_28(3), 
  3610 ;;		 -> STR_24(3), 
  3611 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3612 ;;		 -> vfpfcnvrt@ct(3), STR_13(3), STR_12(20), STR_11(27), 
  3613 ;;		 -> STR_10(34), STR_9(8), STR_8(14), STR_7(41), 
  3614 ;;		 -> STR_6(42), STR_5(33), STR_4(41), STR_3(38), 
  3615 ;;		 -> STR_2(33), 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  2    0[COMRAM] int 
  3618 ;; Registers used:
  3619 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  3625 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3626 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3627 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3628 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3629 ;;Total ram usage:       11 bytes
  3630 ;; Hardware stack levels used: 1
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_vfpfcnvrt
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           	psect	text8
  3639  00CDAC                     __ptext8:
  3640                           	callstack 0
  3641  00CDAC                     _strncmp:
  3642                           	callstack 27
  3643  00CDAC  C001  F008         	movff	strncmp@_l,strncmp@l
  3644  00CDB0  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3645  00CDB4  C003  F00A         	movff	strncmp@_r,strncmp@r
  3646  00CDB8  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3647  00CDBC  0605               	decf	strncmp@n^0,f,c
  3648  00CDBE  A0D8               	btfss	status,0,c
  3649  00CDC0  0606               	decf	(strncmp@n+1)^0,f,c
  3650  00CDC2  2805               	incf	strncmp@n^0,w,c
  3651  00CDC4  E106               	bnz	u5921
  3652  00CDC6  2806               	incf	(strncmp@n+1)^0,w,c
  3653  00CDC8  A4D8               	btfss	status,2,c
  3654  00CDCA  EFE9  F066         	goto	u5921
  3655  00CDCE  EFEB  F066         	goto	u5920
  3656  00CDD2                     u5921:
  3657  00CDD2  EFF8  F066         	goto	l4488
  3658  00CDD6                     u5920:
  3659  00CDD6  0E00               	movlw	0
  3660  00CDD8  6E02               	movwf	(?_strncmp+1)^0,c
  3661  00CDDA  0E00               	movlw	0
  3662  00CDDC  6E01               	movwf	?_strncmp^0,c
  3663  00CDDE  EF65  F067         	goto	l1211
  3664  00CDE2                     l4486:
  3665  00CDE2  4A08               	infsnz	strncmp@l^0,f,c
  3666  00CDE4  2A09               	incf	(strncmp@l+1)^0,f,c
  3667  00CDE6  4A0A               	infsnz	strncmp@r^0,f,c
  3668  00CDE8  2A0B               	incf	(strncmp@r+1)^0,f,c
  3669  00CDEA  0605               	decf	strncmp@n^0,f,c
  3670  00CDEC  A0D8               	btfss	status,0,c
  3671  00CDEE  0606               	decf	(strncmp@n+1)^0,f,c
  3672  00CDF0                     l4488:
  3673  00CDF0  C008  FFF6         	movff	strncmp@l,tblptrl
  3674  00CDF4  C009  FFF7         	movff	strncmp@l+1,tblptrh
  3675  00CDF8  0E00               	movlw	low (__mediumconst shr (0+16))
  3676  00CDFA  6EF8               	movwf	tblptru,c
  3677  00CDFC  0E0F               	movlw	(high __ramtop+-1)
  3678  00CDFE  64F7               	cpfsgt	tblptrh,c
  3679  00CE00  D003               	bra	u5937
  3680  00CE02  0008               	tblrd		*
  3681  00CE04  50F5               	movf	tablat,w,c
  3682  00CE06  D005               	bra	u5930
  3683  00CE08                     u5937:
  3684  00CE08  CFF6 FFE1          	movff	tblptrl,fsr1l
  3685  00CE0C  CFF7 FFE2          	movff	tblptrh,fsr1h
  3686  00CE10  50E7               	movf	indf1,w,c
  3687  00CE12                     u5930:
  3688  00CE12  0900               	iorlw	0
  3689  00CE14  B4D8               	btfsc	status,2,c
  3690  00CE16  EF0F  F067         	goto	u5941
  3691  00CE1A  EF11  F067         	goto	u5940
  3692  00CE1E                     u5941:
  3693  00CE1E  EF48  F067         	goto	l4496
  3694  00CE22                     u5940:
  3695  00CE22  C00A  FFF6         	movff	strncmp@r,tblptrl
  3696  00CE26  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3697  00CE2A                     	if	0	;tblptru may be non-zero
  3698  00CE2A                     	endif
  3699  00CE2A                     	if	0	;tblptru may be non-zero
  3700  00CE2A                     	endif
  3701  00CE2A  0008               	tblrd		*
  3702  00CE2C  50F5               	movf	tablat,w,c
  3703  00CE2E  0900               	iorlw	0
  3704  00CE30  B4D8               	btfsc	status,2,c
  3705  00CE32  EF1D  F067         	goto	u5951
  3706  00CE36  EF1F  F067         	goto	u5950
  3707  00CE3A                     u5951:
  3708  00CE3A  EF48  F067         	goto	l4496
  3709  00CE3E                     u5950:
  3710  00CE3E  5005               	movf	strncmp@n^0,w,c
  3711  00CE40  1006               	iorwf	(strncmp@n+1)^0,w,c
  3712  00CE42  B4D8               	btfsc	status,2,c
  3713  00CE44  EF26  F067         	goto	u5961
  3714  00CE48  EF28  F067         	goto	u5960
  3715  00CE4C                     u5961:
  3716  00CE4C  EF48  F067         	goto	l4496
  3717  00CE50                     u5960:
  3718  00CE50  C00A  FFF6         	movff	strncmp@r,tblptrl
  3719  00CE54  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3720  00CE58                     	if	0	;tblptru may be non-zero
  3721  00CE58                     	endif
  3722  00CE58                     	if	0	;tblptru may be non-zero
  3723  00CE58                     	endif
  3724  00CE58  0008               	tblrd		*
  3725  00CE5A  CFF5 F007          	movff	tablat,??_strncmp
  3726  00CE5E  C008  FFF6         	movff	strncmp@l,tblptrl
  3727  00CE62  C009  FFF7         	movff	strncmp@l+1,tblptrh
  3728  00CE66  0E00               	movlw	low (__mediumconst shr (0+16))
  3729  00CE68  6EF8               	movwf	tblptru,c
  3730  00CE6A  0E0F               	movlw	(high __ramtop+-1)
  3731  00CE6C  64F7               	cpfsgt	tblptrh,c
  3732  00CE6E  D003               	bra	u5977
  3733  00CE70  0008               	tblrd		*
  3734  00CE72  50F5               	movf	tablat,w,c
  3735  00CE74  D005               	bra	u5975
  3736  00CE76                     u5977:
  3737  00CE76  CFF6 FFE1          	movff	tblptrl,fsr1l
  3738  00CE7A  CFF7 FFE2          	movff	tblptrh,fsr1h
  3739  00CE7E  50E7               	movf	indf1,w,c
  3740  00CE80                     u5975:
  3741  00CE80  1807               	xorwf	??_strncmp^0,w,c
  3742  00CE82  B4D8               	btfsc	status,2,c
  3743  00CE84  EF46  F067         	goto	u5971
  3744  00CE88  EF48  F067         	goto	u5970
  3745  00CE8C                     u5971:
  3746  00CE8C  EFF1  F066         	goto	l4486
  3747  00CE90                     u5970:
  3748  00CE90                     l4496:
  3749  00CE90  C008  FFF6         	movff	strncmp@l,tblptrl
  3750  00CE94  C009  FFF7         	movff	strncmp@l+1,tblptrh
  3751  00CE98  0E00               	movlw	low (__mediumconst shr (0+16))
  3752  00CE9A  6EF8               	movwf	tblptru,c
  3753  00CE9C  0E0F               	movlw	(high __ramtop+-1)
  3754  00CE9E  64F7               	cpfsgt	tblptrh,c
  3755  00CEA0  D003               	bra	u5987
  3756  00CEA2  0008               	tblrd		*
  3757  00CEA4  50F5               	movf	tablat,w,c
  3758  00CEA6  D005               	bra	u5980
  3759  00CEA8                     u5987:
  3760  00CEA8  CFF6 FFE1          	movff	tblptrl,fsr1l
  3761  00CEAC  CFF7 FFE2          	movff	tblptrh,fsr1h
  3762  00CEB0  50E7               	movf	indf1,w,c
  3763  00CEB2                     u5980:
  3764  00CEB2  6E07               	movwf	??_strncmp^0,c
  3765  00CEB4  C00A  FFF6         	movff	strncmp@r,tblptrl
  3766  00CEB8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3767  00CEBC                     	if	0	;tblptru may be non-zero
  3768  00CEBC                     	endif
  3769  00CEBC                     	if	0	;tblptru may be non-zero
  3770  00CEBC                     	endif
  3771  00CEBC  0008               	tblrd		*
  3772  00CEBE  50F5               	movf	tablat,w,c
  3773  00CEC0  5C07               	subwf	??_strncmp^0,w,c
  3774  00CEC2  6E01               	movwf	?_strncmp^0,c
  3775  00CEC4  6A02               	clrf	(?_strncmp+1)^0,c
  3776  00CEC6  A0D8               	btfss	status,0,c
  3777  00CEC8  0602               	decf	(?_strncmp+1)^0,f,c
  3778  00CECA                     l1211:
  3779  00CECA  0012               	return		;funcret
  3780  00CECC                     __end_of_strncmp:
  3781                           	callstack 0
  3782                           
  3783 ;; *************** function _efgtoa *****************
  3784 ;; Defined at:
  3785 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  3788 ;;		 -> sprintf@f(6), 
  3789 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  3790 ;;  c               1   51[COMRAM] unsigned char 
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;  u               4   52[BANK0h] unsigned char 
  3793 ;;  g               4   44[BANK0h] unsigned char 
  3794 ;;  l               4   38[BANK0h] unsigned char 
  3795 ;;  h               4   34[BANK0h] unsigned char 
  3796 ;;  ou              4   20[BANK0h] unsigned char 
  3797 ;;  n               2   50[BANK0h] int 
  3798 ;;  e               2   48[BANK0h] int 
  3799 ;;  i               2   42[BANK0h] int 
  3800 ;;  w               2   30[BANK0h] int 
  3801 ;;  p               2   28[BANK0h] int 
  3802 ;;  sign            2   26[BANK0h] int 
  3803 ;;  d               2   24[BANK0h] int 
  3804 ;;  m               2   18[BANK0h] int 
  3805 ;;  ne              2   16[BANK0h] int 
  3806 ;;  pp              2   14[BANK0h] int 
  3807 ;;  t               2   12[BANK0h] int 
  3808 ;;  mode            1   33[BANK0h] unsigned char 
  3809 ;;  nmode           1   32[BANK0h] unsigned char 
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  2   45[COMRAM] int 
  3812 ;; Registers used:
  3813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  3819 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3820 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3821 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3822 ;;      Totals:        12       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3823 ;;Total ram usage:       68 bytes
  3824 ;; Hardware stack levels used: 1
  3825 ;; Hardware stack levels required when called: 4
  3826 ;; This function calls:
  3827 ;;		___awdiv
  3828 ;;		___awmod
  3829 ;;		___fladd
  3830 ;;		___fldiv
  3831 ;;		___fleq
  3832 ;;		___flge
  3833 ;;		___flmul
  3834 ;;		___flneg
  3835 ;;		___flsub
  3836 ;;		___fltol
  3837 ;;		___fpclassifyf
  3838 ;;		_floorf
  3839 ;;		_isupper
  3840 ;;		_pad
  3841 ;;		_strcpy
  3842 ;;		_tolower
  3843 ;; This function is called by:
  3844 ;;		_vfpfcnvrt
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text9
  3849  00F226                     __ptext9:
  3850                           	callstack 0
  3851  00F226                     _efgtoa:
  3852                           	callstack 23
  3853  00F226                     
  3854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3855  00F226  0E00               	movlw	0
  3856  00F228  0100               	movlb	0	; () banked
  3857  00F22A  6FB1               	movwf	(efgtoa@sign+1)& (0+255),b
  3858  00F22C  0E00               	movlw	0
  3859  00F22E  6FB0               	movwf	efgtoa@sign& (0+255),b
  3860  00F230                     
  3861                           ; BSR set to: 0
  3862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3863  00F230  C030  F0C2         	movff	efgtoa@f,efgtoa@g
  3864  00F234  C031  F0C3         	movff	efgtoa@f+1,efgtoa@g+1
  3865  00F238  C032  F0C4         	movff	efgtoa@f+2,efgtoa@g+2
  3866  00F23C  C033  F0C5         	movff	efgtoa@f+3,efgtoa@g+3
  3867  00F240                     
  3868                           ; BSR set to: 0
  3869                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3870  00F240  BFC5               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3871  00F242  EF27  F079         	goto	u5140
  3872  00F246  EF25  F079         	goto	u5141
  3873  00F24A                     u5141:
  3874  00F24A  EF3D  F079         	goto	l4074
  3875  00F24E                     u5140:
  3876  00F24E                     
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3879  00F24E  0E00               	movlw	0
  3880  00F250  6FB1               	movwf	(efgtoa@sign+1)& (0+255),b
  3881  00F252  0E01               	movlw	1
  3882  00F254  6FB0               	movwf	efgtoa@sign& (0+255),b
  3883  00F256                     
  3884                           ; BSR set to: 0
  3885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3886  00F256  C0C2  F001         	movff	efgtoa@g,___flneg@f1
  3887  00F25A  C0C3  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3888  00F25E  C0C4  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3889  00F262  C0C5  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3890  00F266  ECD8  F060         	call	___flneg	;wreg free
  3891  00F26A  C001  F0C2         	movff	?___flneg,efgtoa@g
  3892  00F26E  C002  F0C3         	movff	?___flneg+1,efgtoa@g+1
  3893  00F272  C003  F0C4         	movff	?___flneg+2,efgtoa@g+2
  3894  00F276  C004  F0C5         	movff	?___flneg+3,efgtoa@g+3
  3895  00F27A                     l4074:
  3896                           
  3897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3898  00F27A  0E00               	movlw	0
  3899  00F27C  0100               	movlb	0	; () banked
  3900  00F27E  6FC9               	movwf	(efgtoa@n+1)& (0+255),b
  3901  00F280  0E00               	movlw	0
  3902  00F282  6FC8               	movwf	efgtoa@n& (0+255),b
  3903  00F284                     
  3904                           ; BSR set to: 0
  3905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3906  00F284  C0FB  F0B4         	movff	_width,efgtoa@w
  3907  00F288  C0FC  F0B5         	movff	_width+1,efgtoa@w+1
  3908  00F28C                     
  3909                           ; BSR set to: 0
  3910                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3911  00F28C  51B0               	movf	efgtoa@sign& (0+255),w,b
  3912  00F28E  11B1               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3913  00F290  A4D8               	btfss	status,2,c
  3914  00F292  EF4D  F079         	goto	u5151
  3915  00F296  EF4F  F079         	goto	u5150
  3916  00F29A                     u5151:
  3917  00F29A  EF56  F079         	goto	l4082
  3918  00F29E                     u5150:
  3919  00F29E                     
  3920                           ; BSR set to: 0
  3921  00F29E  A47C               	btfss	_flags^0,2,c
  3922  00F2A0  EF54  F079         	goto	u5161
  3923  00F2A4  EF56  F079         	goto	u5160
  3924  00F2A8                     u5161:
  3925  00F2A8  EF70  F079         	goto	l4094
  3926  00F2AC                     u5160:
  3927  00F2AC                     l4082:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3931  00F2AC  51B0               	movf	efgtoa@sign& (0+255),w,b
  3932  00F2AE  11B1               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3933  00F2B0  A4D8               	btfss	status,2,c
  3934  00F2B2  EF5D  F079         	goto	u5171
  3935  00F2B6  EF5F  F079         	goto	u5170
  3936  00F2BA                     u5171:
  3937  00F2BA  EF65  F079         	goto	l4086
  3938  00F2BE                     u5170:
  3939  00F2BE                     
  3940                           ; BSR set to: 0
  3941  00F2BE  0E00               	movlw	0
  3942  00F2C0  6F97               	movwf	(_efgtoa$1051+1)& (0+255),b
  3943  00F2C2  0E2B               	movlw	43
  3944  00F2C4  6F96               	movwf	_efgtoa$1051& (0+255),b
  3945  00F2C6  EF69  F079         	goto	l4088
  3946  00F2CA                     l4086:
  3947                           
  3948                           ; BSR set to: 0
  3949  00F2CA  0E00               	movlw	0
  3950  00F2CC  6F97               	movwf	(_efgtoa$1051+1)& (0+255),b
  3951  00F2CE  0E2D               	movlw	45
  3952  00F2D0  6F96               	movwf	_efgtoa$1051& (0+255),b
  3953  00F2D2                     l4088:
  3954                           
  3955                           ; BSR set to: 0
  3956  00F2D2  C096  F100         	movff	_efgtoa$1051,_dbuf
  3957  00F2D6                     
  3958                           ; BSR set to: 0
  3959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3960  00F2D6  4BC8               	infsnz	efgtoa@n& (0+255),f,b
  3961  00F2D8  2BC9               	incf	(efgtoa@n+1)& (0+255),f,b
  3962  00F2DA                     
  3963                           ; BSR set to: 0
  3964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  3965  00F2DA  07B4               	decf	efgtoa@w& (0+255),f,b
  3966  00F2DC  A0D8               	btfss	status,0,c
  3967  00F2DE  07B5               	decf	(efgtoa@w+1)& (0+255),f,b
  3968  00F2E0                     l4094:
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3972  00F2E0  C0C2  F001         	movff	efgtoa@g,___fpclassifyf@x
  3973  00F2E4  C0C3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3974  00F2E8  C0C4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3975  00F2EC  C0C5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3976  00F2F0  EC52  F065         	call	___fpclassifyf	;wreg free
  3977  00F2F4  0401               	decf	?___fpclassifyf^0,w,c
  3978  00F2F6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3979  00F2F8  A4D8               	btfss	status,2,c
  3980  00F2FA  EF81  F079         	goto	u5181
  3981  00F2FE  EF83  F079         	goto	u5180
  3982  00F302                     u5181:
  3983  00F302  EFDA  F079         	goto	l4112
  3984  00F306                     u5180:
  3985  00F306  0EBF               	movlw	191
  3986  00F308  6E35               	movwf	??_efgtoa^0,c
  3987  00F30A  0EFF               	movlw	255
  3988  00F30C  6E36               	movwf	(??_efgtoa+1)^0,c
  3989  00F30E  5034               	movf	efgtoa@c^0,w,c
  3990  00F310  6E37               	movwf	(??_efgtoa+2)^0,c
  3991  00F312  6A38               	clrf	(??_efgtoa+3)^0,c
  3992  00F314  5035               	movf	??_efgtoa^0,w,c
  3993  00F316  2637               	addwf	(??_efgtoa+2)^0,f,c
  3994  00F318  5036               	movf	(??_efgtoa+1)^0,w,c
  3995  00F31A  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3996  00F31C  5038               	movf	(??_efgtoa+3)^0,w,c
  3997  00F31E  E10A               	bnz	u5190
  3998  00F320  0E1A               	movlw	26
  3999  00F322  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4000  00F324  A0D8               	btfss	status,0,c
  4001  00F326  EF97  F079         	goto	u5191
  4002  00F32A  EF9A  F079         	goto	u5190
  4003  00F32E                     u5191:
  4004  00F32E  0E01               	movlw	1
  4005  00F330  EF9B  F079         	goto	u5200
  4006  00F334                     u5190:
  4007  00F334  0E00               	movlw	0
  4008  00F336                     u5200:
  4009  00F336  0100               	movlb	0	; () banked
  4010  00F338  6F98               	movwf	_efgtoa$1052& (0+255),b
  4011  00F33A  6B99               	clrf	(_efgtoa$1052+1)& (0+255),b
  4012  00F33C                     
  4013                           ; BSR set to: 0
  4014  00F33C  5198               	movf	_efgtoa$1052& (0+255),w,b
  4015  00F33E  1199               	iorwf	(_efgtoa$1052+1)& (0+255),w,b
  4016  00F340  B4D8               	btfsc	status,2,c
  4017  00F342  EFA5  F079         	goto	u5211
  4018  00F346  EFA7  F079         	goto	u5210
  4019  00F34A                     u5211:
  4020  00F34A  EFB5  F079         	goto	l4104
  4021  00F34E                     u5210:
  4022  00F34E                     
  4023                           ; BSR set to: 0
  4024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4025  00F34E  0E00               	movlw	low _dbuf
  4026  00F350  25C8               	addwf	efgtoa@n& (0+255),w,b
  4027  00F352  6E01               	movwf	strcpy@dest^0,c
  4028  00F354  0E01               	movlw	high _dbuf
  4029  00F356  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4030  00F358  6E02               	movwf	(strcpy@dest+1)^0,c
  4031  00F35A  0EDF               	movlw	low STR_14
  4032  00F35C  6E03               	movwf	strcpy@src^0,c
  4033  00F35E  0EFF               	movlw	high STR_14
  4034  00F360  6E04               	movwf	(strcpy@src+1)^0,c
  4035  00F362  EC22  F062         	call	_strcpy	;wreg free
  4036                           
  4037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4038  00F366  EFC1  F079         	goto	l4106
  4039  00F36A                     l4104:
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4043  00F36A  0E00               	movlw	low _dbuf
  4044  00F36C  25C8               	addwf	efgtoa@n& (0+255),w,b
  4045  00F36E  6E01               	movwf	strcpy@dest^0,c
  4046  00F370  0E01               	movlw	high _dbuf
  4047  00F372  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4048  00F374  6E02               	movwf	(strcpy@dest+1)^0,c
  4049  00F376  0EE7               	movlw	low STR_15
  4050  00F378  6E03               	movwf	strcpy@src^0,c
  4051  00F37A  0EFF               	movlw	high STR_15
  4052  00F37C  6E04               	movwf	(strcpy@src+1)^0,c
  4053  00F37E  EC22  F062         	call	_strcpy	;wreg free
  4054  00F382                     l4106:
  4055                           
  4056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4057  00F382  0100               	movlb	0	; () banked
  4058  00F384  0EFD               	movlw	253
  4059  00F386  27B4               	addwf	efgtoa@w& (0+255),f,b
  4060  00F388  0EFF               	movlw	255
  4061  00F38A  23B5               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4062  00F38C                     l4108:
  4063                           
  4064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4065  00F38C  C02E  F011         	movff	efgtoa@fp,pad@fp
  4066  00F390  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  4067  00F394  0E00               	movlw	low _dbuf
  4068  00F396  6E13               	movwf	pad@buf^0,c
  4069  00F398  0E01               	movlw	high _dbuf
  4070  00F39A  6E14               	movwf	(pad@buf+1)^0,c
  4071  00F39C  C0B4  F015         	movff	efgtoa@w,pad@p
  4072  00F3A0  C0B5  F016         	movff	efgtoa@w+1,pad@p+1
  4073  00F3A4  ECBF  F063         	call	_pad	;wreg free
  4074  00F3A8  C011  F02E         	movff	?_pad,?_efgtoa
  4075  00F3AC  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  4076  00F3B0  EF3F  F07F         	goto	l923
  4077  00F3B4                     l4112:
  4078                           
  4079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4080  00F3B4  C0C2  F001         	movff	efgtoa@g,___fpclassifyf@x
  4081  00F3B8  C0C3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4082  00F3BC  C0C4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4083  00F3C0  C0C5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4084  00F3C4  EC52  F065         	call	___fpclassifyf	;wreg free
  4085  00F3C8  5001               	movf	?___fpclassifyf^0,w,c
  4086  00F3CA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4087  00F3CC  A4D8               	btfss	status,2,c
  4088  00F3CE  EFEB  F079         	goto	u5221
  4089  00F3D2  EFED  F079         	goto	u5220
  4090  00F3D6                     u5221:
  4091  00F3D6  EF2D  F07A         	goto	l4130
  4092  00F3DA                     u5220:
  4093  00F3DA  0EBF               	movlw	191
  4094  00F3DC  6E35               	movwf	??_efgtoa^0,c
  4095  00F3DE  0EFF               	movlw	255
  4096  00F3E0  6E36               	movwf	(??_efgtoa+1)^0,c
  4097  00F3E2  5034               	movf	efgtoa@c^0,w,c
  4098  00F3E4  6E37               	movwf	(??_efgtoa+2)^0,c
  4099  00F3E6  6A38               	clrf	(??_efgtoa+3)^0,c
  4100  00F3E8  5035               	movf	??_efgtoa^0,w,c
  4101  00F3EA  2637               	addwf	(??_efgtoa+2)^0,f,c
  4102  00F3EC  5036               	movf	(??_efgtoa+1)^0,w,c
  4103  00F3EE  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4104  00F3F0  5038               	movf	(??_efgtoa+3)^0,w,c
  4105  00F3F2  E10A               	bnz	u5230
  4106  00F3F4  0E1A               	movlw	26
  4107  00F3F6  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4108  00F3F8  A0D8               	btfss	status,0,c
  4109  00F3FA  EF01  F07A         	goto	u5231
  4110  00F3FE  EF04  F07A         	goto	u5230
  4111  00F402                     u5231:
  4112  00F402  0E01               	movlw	1
  4113  00F404  EF05  F07A         	goto	u5240
  4114  00F408                     u5230:
  4115  00F408  0E00               	movlw	0
  4116  00F40A                     u5240:
  4117  00F40A  0100               	movlb	0	; () banked
  4118  00F40C  6F9A               	movwf	_efgtoa$1056& (0+255),b
  4119  00F40E  6B9B               	clrf	(_efgtoa$1056+1)& (0+255),b
  4120  00F410                     
  4121                           ; BSR set to: 0
  4122  00F410  519A               	movf	_efgtoa$1056& (0+255),w,b
  4123  00F412  119B               	iorwf	(_efgtoa$1056+1)& (0+255),w,b
  4124  00F414  B4D8               	btfsc	status,2,c
  4125  00F416  EF0F  F07A         	goto	u5251
  4126  00F41A  EF11  F07A         	goto	u5250
  4127  00F41E                     u5251:
  4128  00F41E  EF1F  F07A         	goto	l4122
  4129  00F422                     u5250:
  4130  00F422                     
  4131                           ; BSR set to: 0
  4132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4133  00F422  0E00               	movlw	low _dbuf
  4134  00F424  25C8               	addwf	efgtoa@n& (0+255),w,b
  4135  00F426  6E01               	movwf	strcpy@dest^0,c
  4136  00F428  0E01               	movlw	high _dbuf
  4137  00F42A  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4138  00F42C  6E02               	movwf	(strcpy@dest+1)^0,c
  4139  00F42E  0EE3               	movlw	low STR_18
  4140  00F430  6E03               	movwf	strcpy@src^0,c
  4141  00F432  0EFF               	movlw	high STR_18
  4142  00F434  6E04               	movwf	(strcpy@src+1)^0,c
  4143  00F436  EC22  F062         	call	_strcpy	;wreg free
  4144                           
  4145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4146  00F43A  EFC1  F079         	goto	l4106
  4147  00F43E                     l4122:
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4151  00F43E  0E00               	movlw	low _dbuf
  4152  00F440  25C8               	addwf	efgtoa@n& (0+255),w,b
  4153  00F442  6E01               	movwf	strcpy@dest^0,c
  4154  00F444  0E01               	movlw	high _dbuf
  4155  00F446  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4156  00F448  6E02               	movwf	(strcpy@dest+1)^0,c
  4157  00F44A  0EEB               	movlw	low STR_19
  4158  00F44C  6E03               	movwf	strcpy@src^0,c
  4159  00F44E  0EFF               	movlw	high STR_19
  4160  00F450  6E04               	movwf	(strcpy@src+1)^0,c
  4161  00F452  EC22  F062         	call	_strcpy	;wreg free
  4162  00F456  EFC1  F079         	goto	l4106
  4163  00F45A                     l4130:
  4164                           
  4165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4166  00F45A  0E00               	movlw	0
  4167  00F45C  0100               	movlb	0	; () banked
  4168  00F45E  6FCA               	movwf	efgtoa@u& (0+255),b
  4169  00F460  0E00               	movlw	0
  4170  00F462  6FCB               	movwf	(efgtoa@u+1)& (0+255),b
  4171  00F464  0E80               	movlw	128
  4172  00F466  6FCC               	movwf	(efgtoa@u+2)& (0+255),b
  4173  00F468  0E3F               	movlw	63
  4174  00F46A  6FCD               	movwf	(efgtoa@u+3)& (0+255),b
  4175                           
  4176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4177  00F46C  0E00               	movlw	0
  4178  00F46E  6FC7               	movwf	(efgtoa@e+1)& (0+255),b
  4179  00F470  0E00               	movlw	0
  4180  00F472  6FC6               	movwf	efgtoa@e& (0+255),b
  4181  00F474                     
  4182                           ; BSR set to: 0
  4183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4184  00F474  C0C2  F001         	movff	efgtoa@g,___fleq@ff1
  4185  00F478  C0C3  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4186  00F47C  C0C4  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4187  00F480  C0C5  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4188  00F484  0E00               	movlw	0
  4189  00F486  6E05               	movwf	___fleq@ff2^0,c
  4190  00F488  0E00               	movlw	0
  4191  00F48A  6E06               	movwf	(___fleq@ff2+1)^0,c
  4192  00F48C  0E00               	movlw	0
  4193  00F48E  6E07               	movwf	(___fleq@ff2+2)^0,c
  4194  00F490  0E00               	movlw	0
  4195  00F492  6E08               	movwf	(___fleq@ff2+3)^0,c
  4196  00F494  EC12  F063         	call	___fleq	;wreg free
  4197  00F498  B0D8               	btfsc	status,0,c
  4198  00F49A  EF51  F07A         	goto	u5261
  4199  00F49E  EF53  F07A         	goto	u5260
  4200  00F4A2                     u5261:
  4201  00F4A2  EFD6  F07A         	goto	l4148
  4202  00F4A6                     u5260:
  4203  00F4A6  EF72  F07A         	goto	l4140
  4204  00F4AA                     l4136:
  4205                           
  4206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4207  00F4AA  C0CA  F001         	movff	efgtoa@u,___flmul@b
  4208  00F4AE  C0CB  F002         	movff	efgtoa@u+1,___flmul@b+1
  4209  00F4B2  C0CC  F003         	movff	efgtoa@u+2,___flmul@b+2
  4210  00F4B6  C0CD  F004         	movff	efgtoa@u+3,___flmul@b+3
  4211  00F4BA  0E00               	movlw	0
  4212  00F4BC  6E05               	movwf	___flmul@a^0,c
  4213  00F4BE  0E00               	movlw	0
  4214  00F4C0  6E06               	movwf	(___flmul@a+1)^0,c
  4215  00F4C2  0E20               	movlw	32
  4216  00F4C4  6E07               	movwf	(___flmul@a+2)^0,c
  4217  00F4C6  0E41               	movlw	65
  4218  00F4C8  6E08               	movwf	(___flmul@a+3)^0,c
  4219  00F4CA  EC22  F070         	call	___flmul	;wreg free
  4220  00F4CE  C001  F0CA         	movff	?___flmul,efgtoa@u
  4221  00F4D2  C002  F0CB         	movff	?___flmul+1,efgtoa@u+1
  4222  00F4D6  C003  F0CC         	movff	?___flmul+2,efgtoa@u+2
  4223  00F4DA  C004  F0CD         	movff	?___flmul+3,efgtoa@u+3
  4224  00F4DE                     
  4225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4226  00F4DE  0100               	movlb	0	; () banked
  4227  00F4E0  4BC6               	infsnz	efgtoa@e& (0+255),f,b
  4228  00F4E2  2BC7               	incf	(efgtoa@e+1)& (0+255),f,b
  4229  00F4E4                     l4140:
  4230                           
  4231                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4232  00F4E4  C0C2  F01A         	movff	efgtoa@g,___flge@ff1
  4233  00F4E8  C0C3  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  4234  00F4EC  C0C4  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  4235  00F4F0  C0C5  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  4236  00F4F4  0E00               	movlw	0
  4237  00F4F6  6E05               	movwf	___flmul@a^0,c
  4238  00F4F8  0E00               	movlw	0
  4239  00F4FA  6E06               	movwf	(___flmul@a+1)^0,c
  4240  00F4FC  0E20               	movlw	32
  4241  00F4FE  6E07               	movwf	(___flmul@a+2)^0,c
  4242  00F500  0E41               	movlw	65
  4243  00F502  6E08               	movwf	(___flmul@a+3)^0,c
  4244  00F504  C0CA  F001         	movff	efgtoa@u,___flmul@b
  4245  00F508  C0CB  F002         	movff	efgtoa@u+1,___flmul@b+1
  4246  00F50C  C0CC  F003         	movff	efgtoa@u+2,___flmul@b+2
  4247  00F510  C0CD  F004         	movff	efgtoa@u+3,___flmul@b+3
  4248  00F514  EC22  F070         	call	___flmul	;wreg free
  4249  00F518  C001  F01E         	movff	?___flmul,___flge@ff2
  4250  00F51C  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  4251  00F520  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  4252  00F524  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  4253  00F528  ECD1  F065         	call	___flge	;wreg free
  4254  00F52C  B0D8               	btfsc	status,0,c
  4255  00F52E  EF9B  F07A         	goto	u5271
  4256  00F532  EF9D  F07A         	goto	u5270
  4257  00F536                     u5271:
  4258  00F536  EF55  F07A         	goto	l4136
  4259  00F53A                     u5270:
  4260  00F53A  EFBD  F07A         	goto	l4146
  4261  00F53E                     l4142:
  4262                           
  4263                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4264  00F53E  C0CA  F001         	movff	efgtoa@u,___fldiv@b
  4265  00F542  C0CB  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4266  00F546  C0CC  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4267  00F54A  C0CD  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4268  00F54E  0E00               	movlw	0
  4269  00F550  6E05               	movwf	___fldiv@a^0,c
  4270  00F552  0E00               	movlw	0
  4271  00F554  6E06               	movwf	(___fldiv@a+1)^0,c
  4272  00F556  0E20               	movlw	32
  4273  00F558  6E07               	movwf	(___fldiv@a+2)^0,c
  4274  00F55A  0E41               	movlw	65
  4275  00F55C  6E08               	movwf	(___fldiv@a+3)^0,c
  4276  00F55E  EC55  F06E         	call	___fldiv	;wreg free
  4277  00F562  C001  F0CA         	movff	?___fldiv,efgtoa@u
  4278  00F566  C002  F0CB         	movff	?___fldiv+1,efgtoa@u+1
  4279  00F56A  C003  F0CC         	movff	?___fldiv+2,efgtoa@u+2
  4280  00F56E  C004  F0CD         	movff	?___fldiv+3,efgtoa@u+3
  4281  00F572                     
  4282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4283  00F572  0100               	movlb	0	; () banked
  4284  00F574  07C6               	decf	efgtoa@e& (0+255),f,b
  4285  00F576  A0D8               	btfss	status,0,c
  4286  00F578  07C7               	decf	(efgtoa@e+1)& (0+255),f,b
  4287  00F57A                     l4146:
  4288                           
  4289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4290  00F57A  C0C2  F01A         	movff	efgtoa@g,___flge@ff1
  4291  00F57E  C0C3  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  4292  00F582  C0C4  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  4293  00F586  C0C5  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  4294  00F58A  C0CA  F01E         	movff	efgtoa@u,___flge@ff2
  4295  00F58E  C0CB  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  4296  00F592  C0CC  F020         	movff	efgtoa@u+2,___flge@ff2+2
  4297  00F596  C0CD  F021         	movff	efgtoa@u+3,___flge@ff2+3
  4298  00F59A  ECD1  F065         	call	___flge	;wreg free
  4299  00F59E  A0D8               	btfss	status,0,c
  4300  00F5A0  EFD4  F07A         	goto	u5281
  4301  00F5A4  EFD6  F07A         	goto	u5280
  4302  00F5A8                     u5281:
  4303  00F5A8  EF9F  F07A         	goto	l4142
  4304  00F5AC                     u5280:
  4305  00F5AC                     l4148:
  4306                           
  4307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4308  00F5AC  C034  F007         	movff	efgtoa@c,tolower@c
  4309  00F5B0  6A08               	clrf	(tolower@c+1)^0,c
  4310  00F5B2  EC80  F062         	call	_tolower	;wreg free
  4311  00F5B6  5007               	movf	?_tolower^0,w,c
  4312  00F5B8  0100               	movlb	0	; () banked
  4313  00F5BA  6FB7               	movwf	efgtoa@mode& (0+255),b
  4314  00F5BC                     
  4315                           ; BSR set to: 0
  4316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4317  00F5BC  C0B7  F0B6         	movff	efgtoa@mode,efgtoa@nmode
  4318  00F5C0                     
  4319                           ; BSR set to: 0
  4320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4321  00F5C0  0E67               	movlw	103
  4322  00F5C2  19B7               	xorwf	efgtoa@mode& (0+255),w,b
  4323  00F5C4  A4D8               	btfss	status,2,c
  4324  00F5C6  EFE7  F07A         	goto	u5291
  4325  00F5CA  EFE9  F07A         	goto	u5290
  4326  00F5CE                     u5291:
  4327  00F5CE  EF0F  F07B         	goto	l4162
  4328  00F5D2                     u5290:
  4329  00F5D2                     
  4330                           ; BSR set to: 0
  4331                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4332  00F5D2  51FD               	movf	_prec& (0+255),w,b
  4333  00F5D4  11FE               	iorwf	(_prec+1)& (0+255),w,b
  4334  00F5D6  A4D8               	btfss	status,2,c
  4335  00F5D8  EFF0  F07A         	goto	u5301
  4336  00F5DC  EFF2  F07A         	goto	u5300
  4337  00F5E0                     u5301:
  4338  00F5E0  EFF6  F07A         	goto	l4158
  4339  00F5E4                     u5300:
  4340  00F5E4                     
  4341                           ; BSR set to: 0
  4342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4343  00F5E4  0E00               	movlw	0
  4344  00F5E6  6FFE               	movwf	(_prec+1)& (0+255),b
  4345  00F5E8  0E01               	movlw	1
  4346  00F5EA  6FFD               	movwf	_prec& (0+255),b
  4347  00F5EC                     l4158:
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4351  00F5EC  BFFE               	btfsc	(_prec+1)& (0+255),7,b
  4352  00F5EE  EF03  F07B         	goto	u5310
  4353  00F5F2  51FE               	movf	(_prec+1)& (0+255),w,b
  4354  00F5F4  E106               	bnz	u5311
  4355  00F5F6  05FD               	decf	_prec& (0+255),w,b
  4356  00F5F8  B0D8               	btfsc	status,0,c
  4357  00F5FA  EF01  F07B         	goto	u5311
  4358  00F5FE  EF03  F07B         	goto	u5310
  4359  00F602                     u5311:
  4360  00F602  EF09  F07B         	goto	l941
  4361  00F606                     u5310:
  4362  00F606                     l4160:
  4363                           
  4364                           ; BSR set to: 0
  4365  00F606  0E00               	movlw	0
  4366  00F608  6FB3               	movwf	(efgtoa@p+1)& (0+255),b
  4367  00F60A  0E06               	movlw	6
  4368  00F60C  6FB2               	movwf	efgtoa@p& (0+255),b
  4369  00F60E  EF18  F07B         	goto	l4168
  4370  00F612                     l941:
  4371                           
  4372                           ; BSR set to: 0
  4373  00F612  C0FD  F0B2         	movff	_prec,efgtoa@p
  4374  00F616  C0FE  F0B3         	movff	_prec+1,efgtoa@p+1
  4375  00F61A  EF18  F07B         	goto	l4168
  4376  00F61E                     l4162:
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4380  00F61E  BFFE               	btfsc	(_prec+1)& (0+255),7,b
  4381  00F620  EF14  F07B         	goto	u5321
  4382  00F624  EF16  F07B         	goto	u5320
  4383  00F628                     u5321:
  4384  00F628  EF03  F07B         	goto	l4160
  4385  00F62C                     u5320:
  4386  00F62C  EF09  F07B         	goto	l941
  4387  00F630                     l4168:
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4391  00F630  0E67               	movlw	103
  4392  00F632  19B7               	xorwf	efgtoa@mode& (0+255),w,b
  4393  00F634  A4D8               	btfss	status,2,c
  4394  00F636  EF1F  F07B         	goto	u5331
  4395  00F63A  EF21  F07B         	goto	u5330
  4396  00F63E                     u5331:
  4397  00F63E  EF50  F07B         	goto	l4178
  4398  00F642                     u5330:
  4399  00F642                     
  4400                           ; BSR set to: 0
  4401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4402  00F642  AFC7               	btfss	(efgtoa@e+1)& (0+255),7,b
  4403  00F644  EF2F  F07B         	goto	u5340
  4404  00F648  0EFC               	movlw	252
  4405  00F64A  5DC6               	subwf	efgtoa@e& (0+255),w,b
  4406  00F64C  0EFF               	movlw	255
  4407  00F64E  59C7               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4408  00F650  A0D8               	btfss	status,0,c
  4409  00F652  EF2D  F07B         	goto	u5341
  4410  00F656  EF2F  F07B         	goto	u5340
  4411  00F65A                     u5341:
  4412  00F65A  EF4E  F07B         	goto	l4176
  4413  00F65E                     u5340:
  4414  00F65E                     
  4415                           ; BSR set to: 0
  4416  00F65E  0EFF               	movlw	255
  4417  00F660  6E35               	movwf	??_efgtoa^0,c
  4418  00F662  0EFF               	movlw	255
  4419  00F664  6E36               	movwf	(??_efgtoa+1)^0,c
  4420  00F666  C0B2  F037         	movff	efgtoa@p,??_efgtoa+2
  4421  00F66A  C0B3  F038         	movff	efgtoa@p+1,??_efgtoa+3
  4422  00F66E  5035               	movf	??_efgtoa^0,w,c
  4423  00F670  2637               	addwf	(??_efgtoa+2)^0,f,c
  4424  00F672  5036               	movf	(??_efgtoa+1)^0,w,c
  4425  00F674  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4426  00F676  51C6               	movf	efgtoa@e& (0+255),w,b
  4427  00F678  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4428  00F67A  5038               	movf	(??_efgtoa+3)^0,w,c
  4429  00F67C  0A80               	xorlw	128
  4430  00F67E  6E39               	movwf	(??_efgtoa+4)^0,c
  4431  00F680  51C7               	movf	(efgtoa@e+1)& (0+255),w,b
  4432  00F682  0A80               	xorlw	128
  4433  00F684  5839               	subwfb	(??_efgtoa+4)^0,w,c
  4434  00F686  A0D8               	btfss	status,0,c
  4435  00F688  EF48  F07B         	goto	u5351
  4436  00F68C  EF4A  F07B         	goto	u5350
  4437  00F690                     u5351:
  4438  00F690  EF4E  F07B         	goto	l4176
  4439  00F694                     u5350:
  4440  00F694                     
  4441                           ; BSR set to: 0
  4442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4443  00F694  0E66               	movlw	102
  4444  00F696  6FB6               	movwf	efgtoa@nmode& (0+255),b
  4445                           
  4446                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4447  00F698  EF50  F07B         	goto	l4178
  4448  00F69C                     l4176:
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4452  00F69C  0E65               	movlw	101
  4453  00F69E  6FB6               	movwf	efgtoa@nmode& (0+255),b
  4454  00F6A0                     l4178:
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4458  00F6A0  C0B2  F0A8         	movff	efgtoa@p,efgtoa@m
  4459  00F6A4  C0B3  F0A9         	movff	efgtoa@p+1,efgtoa@m+1
  4460  00F6A8                     
  4461                           ; BSR set to: 0
  4462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4463  00F6A8  0E67               	movlw	103
  4464  00F6AA  19B7               	xorwf	efgtoa@mode& (0+255),w,b
  4465  00F6AC  A4D8               	btfss	status,2,c
  4466  00F6AE  EF5B  F07B         	goto	u5361
  4467  00F6B2  EF5D  F07B         	goto	u5360
  4468  00F6B6                     u5361:
  4469  00F6B6  EF6D  F07B         	goto	l4186
  4470  00F6BA                     u5360:
  4471  00F6BA                     
  4472                           ; BSR set to: 0
  4473  00F6BA  0E66               	movlw	102
  4474  00F6BC  19B6               	xorwf	efgtoa@nmode& (0+255),w,b
  4475  00F6BE  A4D8               	btfss	status,2,c
  4476  00F6C0  EF64  F07B         	goto	u5371
  4477  00F6C4  EF66  F07B         	goto	u5370
  4478  00F6C8                     u5371:
  4479  00F6C8  EF6F  F07B         	goto	l4188
  4480  00F6CC                     u5370:
  4481  00F6CC                     
  4482                           ; BSR set to: 0
  4483  00F6CC  BFC7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4484  00F6CE  EF6D  F07B         	goto	u5380
  4485  00F6D2  EF6B  F07B         	goto	u5381
  4486  00F6D6                     u5381:
  4487  00F6D6  EF6F  F07B         	goto	l4188
  4488  00F6DA                     u5380:
  4489  00F6DA                     l4186:
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4493  00F6DA  4BA8               	infsnz	efgtoa@m& (0+255),f,b
  4494  00F6DC  2BA9               	incf	(efgtoa@m+1)& (0+255),f,b
  4495  00F6DE                     l4188:
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4499  00F6DE  0E66               	movlw	102
  4500  00F6E0  19B6               	xorwf	efgtoa@nmode& (0+255),w,b
  4501  00F6E2  A4D8               	btfss	status,2,c
  4502  00F6E4  EF76  F07B         	goto	u5391
  4503  00F6E8  EF78  F07B         	goto	u5390
  4504  00F6EC                     u5391:
  4505  00F6EC  EF98  F07B         	goto	l4198
  4506  00F6F0                     u5390:
  4507  00F6F0                     
  4508                           ; BSR set to: 0
  4509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4510  00F6F0  BFC7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4511  00F6F2  EF7F  F07B         	goto	u5400
  4512  00F6F6  EF7D  F07B         	goto	u5401
  4513  00F6FA                     u5401:
  4514  00F6FA  EF8B  F07B         	goto	l4194
  4515  00F6FE                     u5400:
  4516  00F6FE                     
  4517                           ; BSR set to: 0
  4518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4519  00F6FE  0E00               	movlw	0
  4520  00F700  6FCA               	movwf	efgtoa@u& (0+255),b
  4521  00F702  0E00               	movlw	0
  4522  00F704  6FCB               	movwf	(efgtoa@u+1)& (0+255),b
  4523  00F706  0E80               	movlw	128
  4524  00F708  6FCC               	movwf	(efgtoa@u+2)& (0+255),b
  4525  00F70A  0E3F               	movlw	63
  4526  00F70C  6FCD               	movwf	(efgtoa@u+3)& (0+255),b
  4527                           
  4528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4529  00F70E  0E00               	movlw	0
  4530  00F710  6FC7               	movwf	(efgtoa@e+1)& (0+255),b
  4531  00F712  0E00               	movlw	0
  4532  00F714  6FC6               	movwf	efgtoa@e& (0+255),b
  4533  00F716                     l4194:
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4537  00F716  0E67               	movlw	103
  4538  00F718  19B7               	xorwf	efgtoa@mode& (0+255),w,b
  4539  00F71A  B4D8               	btfsc	status,2,c
  4540  00F71C  EF92  F07B         	goto	u5411
  4541  00F720  EF94  F07B         	goto	u5410
  4542  00F724                     u5411:
  4543  00F724  EF98  F07B         	goto	l4198
  4544  00F728                     u5410:
  4545  00F728                     
  4546                           ; BSR set to: 0
  4547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4548  00F728  51C6               	movf	efgtoa@e& (0+255),w,b
  4549  00F72A  27A8               	addwf	efgtoa@m& (0+255),f,b
  4550  00F72C  51C7               	movf	(efgtoa@e+1)& (0+255),w,b
  4551  00F72E  23A9               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4552  00F730                     l4198:
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4556  00F730  0E00               	movlw	0
  4557  00F732  6FC1               	movwf	(efgtoa@i+1)& (0+255),b
  4558  00F734  0E00               	movlw	0
  4559  00F736  6FC0               	movwf	efgtoa@i& (0+255),b
  4560  00F738                     
  4561                           ; BSR set to: 0
  4562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4563  00F738  C0C2  F0B8         	movff	efgtoa@g,efgtoa@h
  4564  00F73C  C0C3  F0B9         	movff	efgtoa@g+1,efgtoa@h+1
  4565  00F740  C0C4  F0BA         	movff	efgtoa@g+2,efgtoa@h+2
  4566  00F744  C0C5  F0BB         	movff	efgtoa@g+3,efgtoa@h+3
  4567  00F748                     
  4568                           ; BSR set to: 0
  4569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4570  00F748  C0CA  F0AA         	movff	efgtoa@u,efgtoa@ou
  4571  00F74C  C0CB  F0AB         	movff	efgtoa@u+1,efgtoa@ou+1
  4572  00F750  C0CC  F0AC         	movff	efgtoa@u+2,efgtoa@ou+2
  4573  00F754  C0CD  F0AD         	movff	efgtoa@u+3,efgtoa@ou+3
  4574                           
  4575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4576  00F758  EF29  F07C         	goto	l4212
  4577  00F75C                     l4204:
  4578                           
  4579                           ; BSR set to: 0
  4580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4581  00F75C  C0B8  F001         	movff	efgtoa@h,___fldiv@b
  4582  00F760  C0B9  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4583  00F764  C0BA  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4584  00F768  C0BB  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4585  00F76C  C0CA  F005         	movff	efgtoa@u,___fldiv@a
  4586  00F770  C0CB  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4587  00F774  C0CC  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4588  00F778  C0CD  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4589  00F77C  EC55  F06E         	call	___fldiv	;wreg free
  4590  00F780  C001  F01A         	movff	?___fldiv,floorf@x
  4591  00F784  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4592  00F788  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4593  00F78C  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4594  00F790  EC71  F06A         	call	_floorf	;wreg free
  4595  00F794  C01A  F0BC         	movff	?_floorf,efgtoa@l
  4596  00F798  C01B  F0BD         	movff	?_floorf+1,efgtoa@l+1
  4597  00F79C  C01C  F0BE         	movff	?_floorf+2,efgtoa@l+2
  4598  00F7A0  C01D  F0BF         	movff	?_floorf+3,efgtoa@l+3
  4599                           
  4600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4601  00F7A4  C0BC  F001         	movff	efgtoa@l,___fltol@f1
  4602  00F7A8  C0BD  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4603  00F7AC  C0BE  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4604  00F7B0  C0BF  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4605  00F7B4  EC53  F066         	call	___fltol	;wreg free
  4606  00F7B8  C001  F0AE         	movff	?___fltol,efgtoa@d
  4607  00F7BC  C002  F0AF         	movff	?___fltol+1,efgtoa@d+1
  4608  00F7C0                     
  4609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4610  00F7C0  C0B8  F01A         	movff	efgtoa@h,___flsub@b
  4611  00F7C4  C0B9  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4612  00F7C8  C0BA  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4613  00F7CC  C0BB  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4614  00F7D0  C0CA  F005         	movff	efgtoa@u,___flmul@a
  4615  00F7D4  C0CB  F006         	movff	efgtoa@u+1,___flmul@a+1
  4616  00F7D8  C0CC  F007         	movff	efgtoa@u+2,___flmul@a+2
  4617  00F7DC  C0CD  F008         	movff	efgtoa@u+3,___flmul@a+3
  4618  00F7E0  C0BC  F001         	movff	efgtoa@l,___flmul@b
  4619  00F7E4  C0BD  F002         	movff	efgtoa@l+1,___flmul@b+1
  4620  00F7E8  C0BE  F003         	movff	efgtoa@l+2,___flmul@b+2
  4621  00F7EC  C0BF  F004         	movff	efgtoa@l+3,___flmul@b+3
  4622  00F7F0  EC22  F070         	call	___flmul	;wreg free
  4623  00F7F4  C001  F01E         	movff	?___flmul,___flsub@a
  4624  00F7F8  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4625  00F7FC  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4626  00F800  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4627  00F804  ECAD  F061         	call	___flsub	;wreg free
  4628  00F808  C01A  F0B8         	movff	?___flsub,efgtoa@h
  4629  00F80C  C01B  F0B9         	movff	?___flsub+1,efgtoa@h+1
  4630  00F810  C01C  F0BA         	movff	?___flsub+2,efgtoa@h+2
  4631  00F814  C01D  F0BB         	movff	?___flsub+3,efgtoa@h+3
  4632  00F818                     
  4633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4634  00F818  C0CA  F001         	movff	efgtoa@u,___fldiv@b
  4635  00F81C  C0CB  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4636  00F820  C0CC  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4637  00F824  C0CD  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4638  00F828  0E00               	movlw	0
  4639  00F82A  6E05               	movwf	___fldiv@a^0,c
  4640  00F82C  0E00               	movlw	0
  4641  00F82E  6E06               	movwf	(___fldiv@a+1)^0,c
  4642  00F830  0E20               	movlw	32
  4643  00F832  6E07               	movwf	(___fldiv@a+2)^0,c
  4644  00F834  0E41               	movlw	65
  4645  00F836  6E08               	movwf	(___fldiv@a+3)^0,c
  4646  00F838  EC55  F06E         	call	___fldiv	;wreg free
  4647  00F83C  C001  F0CA         	movff	?___fldiv,efgtoa@u
  4648  00F840  C002  F0CB         	movff	?___fldiv+1,efgtoa@u+1
  4649  00F844  C003  F0CC         	movff	?___fldiv+2,efgtoa@u+2
  4650  00F848  C004  F0CD         	movff	?___fldiv+3,efgtoa@u+3
  4651  00F84C                     
  4652                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4653  00F84C  0100               	movlb	0	; () banked
  4654  00F84E  4BC0               	infsnz	efgtoa@i& (0+255),f,b
  4655  00F850  2BC1               	incf	(efgtoa@i+1)& (0+255),f,b
  4656  00F852                     l4212:
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4660  00F852  51A8               	movf	efgtoa@m& (0+255),w,b
  4661  00F854  5DC0               	subwf	efgtoa@i& (0+255),w,b
  4662  00F856  51C1               	movf	(efgtoa@i+1)& (0+255),w,b
  4663  00F858  0A80               	xorlw	128
  4664  00F85A  6E35               	movwf	??_efgtoa^0,c
  4665  00F85C  51A9               	movf	(efgtoa@m+1)& (0+255),w,b
  4666  00F85E  0A80               	xorlw	128
  4667  00F860  5835               	subwfb	??_efgtoa^0,w,c
  4668  00F862  A0D8               	btfss	status,0,c
  4669  00F864  EF36  F07C         	goto	u5421
  4670  00F868  EF38  F07C         	goto	u5420
  4671  00F86C                     u5421:
  4672  00F86C  EFAE  F07B         	goto	l4204
  4673  00F870                     u5420:
  4674  00F870                     
  4675                           ; BSR set to: 0
  4676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4677  00F870  C0CA  F001         	movff	efgtoa@u,___flmul@b
  4678  00F874  C0CB  F002         	movff	efgtoa@u+1,___flmul@b+1
  4679  00F878  C0CC  F003         	movff	efgtoa@u+2,___flmul@b+2
  4680  00F87C  C0CD  F004         	movff	efgtoa@u+3,___flmul@b+3
  4681  00F880  0E00               	movlw	0
  4682  00F882  6E05               	movwf	___flmul@a^0,c
  4683  00F884  0E00               	movlw	0
  4684  00F886  6E06               	movwf	(___flmul@a+1)^0,c
  4685  00F888  0EA0               	movlw	160
  4686  00F88A  6E07               	movwf	(___flmul@a+2)^0,c
  4687  00F88C  0E40               	movlw	64
  4688  00F88E  6E08               	movwf	(___flmul@a+3)^0,c
  4689  00F890  EC22  F070         	call	___flmul	;wreg free
  4690  00F894  C001  F0BC         	movff	?___flmul,efgtoa@l
  4691  00F898  C002  F0BD         	movff	?___flmul+1,efgtoa@l+1
  4692  00F89C  C003  F0BE         	movff	?___flmul+2,efgtoa@l+2
  4693  00F8A0  C004  F0BF         	movff	?___flmul+3,efgtoa@l+3
  4694  00F8A4                     
  4695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4696  00F8A4  C0B8  F01A         	movff	efgtoa@h,___flge@ff1
  4697  00F8A8  C0B9  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4698  00F8AC  C0BA  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4699  00F8B0  C0BB  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4700  00F8B4  C0BC  F01E         	movff	efgtoa@l,___flge@ff2
  4701  00F8B8  C0BD  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  4702  00F8BC  C0BE  F020         	movff	efgtoa@l+2,___flge@ff2+2
  4703  00F8C0  C0BF  F021         	movff	efgtoa@l+3,___flge@ff2+3
  4704  00F8C4  ECD1  F065         	call	___flge	;wreg free
  4705  00F8C8  B0D8               	btfsc	status,0,c
  4706  00F8CA  EF69  F07C         	goto	u5431
  4707  00F8CE  EF6B  F07C         	goto	u5430
  4708  00F8D2                     u5431:
  4709  00F8D2  EF76  F07C         	goto	l4220
  4710  00F8D6                     u5430:
  4711  00F8D6                     
  4712                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4713  00F8D6  0E00               	movlw	0
  4714  00F8D8  0100               	movlb	0	; () banked
  4715  00F8DA  6FBC               	movwf	efgtoa@l& (0+255),b
  4716  00F8DC  0E00               	movlw	0
  4717  00F8DE  6FBD               	movwf	(efgtoa@l+1)& (0+255),b
  4718  00F8E0  0E00               	movlw	0
  4719  00F8E2  6FBE               	movwf	(efgtoa@l+2)& (0+255),b
  4720  00F8E4  0E00               	movlw	0
  4721  00F8E6  6FBF               	movwf	(efgtoa@l+3)& (0+255),b
  4722                           
  4723                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  4724  00F8E8  EF9F  F07C         	goto	l4226
  4725  00F8EC                     l4220:
  4726                           
  4727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4728  00F8EC  C0B8  F001         	movff	efgtoa@h,___fleq@ff1
  4729  00F8F0  C0B9  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4730  00F8F4  C0BA  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4731  00F8F8  C0BB  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4732  00F8FC  C0BC  F005         	movff	efgtoa@l,___fleq@ff2
  4733  00F900  C0BD  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4734  00F904  C0BE  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4735  00F908  C0BF  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4736  00F90C  EC12  F063         	call	___fleq	;wreg free
  4737  00F910  A0D8               	btfss	status,0,c
  4738  00F912  EF8D  F07C         	goto	u5441
  4739  00F916  EF8F  F07C         	goto	u5440
  4740  00F91A                     u5441:
  4741  00F91A  EF9F  F07C         	goto	l4226
  4742  00F91E                     u5440:
  4743  00F91E  0100               	movlb	0	; () banked
  4744  00F920  B1AE               	btfsc	efgtoa@d& (0+255),0,b
  4745  00F922  EF95  F07C         	goto	u5451
  4746  00F926  EF97  F07C         	goto	u5450
  4747  00F92A                     u5451:
  4748  00F92A  EF9F  F07C         	goto	l4226
  4749  00F92E                     u5450:
  4750  00F92E                     
  4751                           ; BSR set to: 0
  4752                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4753  00F92E  0E00               	movlw	0
  4754  00F930  6FBC               	movwf	efgtoa@l& (0+255),b
  4755  00F932  0E00               	movlw	0
  4756  00F934  6FBD               	movwf	(efgtoa@l+1)& (0+255),b
  4757  00F936  0E00               	movlw	0
  4758  00F938  6FBE               	movwf	(efgtoa@l+2)& (0+255),b
  4759  00F93A  0E00               	movlw	0
  4760  00F93C  6FBF               	movwf	(efgtoa@l+3)& (0+255),b
  4761  00F93E                     l4226:
  4762                           
  4763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4764  00F93E  C0C2  F001         	movff	efgtoa@g,___fladd@b
  4765  00F942  C0C3  F002         	movff	efgtoa@g+1,___fladd@b+1
  4766  00F946  C0C4  F003         	movff	efgtoa@g+2,___fladd@b+2
  4767  00F94A  C0C5  F004         	movff	efgtoa@g+3,___fladd@b+3
  4768  00F94E  C0BC  F005         	movff	efgtoa@l,___fladd@a
  4769  00F952  C0BD  F006         	movff	efgtoa@l+1,___fladd@a+1
  4770  00F956  C0BE  F007         	movff	efgtoa@l+2,___fladd@a+2
  4771  00F95A  C0BF  F008         	movff	efgtoa@l+3,___fladd@a+3
  4772  00F95E  EC37  F072         	call	___fladd	;wreg free
  4773  00F962  C001  F0B8         	movff	?___fladd,efgtoa@h
  4774  00F966  C002  F0B9         	movff	?___fladd+1,efgtoa@h+1
  4775  00F96A  C003  F0BA         	movff	?___fladd+2,efgtoa@h+2
  4776  00F96E  C004  F0BB         	movff	?___fladd+3,efgtoa@h+3
  4777  00F972                     
  4778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4779  00F972  C0B8  F01A         	movff	efgtoa@h,___flge@ff1
  4780  00F976  C0B9  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4781  00F97A  C0BA  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4782  00F97E  C0BB  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4783  00F982  0E00               	movlw	0
  4784  00F984  6E05               	movwf	___flmul@a^0,c
  4785  00F986  0E00               	movlw	0
  4786  00F988  6E06               	movwf	(___flmul@a+1)^0,c
  4787  00F98A  0E20               	movlw	32
  4788  00F98C  6E07               	movwf	(___flmul@a+2)^0,c
  4789  00F98E  0E41               	movlw	65
  4790  00F990  6E08               	movwf	(___flmul@a+3)^0,c
  4791  00F992  C0AA  F001         	movff	efgtoa@ou,___flmul@b
  4792  00F996  C0AB  F002         	movff	efgtoa@ou+1,___flmul@b+1
  4793  00F99A  C0AC  F003         	movff	efgtoa@ou+2,___flmul@b+2
  4794  00F99E  C0AD  F004         	movff	efgtoa@ou+3,___flmul@b+3
  4795  00F9A2  EC22  F070         	call	___flmul	;wreg free
  4796  00F9A6  C001  F01E         	movff	?___flmul,___flge@ff2
  4797  00F9AA  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  4798  00F9AE  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  4799  00F9B2  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  4800  00F9B6  ECD1  F065         	call	___flge	;wreg free
  4801  00F9BA  A0D8               	btfss	status,0,c
  4802  00F9BC  EFE2  F07C         	goto	u5461
  4803  00F9C0  EFE4  F07C         	goto	u5460
  4804  00F9C4                     u5461:
  4805  00F9C4  EF0D  F07D         	goto	l4238
  4806  00F9C8                     u5460:
  4807  00F9C8                     
  4808                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  4809  00F9C8  0100               	movlb	0	; () banked
  4810  00F9CA  4BC6               	infsnz	efgtoa@e& (0+255),f,b
  4811  00F9CC  2BC7               	incf	(efgtoa@e+1)& (0+255),f,b
  4812  00F9CE                     
  4813                           ; BSR set to: 0
  4814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4815  00F9CE  C0AA  F001         	movff	efgtoa@ou,___flmul@b
  4816  00F9D2  C0AB  F002         	movff	efgtoa@ou+1,___flmul@b+1
  4817  00F9D6  C0AC  F003         	movff	efgtoa@ou+2,___flmul@b+2
  4818  00F9DA  C0AD  F004         	movff	efgtoa@ou+3,___flmul@b+3
  4819  00F9DE  0E00               	movlw	0
  4820  00F9E0  6E05               	movwf	___flmul@a^0,c
  4821  00F9E2  0E00               	movlw	0
  4822  00F9E4  6E06               	movwf	(___flmul@a+1)^0,c
  4823  00F9E6  0E20               	movlw	32
  4824  00F9E8  6E07               	movwf	(___flmul@a+2)^0,c
  4825  00F9EA  0E41               	movlw	65
  4826  00F9EC  6E08               	movwf	(___flmul@a+3)^0,c
  4827  00F9EE  EC22  F070         	call	___flmul	;wreg free
  4828  00F9F2  C001  F0AA         	movff	?___flmul,efgtoa@ou
  4829  00F9F6  C002  F0AB         	movff	?___flmul+1,efgtoa@ou+1
  4830  00F9FA  C003  F0AC         	movff	?___flmul+2,efgtoa@ou+2
  4831  00F9FE  C004  F0AD         	movff	?___flmul+3,efgtoa@ou+3
  4832  00FA02                     
  4833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4834  00FA02  0E66               	movlw	102
  4835  00FA04  0100               	movlb	0	; () banked
  4836  00FA06  19B6               	xorwf	efgtoa@nmode& (0+255),w,b
  4837  00FA08  A4D8               	btfss	status,2,c
  4838  00FA0A  EF09  F07D         	goto	u5471
  4839  00FA0E  EF0B  F07D         	goto	u5470
  4840  00FA12                     u5471:
  4841  00FA12  EF0D  F07D         	goto	l4238
  4842  00FA16                     u5470:
  4843  00FA16                     
  4844                           ; BSR set to: 0
  4845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  4846  00FA16  4BA8               	infsnz	efgtoa@m& (0+255),f,b
  4847  00FA18  2BA9               	incf	(efgtoa@m+1)& (0+255),f,b
  4848  00FA1A                     l4238:
  4849                           
  4850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4851  00FA1A  C0AA  F0CA         	movff	efgtoa@ou,efgtoa@u
  4852  00FA1E  C0AB  F0CB         	movff	efgtoa@ou+1,efgtoa@u+1
  4853  00FA22  C0AC  F0CC         	movff	efgtoa@ou+2,efgtoa@u+2
  4854  00FA26  C0AD  F0CD         	movff	efgtoa@ou+3,efgtoa@u+3
  4855  00FA2A                     
  4856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4857  00FA2A  0E65               	movlw	101
  4858  00FA2C  0100               	movlb	0	; () banked
  4859  00FA2E  19B6               	xorwf	efgtoa@nmode& (0+255),w,b
  4860  00FA30  B4D8               	btfsc	status,2,c
  4861  00FA32  EF1D  F07D         	goto	u5481
  4862  00FA36  EF1F  F07D         	goto	u5480
  4863  00FA3A                     u5481:
  4864  00FA3A  EF25  F07D         	goto	l4244
  4865  00FA3E                     u5480:
  4866  00FA3E                     
  4867                           ; BSR set to: 0
  4868  00FA3E  C0C6  F0A6         	movff	efgtoa@e,efgtoa@ne
  4869  00FA42  C0C7  F0A7         	movff	efgtoa@e+1,efgtoa@ne+1
  4870  00FA46  EF29  F07D         	goto	l969
  4871  00FA4A                     l4244:
  4872                           
  4873                           ; BSR set to: 0
  4874  00FA4A  0E00               	movlw	0
  4875  00FA4C  6FA7               	movwf	(efgtoa@ne+1)& (0+255),b
  4876  00FA4E  0E00               	movlw	0
  4877  00FA50  6FA6               	movwf	efgtoa@ne& (0+255),b
  4878  00FA52                     l969:
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4882  00FA52  0E00               	movlw	0
  4883  00FA54  6FA5               	movwf	(efgtoa@pp+1)& (0+255),b
  4884  00FA56  0E00               	movlw	0
  4885  00FA58  6FA4               	movwf	efgtoa@pp& (0+255),b
  4886                           
  4887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4888  00FA5A  0E00               	movlw	0
  4889  00FA5C  6FA3               	movwf	(efgtoa@t+1)& (0+255),b
  4890  00FA5E  0E00               	movlw	0
  4891  00FA60  6FA2               	movwf	efgtoa@t& (0+255),b
  4892                           
  4893                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4894  00FA62  0E00               	movlw	0
  4895  00FA64  6FC1               	movwf	(efgtoa@i+1)& (0+255),b
  4896  00FA66  0E00               	movlw	0
  4897  00FA68  6FC0               	movwf	efgtoa@i& (0+255),b
  4898                           
  4899                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4900  00FA6A  EF25  F07E         	goto	l4294
  4901  00FA6E                     l4246:
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4905  00FA6E  C0B8  F001         	movff	efgtoa@h,___fldiv@b
  4906  00FA72  C0B9  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4907  00FA76  C0BA  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4908  00FA7A  C0BB  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4909  00FA7E  C0CA  F005         	movff	efgtoa@u,___fldiv@a
  4910  00FA82  C0CB  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4911  00FA86  C0CC  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4912  00FA8A  C0CD  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4913  00FA8E  EC55  F06E         	call	___fldiv	;wreg free
  4914  00FA92  C001  F01A         	movff	?___fldiv,floorf@x
  4915  00FA96  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4916  00FA9A  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4917  00FA9E  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4918  00FAA2  EC71  F06A         	call	_floorf	;wreg free
  4919  00FAA6  C01A  F0BC         	movff	?_floorf,efgtoa@l
  4920  00FAAA  C01B  F0BD         	movff	?_floorf+1,efgtoa@l+1
  4921  00FAAE  C01C  F0BE         	movff	?_floorf+2,efgtoa@l+2
  4922  00FAB2  C01D  F0BF         	movff	?_floorf+3,efgtoa@l+3
  4923                           
  4924                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4925  00FAB6  C0BC  F001         	movff	efgtoa@l,___fltol@f1
  4926  00FABA  C0BD  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4927  00FABE  C0BE  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4928  00FAC2  C0BF  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4929  00FAC6  EC53  F066         	call	___fltol	;wreg free
  4930  00FACA  C001  F0AE         	movff	?___fltol,efgtoa@d
  4931  00FACE  C002  F0AF         	movff	?___fltol+1,efgtoa@d+1
  4932  00FAD2                     
  4933                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4934  00FAD2  B87C               	btfsc	_flags^0,4,c
  4935  00FAD4  EF6E  F07D         	goto	u5491
  4936  00FAD8  EF70  F07D         	goto	u5490
  4937  00FADC                     u5491:
  4938  00FADC  EF8E  F07D         	goto	l4258
  4939  00FAE0                     u5490:
  4940  00FAE0  0100               	movlb	0	; () banked
  4941  00FAE2  51AE               	movf	efgtoa@d& (0+255),w,b
  4942  00FAE4  11AF               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4943  00FAE6  A4D8               	btfss	status,2,c
  4944  00FAE8  EF78  F07D         	goto	u5501
  4945  00FAEC  EF7A  F07D         	goto	u5500
  4946  00FAF0                     u5501:
  4947  00FAF0  EF8E  F07D         	goto	l4258
  4948  00FAF4                     u5500:
  4949  00FAF4                     
  4950                           ; BSR set to: 0
  4951  00FAF4  0E67               	movlw	103
  4952  00FAF6  19B7               	xorwf	efgtoa@mode& (0+255),w,b
  4953  00FAF8  A4D8               	btfss	status,2,c
  4954  00FAFA  EF81  F07D         	goto	u5511
  4955  00FAFE  EF83  F07D         	goto	u5510
  4956  00FB02                     u5511:
  4957  00FB02  EF8E  F07D         	goto	l4258
  4958  00FB06                     u5510:
  4959  00FB06                     
  4960                           ; BSR set to: 0
  4961  00FB06  BFA7               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4962  00FB08  EF8A  F07D         	goto	u5520
  4963  00FB0C  EF88  F07D         	goto	u5521
  4964  00FB10                     u5521:
  4965  00FB10  EF8E  F07D         	goto	l4258
  4966  00FB14                     u5520:
  4967  00FB14                     
  4968                           ; BSR set to: 0
  4969                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4970  00FB14  4BA2               	infsnz	efgtoa@t& (0+255),f,b
  4971  00FB16  2BA3               	incf	(efgtoa@t+1)& (0+255),f,b
  4972                           
  4973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4974  00FB18  EFD9  F07D         	goto	l4286
  4975  00FB1C                     l4258:
  4976                           
  4977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4978  00FB1C  0100               	movlb	0	; () banked
  4979  00FB1E  51A4               	movf	efgtoa@pp& (0+255),w,b
  4980  00FB20  11A5               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4981  00FB22  A4D8               	btfss	status,2,c
  4982  00FB24  EF96  F07D         	goto	u5531
  4983  00FB28  EF98  F07D         	goto	u5530
  4984  00FB2C                     u5531:
  4985  00FB2C  EFC2  F07D         	goto	l4278
  4986  00FB30                     u5530:
  4987  00FB30                     
  4988                           ; BSR set to: 0
  4989  00FB30  BFA7               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4990  00FB32  EF9F  F07D         	goto	u5540
  4991  00FB36  EF9D  F07D         	goto	u5541
  4992  00FB3A                     u5541:
  4993  00FB3A  EFC2  F07D         	goto	l4278
  4994  00FB3E                     u5540:
  4995  00FB3E                     
  4996                           ; BSR set to: 0
  4997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4998  00FB3E  0E00               	movlw	low _dbuf
  4999  00FB40  25C8               	addwf	efgtoa@n& (0+255),w,b
  5000  00FB42  6ED9               	movwf	fsr2l,c
  5001  00FB44  0E01               	movlw	high _dbuf
  5002  00FB46  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5003  00FB48  6EDA               	movwf	fsr2h,c
  5004  00FB4A  0E2E               	movlw	46
  5005  00FB4C  6EDF               	movwf	indf2,c
  5006  00FB4E                     
  5007                           ; BSR set to: 0
  5008  00FB4E  4BC8               	infsnz	efgtoa@n& (0+255),f,b
  5009  00FB50  2BC9               	incf	(efgtoa@n+1)& (0+255),f,b
  5010  00FB52                     
  5011                           ; BSR set to: 0
  5012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5013  00FB52  07B4               	decf	efgtoa@w& (0+255),f,b
  5014  00FB54  A0D8               	btfss	status,0,c
  5015  00FB56  07B5               	decf	(efgtoa@w+1)& (0+255),f,b
  5016  00FB58                     
  5017                           ; BSR set to: 0
  5018                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5019  00FB58  0E00               	movlw	0
  5020  00FB5A  6FA5               	movwf	(efgtoa@pp+1)& (0+255),b
  5021  00FB5C  0E01               	movlw	1
  5022  00FB5E  6FA4               	movwf	efgtoa@pp& (0+255),b
  5023  00FB60  EFC2  F07D         	goto	l4278
  5024  00FB64                     l4270:
  5025                           
  5026                           ; BSR set to: 0
  5027                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5028  00FB64  0E00               	movlw	low _dbuf
  5029  00FB66  25C8               	addwf	efgtoa@n& (0+255),w,b
  5030  00FB68  6ED9               	movwf	fsr2l,c
  5031  00FB6A  0E01               	movlw	high _dbuf
  5032  00FB6C  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5033  00FB6E  6EDA               	movwf	fsr2h,c
  5034  00FB70  0E30               	movlw	48
  5035  00FB72  6EDF               	movwf	indf2,c
  5036  00FB74                     
  5037                           ; BSR set to: 0
  5038  00FB74  4BC8               	infsnz	efgtoa@n& (0+255),f,b
  5039  00FB76  2BC9               	incf	(efgtoa@n+1)& (0+255),f,b
  5040  00FB78                     
  5041                           ; BSR set to: 0
  5042                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5043  00FB78  07B4               	decf	efgtoa@w& (0+255),f,b
  5044  00FB7A  A0D8               	btfss	status,0,c
  5045  00FB7C  07B5               	decf	(efgtoa@w+1)& (0+255),f,b
  5046  00FB7E                     
  5047                           ; BSR set to: 0
  5048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5049  00FB7E  07A2               	decf	efgtoa@t& (0+255),f,b
  5050  00FB80  A0D8               	btfss	status,0,c
  5051  00FB82  07A3               	decf	(efgtoa@t+1)& (0+255),f,b
  5052  00FB84                     l4278:
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5056  00FB84  51A2               	movf	efgtoa@t& (0+255),w,b
  5057  00FB86  11A3               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5058  00FB88  A4D8               	btfss	status,2,c
  5059  00FB8A  EFC9  F07D         	goto	u5551
  5060  00FB8E  EFCB  F07D         	goto	u5550
  5061  00FB92                     u5551:
  5062  00FB92  EFB2  F07D         	goto	l4270
  5063  00FB96                     u5550:
  5064  00FB96                     
  5065                           ; BSR set to: 0
  5066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5067  00FB96  0E00               	movlw	low _dbuf
  5068  00FB98  25C8               	addwf	efgtoa@n& (0+255),w,b
  5069  00FB9A  6ED9               	movwf	fsr2l,c
  5070  00FB9C  0E01               	movlw	high _dbuf
  5071  00FB9E  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5072  00FBA0  6EDA               	movwf	fsr2h,c
  5073  00FBA2  51AE               	movf	efgtoa@d& (0+255),w,b
  5074  00FBA4  0F30               	addlw	48
  5075  00FBA6  6EDF               	movwf	indf2,c
  5076  00FBA8                     
  5077                           ; BSR set to: 0
  5078  00FBA8  4BC8               	infsnz	efgtoa@n& (0+255),f,b
  5079  00FBAA  2BC9               	incf	(efgtoa@n+1)& (0+255),f,b
  5080  00FBAC                     
  5081                           ; BSR set to: 0
  5082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5083  00FBAC  07B4               	decf	efgtoa@w& (0+255),f,b
  5084  00FBAE  A0D8               	btfss	status,0,c
  5085  00FBB0  07B5               	decf	(efgtoa@w+1)& (0+255),f,b
  5086  00FBB2                     l4286:
  5087                           
  5088                           ; BSR set to: 0
  5089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5090  00FBB2  C0B8  F01A         	movff	efgtoa@h,___flsub@b
  5091  00FBB6  C0B9  F01B         	movff	efgtoa@h+1,___flsub@b+1
  5092  00FBBA  C0BA  F01C         	movff	efgtoa@h+2,___flsub@b+2
  5093  00FBBE  C0BB  F01D         	movff	efgtoa@h+3,___flsub@b+3
  5094  00FBC2  C0CA  F005         	movff	efgtoa@u,___flmul@a
  5095  00FBC6  C0CB  F006         	movff	efgtoa@u+1,___flmul@a+1
  5096  00FBCA  C0CC  F007         	movff	efgtoa@u+2,___flmul@a+2
  5097  00FBCE  C0CD  F008         	movff	efgtoa@u+3,___flmul@a+3
  5098  00FBD2  C0BC  F001         	movff	efgtoa@l,___flmul@b
  5099  00FBD6  C0BD  F002         	movff	efgtoa@l+1,___flmul@b+1
  5100  00FBDA  C0BE  F003         	movff	efgtoa@l+2,___flmul@b+2
  5101  00FBDE  C0BF  F004         	movff	efgtoa@l+3,___flmul@b+3
  5102  00FBE2  EC22  F070         	call	___flmul	;wreg free
  5103  00FBE6  C001  F01E         	movff	?___flmul,___flsub@a
  5104  00FBEA  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  5105  00FBEE  C003  F020         	movff	?___flmul+2,___flsub@a+2
  5106  00FBF2  C004  F021         	movff	?___flmul+3,___flsub@a+3
  5107  00FBF6  ECAD  F061         	call	___flsub	;wreg free
  5108  00FBFA  C01A  F0B8         	movff	?___flsub,efgtoa@h
  5109  00FBFE  C01B  F0B9         	movff	?___flsub+1,efgtoa@h+1
  5110  00FC02  C01C  F0BA         	movff	?___flsub+2,efgtoa@h+2
  5111  00FC06  C01D  F0BB         	movff	?___flsub+3,efgtoa@h+3
  5112  00FC0A                     
  5113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5114  00FC0A  C0CA  F001         	movff	efgtoa@u,___fldiv@b
  5115  00FC0E  C0CB  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5116  00FC12  C0CC  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5117  00FC16  C0CD  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5118  00FC1A  0E00               	movlw	0
  5119  00FC1C  6E05               	movwf	___fldiv@a^0,c
  5120  00FC1E  0E00               	movlw	0
  5121  00FC20  6E06               	movwf	(___fldiv@a+1)^0,c
  5122  00FC22  0E20               	movlw	32
  5123  00FC24  6E07               	movwf	(___fldiv@a+2)^0,c
  5124  00FC26  0E41               	movlw	65
  5125  00FC28  6E08               	movwf	(___fldiv@a+3)^0,c
  5126  00FC2A  EC55  F06E         	call	___fldiv	;wreg free
  5127  00FC2E  C001  F0CA         	movff	?___fldiv,efgtoa@u
  5128  00FC32  C002  F0CB         	movff	?___fldiv+1,efgtoa@u+1
  5129  00FC36  C003  F0CC         	movff	?___fldiv+2,efgtoa@u+2
  5130  00FC3A  C004  F0CD         	movff	?___fldiv+3,efgtoa@u+3
  5131  00FC3E                     
  5132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5133  00FC3E  0100               	movlb	0	; () banked
  5134  00FC40  07A6               	decf	efgtoa@ne& (0+255),f,b
  5135  00FC42  A0D8               	btfss	status,0,c
  5136  00FC44  07A7               	decf	(efgtoa@ne+1)& (0+255),f,b
  5137  00FC46                     
  5138                           ; BSR set to: 0
  5139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5140  00FC46  4BC0               	infsnz	efgtoa@i& (0+255),f,b
  5141  00FC48  2BC1               	incf	(efgtoa@i+1)& (0+255),f,b
  5142  00FC4A                     l4294:
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5146  00FC4A  51A8               	movf	efgtoa@m& (0+255),w,b
  5147  00FC4C  5DC0               	subwf	efgtoa@i& (0+255),w,b
  5148  00FC4E  51C1               	movf	(efgtoa@i+1)& (0+255),w,b
  5149  00FC50  0A80               	xorlw	128
  5150  00FC52  6E35               	movwf	??_efgtoa^0,c
  5151  00FC54  51A9               	movf	(efgtoa@m+1)& (0+255),w,b
  5152  00FC56  0A80               	xorlw	128
  5153  00FC58  5835               	subwfb	??_efgtoa^0,w,c
  5154  00FC5A  B0D8               	btfsc	status,0,c
  5155  00FC5C  EF32  F07E         	goto	u5561
  5156  00FC60  EF34  F07E         	goto	u5560
  5157  00FC64                     u5561:
  5158  00FC64  EF42  F07E         	goto	l4298
  5159  00FC68                     u5560:
  5160  00FC68                     
  5161                           ; BSR set to: 0
  5162  00FC68  BFC9               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5163  00FC6A  EF40  F07E         	goto	u5571
  5164  00FC6E  51C9               	movf	(efgtoa@n+1)& (0+255),w,b
  5165  00FC70  E109               	bnz	u5570
  5166  00FC72  0E4B               	movlw	75
  5167  00FC74  5DC8               	subwf	efgtoa@n& (0+255),w,b
  5168  00FC76  A0D8               	btfss	status,0,c
  5169  00FC78  EF40  F07E         	goto	u5571
  5170  00FC7C  EF42  F07E         	goto	u5570
  5171  00FC80                     u5571:
  5172  00FC80  EF37  F07D         	goto	l4246
  5173  00FC84                     u5570:
  5174  00FC84                     l4298:
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5178  00FC84  51A4               	movf	efgtoa@pp& (0+255),w,b
  5179  00FC86  11A5               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5180  00FC88  A4D8               	btfss	status,2,c
  5181  00FC8A  EF49  F07E         	goto	u5581
  5182  00FC8E  EF4B  F07E         	goto	u5580
  5183  00FC92                     u5581:
  5184  00FC92  EF5C  F07E         	goto	l4306
  5185  00FC96                     u5580:
  5186  00FC96                     
  5187                           ; BSR set to: 0
  5188  00FC96  A87C               	btfss	_flags^0,4,c
  5189  00FC98  EF50  F07E         	goto	u5591
  5190  00FC9C  EF52  F07E         	goto	u5590
  5191  00FCA0                     u5591:
  5192  00FCA0  EF5C  F07E         	goto	l4306
  5193  00FCA4                     u5590:
  5194  00FCA4                     
  5195                           ; BSR set to: 0
  5196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5197  00FCA4  0E00               	movlw	low _dbuf
  5198  00FCA6  25C8               	addwf	efgtoa@n& (0+255),w,b
  5199  00FCA8  6ED9               	movwf	fsr2l,c
  5200  00FCAA  0E01               	movlw	high _dbuf
  5201  00FCAC  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5202  00FCAE  6EDA               	movwf	fsr2h,c
  5203  00FCB0  0E2E               	movlw	46
  5204  00FCB2  6EDF               	movwf	indf2,c
  5205  00FCB4                     
  5206                           ; BSR set to: 0
  5207  00FCB4  4BC8               	infsnz	efgtoa@n& (0+255),f,b
  5208  00FCB6  2BC9               	incf	(efgtoa@n+1)& (0+255),f,b
  5209  00FCB8                     l4306:
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5213  00FCB8  0E00               	movlw	low _dbuf
  5214  00FCBA  25C8               	addwf	efgtoa@n& (0+255),w,b
  5215  00FCBC  6ED9               	movwf	fsr2l,c
  5216  00FCBE  0E01               	movlw	high _dbuf
  5217  00FCC0  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5218  00FCC2  6EDA               	movwf	fsr2h,c
  5219  00FCC4  0E00               	movlw	0
  5220  00FCC6  6EDF               	movwf	indf2,c
  5221  00FCC8                     
  5222                           ; BSR set to: 0
  5223                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5224  00FCC8  0E65               	movlw	101
  5225  00FCCA  19B6               	xorwf	efgtoa@nmode& (0+255),w,b
  5226  00FCCC  A4D8               	btfss	status,2,c
  5227  00FCCE  EF6B  F07E         	goto	u5601
  5228  00FCD2  EF6D  F07E         	goto	u5600
  5229  00FCD6                     u5601:
  5230  00FCD6  EFC6  F079         	goto	l4108
  5231  00FCDA                     u5600:
  5232  00FCDA                     
  5233                           ; BSR set to: 0
  5234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5235  00FCDA  0E00               	movlw	0
  5236  00FCDC  6FC1               	movwf	(efgtoa@i+1)& (0+255),b
  5237  00FCDE  0E4F               	movlw	79
  5238  00FCE0  6FC0               	movwf	efgtoa@i& (0+255),b
  5239  00FCE2                     
  5240                           ; BSR set to: 0
  5241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5242  00FCE2  0E00               	movlw	low _dbuf
  5243  00FCE4  25C0               	addwf	efgtoa@i& (0+255),w,b
  5244  00FCE6  6ED9               	movwf	fsr2l,c
  5245  00FCE8  0E01               	movlw	high _dbuf
  5246  00FCEA  21C1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5247  00FCEC  6EDA               	movwf	fsr2h,c
  5248  00FCEE  0E00               	movlw	0
  5249  00FCF0  6EDF               	movwf	indf2,c
  5250  00FCF2                     
  5251                           ; BSR set to: 0
  5252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5253  00FCF2  0E00               	movlw	0
  5254  00FCF4  6FB1               	movwf	(efgtoa@sign+1)& (0+255),b
  5255  00FCF6  0E00               	movlw	0
  5256  00FCF8  6FB0               	movwf	efgtoa@sign& (0+255),b
  5257  00FCFA                     
  5258                           ; BSR set to: 0
  5259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5260  00FCFA  BFC7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5261  00FCFC  EF84  F07E         	goto	u5610
  5262  00FD00  EF82  F07E         	goto	u5611
  5263  00FD04                     u5611:
  5264  00FD04  EF8C  F07E         	goto	l4322
  5265  00FD08                     u5610:
  5266  00FD08                     
  5267                           ; BSR set to: 0
  5268                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5269  00FD08  0E00               	movlw	0
  5270  00FD0A  6FB1               	movwf	(efgtoa@sign+1)& (0+255),b
  5271  00FD0C  0E01               	movlw	1
  5272  00FD0E  6FB0               	movwf	efgtoa@sign& (0+255),b
  5273  00FD10                     
  5274                           ; BSR set to: 0
  5275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5276  00FD10  6DC6               	negf	efgtoa@e& (0+255),b
  5277  00FD12  1FC7               	comf	(efgtoa@e+1)& (0+255),f,b
  5278  00FD14  B0D8               	btfsc	status,0,c
  5279  00FD16  2BC7               	incf	(efgtoa@e+1)& (0+255),f,b
  5280  00FD18                     l4322:
  5281                           
  5282                           ; BSR set to: 0
  5283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5284  00FD18  0E00               	movlw	0
  5285  00FD1A  6FB3               	movwf	(efgtoa@p+1)& (0+255),b
  5286  00FD1C  0E02               	movlw	2
  5287  00FD1E  6FB2               	movwf	efgtoa@p& (0+255),b
  5288                           
  5289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5290  00FD20  EFBD  F07E         	goto	l4334
  5291  00FD24                     l4324:
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5295  00FD24  07C0               	decf	efgtoa@i& (0+255),f,b
  5296  00FD26  A0D8               	btfss	status,0,c
  5297  00FD28  07C1               	decf	(efgtoa@i+1)& (0+255),f,b
  5298  00FD2A                     
  5299                           ; BSR set to: 0
  5300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5301  00FD2A  0E00               	movlw	low _dbuf
  5302  00FD2C  25C0               	addwf	efgtoa@i& (0+255),w,b
  5303  00FD2E  6ED9               	movwf	fsr2l,c
  5304  00FD30  0E01               	movlw	high _dbuf
  5305  00FD32  21C1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5306  00FD34  6EDA               	movwf	fsr2h,c
  5307  00FD36  C0C6  F001         	movff	efgtoa@e,___awmod@dividend
  5308  00FD3A  C0C7  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  5309  00FD3E  0E00               	movlw	0
  5310  00FD40  6E04               	movwf	(___awmod@divisor+1)^0,c
  5311  00FD42  0E0A               	movlw	10
  5312  00FD44  6E03               	movwf	___awmod@divisor^0,c
  5313  00FD46  EC67  F063         	call	___awmod	;wreg free
  5314  00FD4A  5001               	movf	?___awmod^0,w,c
  5315  00FD4C  0F30               	addlw	48
  5316  00FD4E  6EDF               	movwf	indf2,c
  5317  00FD50                     
  5318                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5319  00FD50  C0C6  F001         	movff	efgtoa@e,___awdiv@dividend
  5320  00FD54  C0C7  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  5321  00FD58  0E00               	movlw	0
  5322  00FD5A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5323  00FD5C  0E0A               	movlw	10
  5324  00FD5E  6E03               	movwf	___awdiv@divisor^0,c
  5325  00FD60  EC20  F064         	call	___awdiv	;wreg free
  5326  00FD64  C001  F0C6         	movff	?___awdiv,efgtoa@e
  5327  00FD68  C002  F0C7         	movff	?___awdiv+1,efgtoa@e+1
  5328  00FD6C                     
  5329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5330  00FD6C  0100               	movlb	0	; () banked
  5331  00FD6E  07B2               	decf	efgtoa@p& (0+255),f,b
  5332  00FD70  A0D8               	btfss	status,0,c
  5333  00FD72  07B3               	decf	(efgtoa@p+1)& (0+255),f,b
  5334  00FD74                     
  5335                           ; BSR set to: 0
  5336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5337  00FD74  07B4               	decf	efgtoa@w& (0+255),f,b
  5338  00FD76  A0D8               	btfss	status,0,c
  5339  00FD78  07B5               	decf	(efgtoa@w+1)& (0+255),f,b
  5340  00FD7A                     l4334:
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5344  00FD7A  51C6               	movf	efgtoa@e& (0+255),w,b
  5345  00FD7C  11C7               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5346  00FD7E  A4D8               	btfss	status,2,c
  5347  00FD80  EFC4  F07E         	goto	u5621
  5348  00FD84  EFC6  F07E         	goto	u5620
  5349  00FD88                     u5621:
  5350  00FD88  EF92  F07E         	goto	l4324
  5351  00FD8C                     u5620:
  5352  00FD8C                     
  5353                           ; BSR set to: 0
  5354  00FD8C  BFB3               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5355  00FD8E  EFD3  F07E         	goto	u5630
  5356  00FD92  51B3               	movf	(efgtoa@p+1)& (0+255),w,b
  5357  00FD94  E106               	bnz	u5631
  5358  00FD96  05B2               	decf	efgtoa@p& (0+255),w,b
  5359  00FD98  B0D8               	btfsc	status,0,c
  5360  00FD9A  EFD1  F07E         	goto	u5631
  5361  00FD9E  EFD3  F07E         	goto	u5630
  5362  00FDA2                     u5631:
  5363  00FDA2  EF92  F07E         	goto	l4324
  5364  00FDA6                     u5630:
  5365  00FDA6                     
  5366                           ; BSR set to: 0
  5367                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  5368  00FDA6  07C0               	decf	efgtoa@i& (0+255),f,b
  5369  00FDA8  A0D8               	btfss	status,0,c
  5370  00FDAA  07C1               	decf	(efgtoa@i+1)& (0+255),f,b
  5371  00FDAC                     
  5372                           ; BSR set to: 0
  5373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5374  00FDAC  51B0               	movf	efgtoa@sign& (0+255),w,b
  5375  00FDAE  11B1               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5376  00FDB0  A4D8               	btfss	status,2,c
  5377  00FDB2  EFDD  F07E         	goto	u5641
  5378  00FDB6  EFDF  F07E         	goto	u5640
  5379  00FDBA                     u5641:
  5380  00FDBA  EFE5  F07E         	goto	l4344
  5381  00FDBE                     u5640:
  5382  00FDBE                     
  5383                           ; BSR set to: 0
  5384  00FDBE  0E00               	movlw	0
  5385  00FDC0  6F9D               	movwf	(_efgtoa$1060+1)& (0+255),b
  5386  00FDC2  0E2B               	movlw	43
  5387  00FDC4  6F9C               	movwf	_efgtoa$1060& (0+255),b
  5388  00FDC6  EFE9  F07E         	goto	l4346
  5389  00FDCA                     l4344:
  5390                           
  5391                           ; BSR set to: 0
  5392  00FDCA  0E00               	movlw	0
  5393  00FDCC  6F9D               	movwf	(_efgtoa$1060+1)& (0+255),b
  5394  00FDCE  0E2D               	movlw	45
  5395  00FDD0  6F9C               	movwf	_efgtoa$1060& (0+255),b
  5396  00FDD2                     l4346:
  5397                           
  5398                           ; BSR set to: 0
  5399  00FDD2  0E00               	movlw	low _dbuf
  5400  00FDD4  25C0               	addwf	efgtoa@i& (0+255),w,b
  5401  00FDD6  6ED9               	movwf	fsr2l,c
  5402  00FDD8  0E01               	movlw	high _dbuf
  5403  00FDDA  21C1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5404  00FDDC  6EDA               	movwf	fsr2h,c
  5405  00FDDE  C09C  FFDF         	movff	_efgtoa$1060,indf2
  5406  00FDE2                     
  5407                           ; BSR set to: 0
  5408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  5409  00FDE2  07B4               	decf	efgtoa@w& (0+255),f,b
  5410  00FDE4  A0D8               	btfss	status,0,c
  5411  00FDE6  07B5               	decf	(efgtoa@w+1)& (0+255),f,b
  5412  00FDE8                     
  5413                           ; BSR set to: 0
  5414                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5415  00FDE8  07C0               	decf	efgtoa@i& (0+255),f,b
  5416  00FDEA  A0D8               	btfss	status,0,c
  5417  00FDEC  07C1               	decf	(efgtoa@i+1)& (0+255),f,b
  5418  00FDEE                     
  5419                           ; BSR set to: 0
  5420  00FDEE  0EBF               	movlw	191
  5421  00FDF0  6E35               	movwf	??_efgtoa^0,c
  5422  00FDF2  0EFF               	movlw	255
  5423  00FDF4  6E36               	movwf	(??_efgtoa+1)^0,c
  5424  00FDF6  5034               	movf	efgtoa@c^0,w,c
  5425  00FDF8  6E37               	movwf	(??_efgtoa+2)^0,c
  5426  00FDFA  6A38               	clrf	(??_efgtoa+3)^0,c
  5427  00FDFC  5035               	movf	??_efgtoa^0,w,c
  5428  00FDFE  2637               	addwf	(??_efgtoa+2)^0,f,c
  5429  00FE00  5036               	movf	(??_efgtoa+1)^0,w,c
  5430  00FE02  2238               	addwfc	(??_efgtoa+3)^0,f,c
  5431  00FE04  5038               	movf	(??_efgtoa+3)^0,w,c
  5432  00FE06  E10A               	bnz	u5650
  5433  00FE08  0E1A               	movlw	26
  5434  00FE0A  5C37               	subwf	(??_efgtoa+2)^0,w,c
  5435  00FE0C  A0D8               	btfss	status,0,c
  5436  00FE0E  EF0B  F07F         	goto	u5651
  5437  00FE12  EF0E  F07F         	goto	u5650
  5438  00FE16                     u5651:
  5439  00FE16  0E01               	movlw	1
  5440  00FE18  EF0F  F07F         	goto	u5660
  5441  00FE1C                     u5650:
  5442  00FE1C  0E00               	movlw	0
  5443  00FE1E                     u5660:
  5444  00FE1E  6FA0               	movwf	_efgtoa$1062& (0+255),b
  5445  00FE20  6BA1               	clrf	(_efgtoa$1062+1)& (0+255),b
  5446  00FE22                     
  5447                           ; BSR set to: 0
  5448  00FE22  51A0               	movf	_efgtoa$1062& (0+255),w,b
  5449  00FE24  11A1               	iorwf	(_efgtoa$1062+1)& (0+255),w,b
  5450  00FE26  A4D8               	btfss	status,2,c
  5451  00FE28  EF18  F07F         	goto	u5671
  5452  00FE2C  EF1A  F07F         	goto	u5670
  5453  00FE30                     u5671:
  5454  00FE30  EF20  F07F         	goto	l4360
  5455  00FE34                     u5670:
  5456  00FE34                     
  5457                           ; BSR set to: 0
  5458  00FE34  0E00               	movlw	0
  5459  00FE36  6F9F               	movwf	(_efgtoa$1061+1)& (0+255),b
  5460  00FE38  0E65               	movlw	101
  5461  00FE3A  6F9E               	movwf	_efgtoa$1061& (0+255),b
  5462  00FE3C  EF24  F07F         	goto	l4362
  5463  00FE40                     l4360:
  5464                           
  5465                           ; BSR set to: 0
  5466  00FE40  0E00               	movlw	0
  5467  00FE42  6F9F               	movwf	(_efgtoa$1061+1)& (0+255),b
  5468  00FE44  0E45               	movlw	69
  5469  00FE46  6F9E               	movwf	_efgtoa$1061& (0+255),b
  5470  00FE48                     l4362:
  5471                           
  5472                           ; BSR set to: 0
  5473  00FE48  0E00               	movlw	low _dbuf
  5474  00FE4A  25C0               	addwf	efgtoa@i& (0+255),w,b
  5475  00FE4C  6ED9               	movwf	fsr2l,c
  5476  00FE4E  0E01               	movlw	high _dbuf
  5477  00FE50  21C1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5478  00FE52  6EDA               	movwf	fsr2h,c
  5479  00FE54  C09E  FFDF         	movff	_efgtoa$1061,indf2
  5480  00FE58                     
  5481                           ; BSR set to: 0
  5482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  5483  00FE58  07B4               	decf	efgtoa@w& (0+255),f,b
  5484  00FE5A  A0D8               	btfss	status,0,c
  5485  00FE5C  07B5               	decf	(efgtoa@w+1)& (0+255),f,b
  5486  00FE5E                     
  5487                           ; BSR set to: 0
  5488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5489  00FE5E  0E00               	movlw	low _dbuf
  5490  00FE60  25C8               	addwf	efgtoa@n& (0+255),w,b
  5491  00FE62  6E01               	movwf	strcpy@dest^0,c
  5492  00FE64  0E01               	movlw	high _dbuf
  5493  00FE66  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5494  00FE68  6E02               	movwf	(strcpy@dest+1)^0,c
  5495  00FE6A  0E00               	movlw	low _dbuf
  5496  00FE6C  25C0               	addwf	efgtoa@i& (0+255),w,b
  5497  00FE6E  6E03               	movwf	strcpy@src^0,c
  5498  00FE70  0E01               	movlw	high _dbuf
  5499  00FE72  21C1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5500  00FE74  6E04               	movwf	(strcpy@src+1)^0,c
  5501  00FE76  EC22  F062         	call	_strcpy	;wreg free
  5502  00FE7A  EFC6  F079         	goto	l4108
  5503  00FE7E                     l923:
  5504  00FE7E  0012               	return		;funcret
  5505  00FE80                     __end_of_efgtoa:
  5506                           	callstack 0
  5507                           
  5508 ;; *************** function _tolower *****************
  5509 ;; Defined at:
  5510 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  c               2    6[COMRAM] int 
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;		None
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  2    6[COMRAM] int 
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  5524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5525 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5526 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5527 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5528 ;;Total ram usage:        8 bytes
  5529 ;; Hardware stack levels used: 1
  5530 ;; Hardware stack levels required when called: 1
  5531 ;; This function calls:
  5532 ;;		_isupper
  5533 ;; This function is called by:
  5534 ;;		_efgtoa
  5535 ;;		_vfpfcnvrt
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           	psect	text10
  5540  00C500                     __ptext10:
  5541                           	callstack 0
  5542  00C500                     _tolower:
  5543                           	callstack 26
  5544  00C500  0EBF               	movlw	191
  5545  00C502  6E09               	movwf	??_tolower^0,c
  5546  00C504  0EFF               	movlw	255
  5547  00C506  6E0A               	movwf	(??_tolower+1)^0,c
  5548  00C508  C007  F00B         	movff	tolower@c,??_tolower+2
  5549  00C50C  C008  F00C         	movff	tolower@c+1,??_tolower+3
  5550  00C510  5009               	movf	??_tolower^0,w,c
  5551  00C512  260B               	addwf	(??_tolower+2)^0,f,c
  5552  00C514  500A               	movf	(??_tolower+1)^0,w,c
  5553  00C516  220C               	addwfc	(??_tolower+3)^0,f,c
  5554  00C518  500C               	movf	(??_tolower+3)^0,w,c
  5555  00C51A  E10A               	bnz	u4720
  5556  00C51C  0E1A               	movlw	26
  5557  00C51E  5C0B               	subwf	(??_tolower+2)^0,w,c
  5558  00C520  A0D8               	btfss	status,0,c
  5559  00C522  EF95  F062         	goto	u4721
  5560  00C526  EF98  F062         	goto	u4720
  5561  00C52A                     u4721:
  5562  00C52A  0E01               	movlw	1
  5563  00C52C  EF99  F062         	goto	u4730
  5564  00C530                     u4720:
  5565  00C530  0E00               	movlw	0
  5566  00C532                     u4730:
  5567  00C532  6E0D               	movwf	_tolower$1252^0,c
  5568  00C534  6A0E               	clrf	(_tolower$1252+1)^0,c
  5569  00C536  500D               	movf	_tolower$1252^0,w,c
  5570  00C538  100E               	iorwf	(_tolower$1252+1)^0,w,c
  5571  00C53A  B4D8               	btfsc	status,2,c
  5572  00C53C  EFA2  F062         	goto	u4741
  5573  00C540  EFA4  F062         	goto	u4740
  5574  00C544                     u4741:
  5575  00C544  EFAB  F062         	goto	l1221
  5576  00C548                     u4740:
  5577  00C548  0E20               	movlw	32
  5578  00C54A  1007               	iorwf	tolower@c^0,w,c
  5579  00C54C  6E07               	movwf	?_tolower^0,c
  5580  00C54E  5008               	movf	(tolower@c+1)^0,w,c
  5581  00C550  6E08               	movwf	(?_tolower+1)^0,c
  5582  00C552  EFAF  F062         	goto	l1226
  5583  00C556                     l1221:
  5584  00C556  C007  F007         	movff	tolower@c,?_tolower
  5585  00C55A  C008  F008         	movff	tolower@c+1,?_tolower+1
  5586  00C55E                     l1226:
  5587  00C55E  0012               	return		;funcret
  5588  00C560                     __end_of_tolower:
  5589                           	callstack 0
  5590                           
  5591 ;; *************** function _isupper *****************
  5592 ;; Defined at:
  5593 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;  c               2    0[COMRAM] int 
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;		None
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  2    0[COMRAM] int 
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  5607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5609 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5610 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5611 ;;Total ram usage:        6 bytes
  5612 ;; Hardware stack levels used: 1
  5613 ;; This function calls:
  5614 ;;		Nothing
  5615 ;; This function is called by:
  5616 ;;		_efgtoa
  5617 ;;		_xtoa
  5618 ;;		_vfpfcnvrt
  5619 ;;		_tolower
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text11
  5624  00C1E8                     __ptext11:
  5625                           	callstack 0
  5626  00C1E8                     _isupper:
  5627                           	callstack 26
  5628  00C1E8  0EBF               	movlw	191
  5629  00C1EA  6E03               	movwf	??_isupper^0,c
  5630  00C1EC  0EFF               	movlw	255
  5631  00C1EE  6E04               	movwf	(??_isupper+1)^0,c
  5632  00C1F0  C001  F005         	movff	isupper@c,??_isupper+2
  5633  00C1F4  C002  F006         	movff	isupper@c+1,??_isupper+3
  5634  00C1F8  5003               	movf	??_isupper^0,w,c
  5635  00C1FA  2605               	addwf	(??_isupper+2)^0,f,c
  5636  00C1FC  5004               	movf	(??_isupper+1)^0,w,c
  5637  00C1FE  2206               	addwfc	(??_isupper+3)^0,f,c
  5638  00C200  5006               	movf	(??_isupper+3)^0,w,c
  5639  00C202  E10A               	bnz	u3710
  5640  00C204  0E1A               	movlw	26
  5641  00C206  5C05               	subwf	(??_isupper+2)^0,w,c
  5642  00C208  A0D8               	btfss	status,0,c
  5643  00C20A  EF09  F061         	goto	u3711
  5644  00C20E  EF0C  F061         	goto	u3710
  5645  00C212                     u3711:
  5646  00C212  0E01               	movlw	1
  5647  00C214  EF0D  F061         	goto	u3720
  5648  00C218                     u3710:
  5649  00C218  0E00               	movlw	0
  5650  00C21A                     u3720:
  5651  00C21A  6E01               	movwf	?_isupper^0,c
  5652  00C21C  6A02               	clrf	(?_isupper+1)^0,c
  5653  00C21E  0012               	return		;funcret
  5654  00C220                     __end_of_isupper:
  5655                           	callstack 0
  5656                           
  5657 ;; *************** function _strcpy *****************
  5658 ;; Defined at:
  5659 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5662 ;;		 -> dbuf(80), 
  5663 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5664 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  5665 ;;		 -> dbuf(80), 
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;  d               2    8[COMRAM] PTR unsigned char 
  5668 ;;		 -> dbuf(80), 
  5669 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5670 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  5671 ;;		 -> dbuf(80), 
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  2    0[COMRAM] PTR unsigned char 
  5674 ;; Registers used:
  5675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  5681 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5682 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5683 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5684 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5685 ;;Total ram usage:       10 bytes
  5686 ;; Hardware stack levels used: 1
  5687 ;; This function calls:
  5688 ;;		Nothing
  5689 ;; This function is called by:
  5690 ;;		_efgtoa
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           	psect	text12
  5695  00C444                     __ptext12:
  5696                           	callstack 0
  5697  00C444                     _strcpy:
  5698                           	callstack 26
  5699  00C444  C003  F007         	movff	strcpy@src,strcpy@s
  5700  00C448  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5701  00C44C  C001  F009         	movff	strcpy@dest,strcpy@d
  5702  00C450  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5703  00C454                     l3904:
  5704  00C454  5007               	movf	strcpy@s^0,w,c
  5705  00C456  6E05               	movwf	??_strcpy^0,c
  5706  00C458  5008               	movf	(strcpy@s+1)^0,w,c
  5707  00C45A  6E06               	movwf	(??_strcpy+1)^0,c
  5708  00C45C  4A07               	infsnz	strcpy@s^0,f,c
  5709  00C45E  2A08               	incf	(strcpy@s+1)^0,f,c
  5710  00C460  C005  FFF6         	movff	??_strcpy,tblptrl
  5711  00C464  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5712  00C468  0E00               	movlw	low (__mediumconst shr (0+16))
  5713  00C46A  6EF8               	movwf	tblptru,c
  5714  00C46C  C009  FFD9         	movff	strcpy@d,fsr2l
  5715  00C470  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5716  00C474  4A09               	infsnz	strcpy@d^0,f,c
  5717  00C476  2A0A               	incf	(strcpy@d+1)^0,f,c
  5718  00C478  0E0F               	movlw	(high __ramtop+-1)
  5719  00C47A  64F7               	cpfsgt	tblptrh,c
  5720  00C47C  D003               	bra	u4707
  5721  00C47E  0008               	tblrd		*
  5722  00C480  50F5               	movf	tablat,w,c
  5723  00C482  D005               	bra	u4700
  5724  00C484                     u4707:
  5725  00C484  CFF6 FFE1          	movff	tblptrl,fsr1l
  5726  00C488  CFF7 FFE2          	movff	tblptrh,fsr1h
  5727  00C48C  50E7               	movf	indf1,w,c
  5728  00C48E                     u4700:
  5729  00C48E  6EDF               	movwf	indf2,c
  5730  00C490  50DF               	movf	indf2,w,c
  5731  00C492  A4D8               	btfss	status,2,c
  5732  00C494  EF4E  F062         	goto	u4711
  5733  00C498  EF50  F062         	goto	u4710
  5734  00C49C                     u4711:
  5735  00C49C  EF2A  F062         	goto	l3904
  5736  00C4A0                     u4710:
  5737  00C4A0  0012               	return		;funcret
  5738  00C4A2                     __end_of_strcpy:
  5739                           	callstack 0
  5740                           
  5741 ;; *************** function _floorf *****************
  5742 ;; Defined at:
  5743 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  x               4   25[COMRAM] float 
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;  u               4   41[COMRAM] struct .
  5748 ;;  m               4   35[COMRAM] unsigned long 
  5749 ;;  e               2   39[COMRAM] int 
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  4   25[COMRAM] float 
  5752 ;; Registers used:
  5753 ;;		wreg, status,2, status,0
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  5759 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5760 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5761 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5762 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5763 ;;Total ram usage:       20 bytes
  5764 ;; Hardware stack levels used: 1
  5765 ;; This function calls:
  5766 ;;		Nothing
  5767 ;; This function is called by:
  5768 ;;		_efgtoa
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           	psect	text13
  5773  00D4E2                     __ptext13:
  5774                           	callstack 0
  5775  00D4E2                     _floorf:
  5776                           	callstack 26
  5777  00D4E2  C0F0  F02A         	movff	floorf@F527,floorf@u
  5778  00D4E6  C0F1  F02B         	movff	floorf@F527+1,floorf@u+1
  5779  00D4EA  C0F2  F02C         	movff	floorf@F527+2,floorf@u+2
  5780  00D4EE  C0F3  F02D         	movff	floorf@F527+3,floorf@u+3
  5781  00D4F2  C01A  F02A         	movff	floorf@x,floorf@u
  5782  00D4F6  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  5783  00D4FA  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  5784  00D4FE  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  5785  00D502  0E81               	movlw	129
  5786  00D504  6E1E               	movwf	??_floorf^0,c
  5787  00D506  0EFF               	movlw	255
  5788  00D508  6E1F               	movwf	(??_floorf+1)^0,c
  5789  00D50A  C02A  F020         	movff	floorf@u,??_floorf+2
  5790  00D50E  C02B  F021         	movff	floorf@u+1,??_floorf+3
  5791  00D512  C02C  F022         	movff	floorf@u+2,??_floorf+4
  5792  00D516  C02D  F023         	movff	floorf@u+3,??_floorf+5
  5793  00D51A  0E18               	movlw	24
  5794  00D51C  EF95  F06A         	goto	u4750
  5795  00D520                     u4755:
  5796  00D520  90D8               	bcf	status,0,c
  5797  00D522  3223               	rrcf	(??_floorf+5)^0,f,c
  5798  00D524  3222               	rrcf	(??_floorf+4)^0,f,c
  5799  00D526  3221               	rrcf	(??_floorf+3)^0,f,c
  5800  00D528  3220               	rrcf	(??_floorf+2)^0,f,c
  5801  00D52A                     u4750:
  5802  00D52A  2EE8               	decfsz	wreg,f,c
  5803  00D52C  EF90  F06A         	goto	u4755
  5804  00D530  5020               	movf	(??_floorf+2)^0,w,c
  5805  00D532  241E               	addwf	??_floorf^0,w,c
  5806  00D534  6E28               	movwf	floorf@e^0,c
  5807  00D536  0E00               	movlw	0
  5808  00D538  201F               	addwfc	(??_floorf+1)^0,w,c
  5809  00D53A  6E29               	movwf	(floorf@e+1)^0,c
  5810  00D53C  BE29               	btfsc	(floorf@e+1)^0,7,c
  5811  00D53E  EFAA  F06A         	goto	u4761
  5812  00D542  5029               	movf	(floorf@e+1)^0,w,c
  5813  00D544  E109               	bnz	u4760
  5814  00D546  0E17               	movlw	23
  5815  00D548  5C28               	subwf	floorf@e^0,w,c
  5816  00D54A  A0D8               	btfss	status,0,c
  5817  00D54C  EFAA  F06A         	goto	u4761
  5818  00D550  EFAC  F06A         	goto	u4760
  5819  00D554                     u4761:
  5820  00D554  EFB6  F06A         	goto	l3922
  5821  00D558                     u4760:
  5822  00D558                     l3920:
  5823  00D558  C01A  F01A         	movff	floorf@x,?_floorf
  5824  00D55C  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  5825  00D560  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  5826  00D564  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  5827  00D568  EF79  F06B         	goto	l1139
  5828  00D56C                     l3922:
  5829  00D56C  BE29               	btfsc	(floorf@e+1)^0,7,c
  5830  00D56E  EFBB  F06A         	goto	u4771
  5831  00D572  EFBD  F06A         	goto	u4770
  5832  00D576                     u4771:
  5833  00D576  EF2D  F06B         	goto	l3932
  5834  00D57A                     u4770:
  5835  00D57A  C028  F01E         	movff	floorf@e,??_floorf
  5836  00D57E  0EFF               	movlw	255
  5837  00D580  6E1F               	movwf	(??_floorf+1)^0,c
  5838  00D582  0EFF               	movlw	255
  5839  00D584  6E20               	movwf	(??_floorf+2)^0,c
  5840  00D586  0E7F               	movlw	127
  5841  00D588  6E21               	movwf	(??_floorf+3)^0,c
  5842  00D58A  0E00               	movlw	0
  5843  00D58C  6E22               	movwf	(??_floorf+4)^0,c
  5844  00D58E                     u4785:
  5845  00D58E  661E               	tstfsz	??_floorf^0,c
  5846  00D590  EFCC  F06A         	goto	u4786
  5847  00D594  EFD4  F06A         	goto	u4787
  5848  00D598                     u4786:
  5849  00D598  3422               	rlcf	(??_floorf+4)^0,w,c
  5850  00D59A  3222               	rrcf	(??_floorf+4)^0,f,c
  5851  00D59C  3221               	rrcf	(??_floorf+3)^0,f,c
  5852  00D59E  3220               	rrcf	(??_floorf+2)^0,f,c
  5853  00D5A0  321F               	rrcf	(??_floorf+1)^0,f,c
  5854  00D5A2  2E1E               	decfsz	??_floorf^0,f,c
  5855  00D5A4  EFC7  F06A         	goto	u4785
  5856  00D5A8                     u4787:
  5857  00D5A8  C01F  F024         	movff	??_floorf+1,floorf@m
  5858  00D5AC  C020  F025         	movff	??_floorf+2,floorf@m+1
  5859  00D5B0  C021  F026         	movff	??_floorf+3,floorf@m+2
  5860  00D5B4  C022  F027         	movff	??_floorf+4,floorf@m+3
  5861  00D5B8  5024               	movf	floorf@m^0,w,c
  5862  00D5BA  142A               	andwf	floorf@u^0,w,c
  5863  00D5BC  6E1E               	movwf	??_floorf^0,c
  5864  00D5BE  5025               	movf	(floorf@m+1)^0,w,c
  5865  00D5C0  142B               	andwf	(floorf@u+1)^0,w,c
  5866  00D5C2  6E1F               	movwf	(??_floorf+1)^0,c
  5867  00D5C4  5026               	movf	(floorf@m+2)^0,w,c
  5868  00D5C6  142C               	andwf	(floorf@u+2)^0,w,c
  5869  00D5C8  6E20               	movwf	(??_floorf+2)^0,c
  5870  00D5CA  5027               	movf	(floorf@m+3)^0,w,c
  5871  00D5CC  142D               	andwf	(floorf@u+3)^0,w,c
  5872  00D5CE  6E21               	movwf	(??_floorf+3)^0,c
  5873  00D5D0  501E               	movf	??_floorf^0,w,c
  5874  00D5D2  101F               	iorwf	(??_floorf+1)^0,w,c
  5875  00D5D4  1020               	iorwf	(??_floorf+2)^0,w,c
  5876  00D5D6  1021               	iorwf	(??_floorf+3)^0,w,c
  5877  00D5D8  A4D8               	btfss	status,2,c
  5878  00D5DA  EFF1  F06A         	goto	u4791
  5879  00D5DE  EFF3  F06A         	goto	u4790
  5880  00D5E2                     u4791:
  5881  00D5E2  EFF5  F06A         	goto	l3928
  5882  00D5E6                     u4790:
  5883  00D5E6  EFAC  F06A         	goto	l3920
  5884  00D5EA                     l3928:
  5885  00D5EA  C02A  F01E         	movff	floorf@u,??_floorf
  5886  00D5EE  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5887  00D5F2  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5888  00D5F6  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5889  00D5FA  0E20               	movlw	32
  5890  00D5FC  EF05  F06B         	goto	u4800
  5891  00D600                     u4805:
  5892  00D600  90D8               	bcf	status,0,c
  5893  00D602  3221               	rrcf	(??_floorf+3)^0,f,c
  5894  00D604  3220               	rrcf	(??_floorf+2)^0,f,c
  5895  00D606  321F               	rrcf	(??_floorf+1)^0,f,c
  5896  00D608  321E               	rrcf	??_floorf^0,f,c
  5897  00D60A                     u4800:
  5898  00D60A  2EE8               	decfsz	wreg,f,c
  5899  00D60C  EF00  F06B         	goto	u4805
  5900  00D610  501E               	movf	??_floorf^0,w,c
  5901  00D612  101F               	iorwf	(??_floorf+1)^0,w,c
  5902  00D614  1020               	iorwf	(??_floorf+2)^0,w,c
  5903  00D616  1021               	iorwf	(??_floorf+3)^0,w,c
  5904  00D618  B4D8               	btfsc	status,2,c
  5905  00D61A  EF11  F06B         	goto	u4811
  5906  00D61E  EF13  F06B         	goto	u4810
  5907  00D622                     u4811:
  5908  00D622  EF1B  F06B         	goto	l1142
  5909  00D626                     u4810:
  5910  00D626  5024               	movf	floorf@m^0,w,c
  5911  00D628  262A               	addwf	floorf@u^0,f,c
  5912  00D62A  5025               	movf	(floorf@m+1)^0,w,c
  5913  00D62C  222B               	addwfc	(floorf@u+1)^0,f,c
  5914  00D62E  5026               	movf	(floorf@m+2)^0,w,c
  5915  00D630  222C               	addwfc	(floorf@u+2)^0,f,c
  5916  00D632  5027               	movf	(floorf@m+3)^0,w,c
  5917  00D634  222D               	addwfc	(floorf@u+3)^0,f,c
  5918  00D636                     l1142:
  5919  00D636  1C24               	comf	floorf@m^0,w,c
  5920  00D638  6E1E               	movwf	??_floorf^0,c
  5921  00D63A  1C25               	comf	(floorf@m+1)^0,w,c
  5922  00D63C  6E1F               	movwf	(??_floorf+1)^0,c
  5923  00D63E  1C26               	comf	(floorf@m+2)^0,w,c
  5924  00D640  6E20               	movwf	(??_floorf+2)^0,c
  5925  00D642  1C27               	comf	(floorf@m+3)^0,w,c
  5926  00D644  6E21               	movwf	(??_floorf+3)^0,c
  5927  00D646  501E               	movf	??_floorf^0,w,c
  5928  00D648  162A               	andwf	floorf@u^0,f,c
  5929  00D64A  501F               	movf	(??_floorf+1)^0,w,c
  5930  00D64C  162B               	andwf	(floorf@u+1)^0,f,c
  5931  00D64E  5020               	movf	(??_floorf+2)^0,w,c
  5932  00D650  162C               	andwf	(floorf@u+2)^0,f,c
  5933  00D652  5021               	movf	(??_floorf+3)^0,w,c
  5934  00D654  162D               	andwf	(floorf@u+3)^0,f,c
  5935  00D656  EF71  F06B         	goto	l3940
  5936  00D65A                     l3932:
  5937  00D65A  C02A  F01E         	movff	floorf@u,??_floorf
  5938  00D65E  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5939  00D662  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5940  00D666  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5941  00D66A  0E20               	movlw	32
  5942  00D66C  EF3D  F06B         	goto	u4820
  5943  00D670                     u4825:
  5944  00D670  90D8               	bcf	status,0,c
  5945  00D672  3221               	rrcf	(??_floorf+3)^0,f,c
  5946  00D674  3220               	rrcf	(??_floorf+2)^0,f,c
  5947  00D676  321F               	rrcf	(??_floorf+1)^0,f,c
  5948  00D678  321E               	rrcf	??_floorf^0,f,c
  5949  00D67A                     u4820:
  5950  00D67A  2EE8               	decfsz	wreg,f,c
  5951  00D67C  EF38  F06B         	goto	u4825
  5952  00D680  501E               	movf	??_floorf^0,w,c
  5953  00D682  101F               	iorwf	(??_floorf+1)^0,w,c
  5954  00D684  1020               	iorwf	(??_floorf+2)^0,w,c
  5955  00D686  1021               	iorwf	(??_floorf+3)^0,w,c
  5956  00D688  A4D8               	btfss	status,2,c
  5957  00D68A  EF49  F06B         	goto	u4831
  5958  00D68E  EF4B  F06B         	goto	u4830
  5959  00D692                     u4831:
  5960  00D692  EF55  F06B         	goto	l3936
  5961  00D696                     u4830:
  5962  00D696  0E00               	movlw	0
  5963  00D698  6E2A               	movwf	floorf@u^0,c
  5964  00D69A  0E00               	movlw	0
  5965  00D69C  6E2B               	movwf	(floorf@u+1)^0,c
  5966  00D69E  0E00               	movlw	0
  5967  00D6A0  6E2C               	movwf	(floorf@u+2)^0,c
  5968  00D6A2  0E00               	movlw	0
  5969  00D6A4  6E2D               	movwf	(floorf@u+3)^0,c
  5970  00D6A6  EF71  F06B         	goto	l3940
  5971  00D6AA                     l3936:
  5972  00D6AA  90D8               	bcf	status,0,c
  5973  00D6AC  342A               	rlcf	floorf@u^0,w,c
  5974  00D6AE  6E1E               	movwf	??_floorf^0,c
  5975  00D6B0  342B               	rlcf	(floorf@u+1)^0,w,c
  5976  00D6B2  6E1F               	movwf	(??_floorf+1)^0,c
  5977  00D6B4  342C               	rlcf	(floorf@u+2)^0,w,c
  5978  00D6B6  6E20               	movwf	(??_floorf+2)^0,c
  5979  00D6B8  342D               	rlcf	(floorf@u+3)^0,w,c
  5980  00D6BA  6E21               	movwf	(??_floorf+3)^0,c
  5981  00D6BC  501E               	movf	??_floorf^0,w,c
  5982  00D6BE  101F               	iorwf	(??_floorf+1)^0,w,c
  5983  00D6C0  1020               	iorwf	(??_floorf+2)^0,w,c
  5984  00D6C2  1021               	iorwf	(??_floorf+3)^0,w,c
  5985  00D6C4  B4D8               	btfsc	status,2,c
  5986  00D6C6  EF67  F06B         	goto	u4841
  5987  00D6CA  EF69  F06B         	goto	u4840
  5988  00D6CE                     u4841:
  5989  00D6CE  EF71  F06B         	goto	l3940
  5990  00D6D2                     u4840:
  5991  00D6D2  0E00               	movlw	0
  5992  00D6D4  6E2A               	movwf	floorf@u^0,c
  5993  00D6D6  0E00               	movlw	0
  5994  00D6D8  6E2B               	movwf	(floorf@u+1)^0,c
  5995  00D6DA  0E80               	movlw	128
  5996  00D6DC  6E2C               	movwf	(floorf@u+2)^0,c
  5997  00D6DE  0EBF               	movlw	191
  5998  00D6E0  6E2D               	movwf	(floorf@u+3)^0,c
  5999  00D6E2                     l3940:
  6000  00D6E2  C02A  F01A         	movff	floorf@u,?_floorf
  6001  00D6E6  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  6002  00D6EA  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  6003  00D6EE  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  6004  00D6F2                     l1139:
  6005  00D6F2  0012               	return		;funcret
  6006  00D6F4                     __end_of_floorf:
  6007                           	callstack 0
  6008                           
  6009 ;; *************** function ___fpclassifyf *****************
  6010 ;; Defined at:
  6011 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;  x               4    0[COMRAM] float 
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;  u               4   10[COMRAM] struct .
  6016 ;;  e               2    8[COMRAM] int 
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  2    0[COMRAM] int 
  6019 ;; Registers used:
  6020 ;;		wreg, status,2, status,0
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  6026 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6027 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6028 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6029 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6030 ;;Total ram usage:       14 bytes
  6031 ;; Hardware stack levels used: 1
  6032 ;; This function calls:
  6033 ;;		Nothing
  6034 ;; This function is called by:
  6035 ;;		_efgtoa
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039                           	psect	text14
  6040  00CAA4                     __ptext14:
  6041                           	callstack 0
  6042  00CAA4                     ___fpclassifyf:
  6043                           	callstack 26
  6044  00CAA4  C0F4  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6045  00CAA8  C0F5  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6046  00CAAC  C0F6  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6047  00CAB0  C0F7  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6048  00CAB4  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6049  00CAB8  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6050  00CABC  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6051  00CAC0  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6052  00CAC4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6053  00CAC8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6054  00CACC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6055  00CAD0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6056  00CAD4  0E18               	movlw	24
  6057  00CAD6  EF72  F065         	goto	u4630
  6058  00CADA                     u4635:
  6059  00CADA  90D8               	bcf	status,0,c
  6060  00CADC  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6061  00CADE  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6062  00CAE0  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6063  00CAE2  3205               	rrcf	??___fpclassifyf^0,f,c
  6064  00CAE4                     u4630:
  6065  00CAE4  2EE8               	decfsz	wreg,f,c
  6066  00CAE6  EF6D  F065         	goto	u4635
  6067  00CAEA  5005               	movf	??___fpclassifyf^0,w,c
  6068  00CAEC  6E09               	movwf	___fpclassifyf@e^0,c
  6069  00CAEE  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6070  00CAF0  5009               	movf	___fpclassifyf@e^0,w,c
  6071  00CAF2  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6072  00CAF4  A4D8               	btfss	status,2,c
  6073  00CAF6  EF7F  F065         	goto	u4641
  6074  00CAFA  EF81  F065         	goto	u4640
  6075  00CAFE                     u4641:
  6076  00CAFE  EFA1  F065         	goto	l3892
  6077  00CB02                     u4640:
  6078  00CB02  90D8               	bcf	status,0,c
  6079  00CB04  340B               	rlcf	___fpclassifyf@u^0,w,c
  6080  00CB06  6E05               	movwf	??___fpclassifyf^0,c
  6081  00CB08  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6082  00CB0A  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6083  00CB0C  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6084  00CB0E  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6085  00CB10  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6086  00CB12  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6087  00CB14  5005               	movf	??___fpclassifyf^0,w,c
  6088  00CB16  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6089  00CB18  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6090  00CB1A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6091  00CB1C  A4D8               	btfss	status,2,c
  6092  00CB1E  EF93  F065         	goto	u4651
  6093  00CB22  EF95  F065         	goto	u4650
  6094  00CB26                     u4651:
  6095  00CB26  EF9B  F065         	goto	l3888
  6096  00CB2A                     u4650:
  6097  00CB2A  0E00               	movlw	0
  6098  00CB2C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6099  00CB2E  0E02               	movlw	2
  6100  00CB30  6E01               	movwf	?___fpclassifyf^0,c
  6101  00CB32  EFD0  F065         	goto	l1094
  6102  00CB36                     l3888:
  6103  00CB36  0E00               	movlw	0
  6104  00CB38  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6105  00CB3A  0E03               	movlw	3
  6106  00CB3C  6E01               	movwf	?___fpclassifyf^0,c
  6107  00CB3E  EFD0  F065         	goto	l1094
  6108  00CB42                     l3892:
  6109  00CB42  2809               	incf	___fpclassifyf@e^0,w,c
  6110  00CB44  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6111  00CB46  A4D8               	btfss	status,2,c
  6112  00CB48  EFA8  F065         	goto	u4661
  6113  00CB4C  EFAA  F065         	goto	u4660
  6114  00CB50                     u4661:
  6115  00CB50  EFCC  F065         	goto	l3898
  6116  00CB54                     u4660:
  6117  00CB54  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6118  00CB58  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6119  00CB5C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6120  00CB60  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6121  00CB64  0E09               	movlw	9
  6122  00CB66                     u4675:
  6123  00CB66  90D8               	bcf	status,0,c
  6124  00CB68  3605               	rlcf	??___fpclassifyf^0,f,c
  6125  00CB6A  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6126  00CB6C  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6127  00CB6E  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6128  00CB70  2EE8               	decfsz	wreg,f,c
  6129  00CB72  EFB3  F065         	goto	u4675
  6130  00CB76  5005               	movf	??___fpclassifyf^0,w,c
  6131  00CB78  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6132  00CB7A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6133  00CB7C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6134  00CB7E  B4D8               	btfsc	status,2,c
  6135  00CB80  EFC4  F065         	goto	u4681
  6136  00CB84  EFC7  F065         	goto	u4680
  6137  00CB88                     u4681:
  6138  00CB88  0E01               	movlw	1
  6139  00CB8A  EFC8  F065         	goto	u4690
  6140  00CB8E                     u4680:
  6141  00CB8E  0E00               	movlw	0
  6142  00CB90                     u4690:
  6143  00CB90  6E01               	movwf	?___fpclassifyf^0,c
  6144  00CB92  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6145  00CB94  EFD0  F065         	goto	l1094
  6146  00CB98                     l3898:
  6147  00CB98  0E00               	movlw	0
  6148  00CB9A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6149  00CB9C  0E04               	movlw	4
  6150  00CB9E  6E01               	movwf	?___fpclassifyf^0,c
  6151  00CBA0                     l1094:
  6152  00CBA0  0012               	return		;funcret
  6153  00CBA2                     __end_of___fpclassifyf:
  6154                           	callstack 0
  6155                           
  6156 ;; *************** function ___fltol *****************
  6157 ;; Defined at:
  6158 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  6159 ;; Parameters:    Size  Location     Type
  6160 ;;  f1              4    0[COMRAM] int 
  6161 ;; Auto vars:     Size  Location     Type
  6162 ;;  exp1            1    9[COMRAM] unsigned char 
  6163 ;;  sign1           1    8[COMRAM] unsigned char 
  6164 ;; Return value:  Size  Location     Type
  6165 ;;                  4    0[COMRAM] long 
  6166 ;; Registers used:
  6167 ;;		wreg, status,2, status,0
  6168 ;; Tracked objects:
  6169 ;;		On entry : 0/0
  6170 ;;		On exit  : 0/0
  6171 ;;		Unchanged: 0/0
  6172 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  6173 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6174 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6175 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6176 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6177 ;;Total ram usage:       10 bytes
  6178 ;; Hardware stack levels used: 1
  6179 ;; This function calls:
  6180 ;;		Nothing
  6181 ;; This function is called by:
  6182 ;;		_efgtoa
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185                           
  6186                           	psect	text15
  6187  00CCA6                     __ptext15:
  6188                           	callstack 0
  6189  00CCA6                     ___fltol:
  6190                           	callstack 26
  6191  00CCA6  3403               	rlcf	(___fltol@f1+2)^0,w,c
  6192  00CCA8  3404               	rlcf	(___fltol@f1+3)^0,w,c
  6193  00CCAA  6E0A               	movwf	___fltol@exp1^0,c
  6194  00CCAC  500A               	movf	___fltol@exp1^0,w,c
  6195  00CCAE  A4D8               	btfss	status,2,c
  6196  00CCB0  EF5C  F066         	goto	u4511
  6197  00CCB4  EF5E  F066         	goto	u4510
  6198  00CCB8                     u4511:
  6199  00CCB8  EF68  F066         	goto	l3816
  6200  00CCBC                     u4510:
  6201  00CCBC                     l3812:
  6202  00CCBC  0E00               	movlw	0
  6203  00CCBE  6E01               	movwf	?___fltol^0,c
  6204  00CCC0  0E00               	movlw	0
  6205  00CCC2  6E02               	movwf	(?___fltol+1)^0,c
  6206  00CCC4  0E00               	movlw	0
  6207  00CCC6  6E03               	movwf	(?___fltol+2)^0,c
  6208  00CCC8  0E00               	movlw	0
  6209  00CCCA  6E04               	movwf	(?___fltol+3)^0,c
  6210  00CCCC  EFD5  F066         	goto	l430
  6211  00CCD0                     l3816:
  6212  00CCD0  C001  F005         	movff	___fltol@f1,??___fltol
  6213  00CCD4  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  6214  00CCD8  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  6215  00CCDC  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  6216  00CCE0  0E20               	movlw	32
  6217  00CCE2  EF78  F066         	goto	u4520
  6218  00CCE6                     u4525:
  6219  00CCE6  90D8               	bcf	status,0,c
  6220  00CCE8  3208               	rrcf	(??___fltol+3)^0,f,c
  6221  00CCEA  3207               	rrcf	(??___fltol+2)^0,f,c
  6222  00CCEC  3206               	rrcf	(??___fltol+1)^0,f,c
  6223  00CCEE  3205               	rrcf	??___fltol^0,f,c
  6224  00CCF0                     u4520:
  6225  00CCF0  2EE8               	decfsz	wreg,f,c
  6226  00CCF2  EF73  F066         	goto	u4525
  6227  00CCF6  5005               	movf	??___fltol^0,w,c
  6228  00CCF8  6E09               	movwf	___fltol@sign1^0,c
  6229  00CCFA  8E03               	bsf	(___fltol@f1+2)^0,7,c
  6230  00CCFC  0EFF               	movlw	255
  6231  00CCFE  1601               	andwf	___fltol@f1^0,f,c
  6232  00CD00  0EFF               	movlw	255
  6233  00CD02  1602               	andwf	(___fltol@f1+1)^0,f,c
  6234  00CD04  0EFF               	movlw	255
  6235  00CD06  1603               	andwf	(___fltol@f1+2)^0,f,c
  6236  00CD08  0E00               	movlw	0
  6237  00CD0A  1604               	andwf	(___fltol@f1+3)^0,f,c
  6238  00CD0C  0E96               	movlw	150
  6239  00CD0E  5E0A               	subwf	___fltol@exp1^0,f,c
  6240  00CD10  BE0A               	btfsc	___fltol@exp1^0,7,c
  6241  00CD12  EF8F  F066         	goto	u4530
  6242  00CD16  EF8D  F066         	goto	u4531
  6243  00CD1A                     u4531:
  6244  00CD1A  EFA5  F066         	goto	l3836
  6245  00CD1E                     u4530:
  6246  00CD1E  500A               	movf	___fltol@exp1^0,w,c
  6247  00CD20  0A80               	xorlw	128
  6248  00CD22  0F97               	addlw	151
  6249  00CD24  B0D8               	btfsc	status,0,c
  6250  00CD26  EF97  F066         	goto	u4541
  6251  00CD2A  EF99  F066         	goto	u4540
  6252  00CD2E                     u4541:
  6253  00CD2E  EF9B  F066         	goto	l3832
  6254  00CD32                     u4540:
  6255  00CD32  EF5E  F066         	goto	l3812
  6256  00CD36                     l3832:
  6257  00CD36  90D8               	bcf	status,0,c
  6258  00CD38  3204               	rrcf	(___fltol@f1+3)^0,f,c
  6259  00CD3A  3203               	rrcf	(___fltol@f1+2)^0,f,c
  6260  00CD3C  3202               	rrcf	(___fltol@f1+1)^0,f,c
  6261  00CD3E  3201               	rrcf	___fltol@f1^0,f,c
  6262  00CD40  3E0A               	incfsz	___fltol@exp1^0,f,c
  6263  00CD42  EF9B  F066         	goto	l3832
  6264  00CD46  EFBD  F066         	goto	l3846
  6265  00CD4A                     l3836:
  6266  00CD4A  0E1F               	movlw	31
  6267  00CD4C  640A               	cpfsgt	___fltol@exp1^0,c
  6268  00CD4E  EFAB  F066         	goto	u4551
  6269  00CD52  EFAD  F066         	goto	u4550
  6270  00CD56                     u4551:
  6271  00CD56  EFB5  F066         	goto	l3844
  6272  00CD5A                     u4550:
  6273  00CD5A  EF5E  F066         	goto	l3812
  6274  00CD5E                     l3842:
  6275  00CD5E  90D8               	bcf	status,0,c
  6276  00CD60  3601               	rlcf	___fltol@f1^0,f,c
  6277  00CD62  3602               	rlcf	(___fltol@f1+1)^0,f,c
  6278  00CD64  3603               	rlcf	(___fltol@f1+2)^0,f,c
  6279  00CD66  3604               	rlcf	(___fltol@f1+3)^0,f,c
  6280  00CD68  060A               	decf	___fltol@exp1^0,f,c
  6281  00CD6A                     l3844:
  6282  00CD6A  500A               	movf	___fltol@exp1^0,w,c
  6283  00CD6C  A4D8               	btfss	status,2,c
  6284  00CD6E  EFBB  F066         	goto	u4561
  6285  00CD72  EFBD  F066         	goto	u4560
  6286  00CD76                     u4561:
  6287  00CD76  EFAF  F066         	goto	l3842
  6288  00CD7A                     u4560:
  6289  00CD7A                     l3846:
  6290  00CD7A  5009               	movf	___fltol@sign1^0,w,c
  6291  00CD7C  B4D8               	btfsc	status,2,c
  6292  00CD7E  EFC3  F066         	goto	u4571
  6293  00CD82  EFC5  F066         	goto	u4570
  6294  00CD86                     u4571:
  6295  00CD86  EFCD  F066         	goto	l3850
  6296  00CD8A                     u4570:
  6297  00CD8A  1E04               	comf	(___fltol@f1+3)^0,f,c
  6298  00CD8C  1E03               	comf	(___fltol@f1+2)^0,f,c
  6299  00CD8E  1E02               	comf	(___fltol@f1+1)^0,f,c
  6300  00CD90  6C01               	negf	___fltol@f1^0,c
  6301  00CD92  0E00               	movlw	0
  6302  00CD94  2202               	addwfc	(___fltol@f1+1)^0,f,c
  6303  00CD96  2203               	addwfc	(___fltol@f1+2)^0,f,c
  6304  00CD98  2204               	addwfc	(___fltol@f1+3)^0,f,c
  6305  00CD9A                     l3850:
  6306  00CD9A  C001  F001         	movff	___fltol@f1,?___fltol
  6307  00CD9E  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  6308  00CDA2  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  6309  00CDA6  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  6310  00CDAA                     l430:
  6311  00CDAA  0012               	return		;funcret
  6312  00CDAC                     __end_of___fltol:
  6313                           	callstack 0
  6314                           
  6315 ;; *************** function ___flsub *****************
  6316 ;; Defined at:
  6317 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  b               4   25[COMRAM] long 
  6320 ;;  a               4   29[COMRAM] long 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;		None
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  4   25[COMRAM] long 
  6325 ;; Registers used:
  6326 ;;		wreg, status,2, status,0, cstack
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  6332 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6335 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6336 ;;Total ram usage:        8 bytes
  6337 ;; Hardware stack levels used: 1
  6338 ;; Hardware stack levels required when called: 1
  6339 ;; This function calls:
  6340 ;;		___fladd
  6341 ;; This function is called by:
  6342 ;;		_efgtoa
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text16
  6347  00C35A                     __ptext16:
  6348                           	callstack 0
  6349  00C35A                     ___flsub:
  6350                           	callstack 25
  6351  00C35A  0E00               	movlw	0
  6352  00C35C  1A1E               	xorwf	___flsub@a^0,f,c
  6353  00C35E  0E00               	movlw	0
  6354  00C360  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  6355  00C362  0E00               	movlw	0
  6356  00C364  1A20               	xorwf	(___flsub@a+2)^0,f,c
  6357  00C366  0E80               	movlw	128
  6358  00C368  1A21               	xorwf	(___flsub@a+3)^0,f,c
  6359  00C36A  C01A  F001         	movff	___flsub@b,___fladd@b
  6360  00C36E  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  6361  00C372  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  6362  00C376  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  6363  00C37A  C01E  F005         	movff	___flsub@a,___fladd@a
  6364  00C37E  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  6365  00C382  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  6366  00C386  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  6367  00C38A  EC37  F072         	call	___fladd	;wreg free
  6368  00C38E  C001  F01A         	movff	?___fladd,?___flsub
  6369  00C392  C002  F01B         	movff	?___fladd+1,?___flsub+1
  6370  00C396  C003  F01C         	movff	?___fladd+2,?___flsub+2
  6371  00C39A  C004  F01D         	movff	?___fladd+3,?___flsub+3
  6372  00C39E  0012               	return		;funcret
  6373  00C3A0                     __end_of___flsub:
  6374                           	callstack 0
  6375                           
  6376 ;; *************** function ___fladd *****************
  6377 ;; Defined at:
  6378 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;  b               4    0[COMRAM] long 
  6381 ;;  a               4    4[COMRAM] long 
  6382 ;; Auto vars:     Size  Location     Type
  6383 ;;  grs             1   15[COMRAM] unsigned char 
  6384 ;;  bexp            1   14[COMRAM] unsigned char 
  6385 ;;  aexp            1   13[COMRAM] unsigned char 
  6386 ;;  signs           1   12[COMRAM] unsigned char 
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  4    0[COMRAM] unsigned char 
  6389 ;; Registers used:
  6390 ;;		wreg, status,2, status,0
  6391 ;; Tracked objects:
  6392 ;;		On entry : 0/0
  6393 ;;		On exit  : 0/0
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  6396 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6397 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6398 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6399 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6400 ;;Total ram usage:       16 bytes
  6401 ;; Hardware stack levels used: 1
  6402 ;; This function calls:
  6403 ;;		Nothing
  6404 ;; This function is called by:
  6405 ;;		___flsub
  6406 ;;		_efgtoa
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           
  6410                           	psect	text17
  6411  00E46E                     __ptext17:
  6412                           	callstack 0
  6413  00E46E                     ___fladd:
  6414                           	callstack 25
  6415  00E46E  5004               	movf	(___fladd@b+3)^0,w,c
  6416  00E470  0B80               	andlw	128
  6417  00E472  6E0D               	movwf	___fladd@signs^0,c
  6418  00E474  5004               	movf	(___fladd@b+3)^0,w,c
  6419  00E476  2404               	addwf	(___fladd@b+3)^0,w,c
  6420  00E478  6E0F               	movwf	___fladd@bexp^0,c
  6421  00E47A  AE03               	btfss	(___fladd@b+2)^0,7,c
  6422  00E47C  EF42  F072         	goto	u3301
  6423  00E480  EF44  F072         	goto	u3300
  6424  00E484                     u3301:
  6425  00E484  EF45  F072         	goto	l3102
  6426  00E488                     u3300:
  6427  00E488  800F               	bsf	___fladd@bexp^0,0,c
  6428  00E48A                     l3102:
  6429  00E48A  500F               	movf	___fladd@bexp^0,w,c
  6430  00E48C  B4D8               	btfsc	status,2,c
  6431  00E48E  EF4B  F072         	goto	u3311
  6432  00E492  EF4D  F072         	goto	u3310
  6433  00E496                     u3311:
  6434  00E496  EF62  F072         	goto	l3112
  6435  00E49A                     u3310:
  6436  00E49A  280F               	incf	___fladd@bexp^0,w,c
  6437  00E49C  A4D8               	btfss	status,2,c
  6438  00E49E  EF53  F072         	goto	u3321
  6439  00E4A2  EF55  F072         	goto	u3320
  6440  00E4A6                     u3321:
  6441  00E4A6  EF5D  F072         	goto	l3108
  6442  00E4AA                     u3320:
  6443  00E4AA  0E00               	movlw	0
  6444  00E4AC  6E01               	movwf	___fladd@b^0,c
  6445  00E4AE  0E00               	movlw	0
  6446  00E4B0  6E02               	movwf	(___fladd@b+1)^0,c
  6447  00E4B2  0E00               	movlw	0
  6448  00E4B4  6E03               	movwf	(___fladd@b+2)^0,c
  6449  00E4B6  0E00               	movlw	0
  6450  00E4B8  6E04               	movwf	(___fladd@b+3)^0,c
  6451  00E4BA                     l3108:
  6452  00E4BA  8E03               	bsf	(___fladd@b+2)^0,7,c
  6453  00E4BC  0E00               	movlw	0
  6454  00E4BE  6E04               	movwf	(___fladd@b+3)^0,c
  6455  00E4C0  EF6A  F072         	goto	l3114
  6456  00E4C4                     l3112:
  6457  00E4C4  0E00               	movlw	0
  6458  00E4C6  6E01               	movwf	___fladd@b^0,c
  6459  00E4C8  0E00               	movlw	0
  6460  00E4CA  6E02               	movwf	(___fladd@b+1)^0,c
  6461  00E4CC  0E00               	movlw	0
  6462  00E4CE  6E03               	movwf	(___fladd@b+2)^0,c
  6463  00E4D0  0E00               	movlw	0
  6464  00E4D2  6E04               	movwf	(___fladd@b+3)^0,c
  6465  00E4D4                     l3114:
  6466  00E4D4  5008               	movf	(___fladd@a+3)^0,w,c
  6467  00E4D6  0B80               	andlw	128
  6468  00E4D8  6E0E               	movwf	___fladd@aexp^0,c
  6469  00E4DA  500D               	movf	___fladd@signs^0,w,c
  6470  00E4DC  180E               	xorwf	___fladd@aexp^0,w,c
  6471  00E4DE  B4D8               	btfsc	status,2,c
  6472  00E4E0  EF74  F072         	goto	u3331
  6473  00E4E4  EF76  F072         	goto	u3330
  6474  00E4E8                     u3331:
  6475  00E4E8  EF77  F072         	goto	l3120
  6476  00E4EC                     u3330:
  6477  00E4EC  8C0D               	bsf	___fladd@signs^0,6,c
  6478  00E4EE                     l3120:
  6479  00E4EE  5008               	movf	(___fladd@a+3)^0,w,c
  6480  00E4F0  2408               	addwf	(___fladd@a+3)^0,w,c
  6481  00E4F2  6E0E               	movwf	___fladd@aexp^0,c
  6482  00E4F4  AE07               	btfss	(___fladd@a+2)^0,7,c
  6483  00E4F6  EF7F  F072         	goto	u3341
  6484  00E4FA  EF81  F072         	goto	u3340
  6485  00E4FE                     u3341:
  6486  00E4FE  EF82  F072         	goto	l3126
  6487  00E502                     u3340:
  6488  00E502  800E               	bsf	___fladd@aexp^0,0,c
  6489  00E504                     l3126:
  6490  00E504  500E               	movf	___fladd@aexp^0,w,c
  6491  00E506  B4D8               	btfsc	status,2,c
  6492  00E508  EF88  F072         	goto	u3351
  6493  00E50C  EF8A  F072         	goto	u3350
  6494  00E510                     u3351:
  6495  00E510  EF9F  F072         	goto	l3136
  6496  00E514                     u3350:
  6497  00E514  280E               	incf	___fladd@aexp^0,w,c
  6498  00E516  A4D8               	btfss	status,2,c
  6499  00E518  EF90  F072         	goto	u3361
  6500  00E51C  EF92  F072         	goto	u3360
  6501  00E520                     u3361:
  6502  00E520  EF9A  F072         	goto	l3132
  6503  00E524                     u3360:
  6504  00E524  0E00               	movlw	0
  6505  00E526  6E05               	movwf	___fladd@a^0,c
  6506  00E528  0E00               	movlw	0
  6507  00E52A  6E06               	movwf	(___fladd@a+1)^0,c
  6508  00E52C  0E00               	movlw	0
  6509  00E52E  6E07               	movwf	(___fladd@a+2)^0,c
  6510  00E530  0E00               	movlw	0
  6511  00E532  6E08               	movwf	(___fladd@a+3)^0,c
  6512  00E534                     l3132:
  6513  00E534  8E07               	bsf	(___fladd@a+2)^0,7,c
  6514  00E536  0E00               	movlw	0
  6515  00E538  6E08               	movwf	(___fladd@a+3)^0,c
  6516  00E53A  EFA7  F072         	goto	l3138
  6517  00E53E                     l3136:
  6518  00E53E  0E00               	movlw	0
  6519  00E540  6E05               	movwf	___fladd@a^0,c
  6520  00E542  0E00               	movlw	0
  6521  00E544  6E06               	movwf	(___fladd@a+1)^0,c
  6522  00E546  0E00               	movlw	0
  6523  00E548  6E07               	movwf	(___fladd@a+2)^0,c
  6524  00E54A  0E00               	movlw	0
  6525  00E54C  6E08               	movwf	(___fladd@a+3)^0,c
  6526  00E54E                     l3138:
  6527  00E54E  500F               	movf	___fladd@bexp^0,w,c
  6528  00E550  5C0E               	subwf	___fladd@aexp^0,w,c
  6529  00E552  B0D8               	btfsc	status,0,c
  6530  00E554  EFAE  F072         	goto	u3371
  6531  00E558  EFB0  F072         	goto	u3370
  6532  00E55C                     u3371:
  6533  00E55C  EFD7  F072         	goto	l3174
  6534  00E560                     u3370:
  6535  00E560  AC0D               	btfss	___fladd@signs^0,6,c
  6536  00E562  EFB5  F072         	goto	u3381
  6537  00E566  EFB7  F072         	goto	u3380
  6538  00E56A                     u3381:
  6539  00E56A  EFB9  F072         	goto	l3144
  6540  00E56E                     u3380:
  6541  00E56E  0E80               	movlw	128
  6542  00E570  1A0D               	xorwf	___fladd@signs^0,f,c
  6543  00E572                     l3144:
  6544  00E572  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6545  00E576  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6546  00E57A  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6547  00E57E  C001  F010         	movff	___fladd@b,___fladd@grs
  6548  00E582  C005  F001         	movff	___fladd@a,___fladd@b
  6549  00E586  C010  F005         	movff	___fladd@grs,___fladd@a
  6550  00E58A  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6551  00E58E  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6552  00E592  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6553  00E596  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6554  00E59A  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6555  00E59E  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6556  00E5A2  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6557  00E5A6  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6558  00E5AA  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6559  00E5AE                     l3174:
  6560  00E5AE  0E00               	movlw	0
  6561  00E5B0  6E10               	movwf	___fladd@grs^0,c
  6562  00E5B2  500F               	movf	___fladd@bexp^0,w,c
  6563  00E5B4  C00E  F009         	movff	___fladd@aexp,??___fladd
  6564  00E5B8  6A0A               	clrf	(??___fladd+1)^0,c
  6565  00E5BA  5E09               	subwf	??___fladd^0,f,c
  6566  00E5BC  0E00               	movlw	0
  6567  00E5BE  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6568  00E5C0  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6569  00E5C2  EFEC  F072         	goto	u3391
  6570  00E5C6  500A               	movf	(??___fladd+1)^0,w,c
  6571  00E5C8  E109               	bnz	u3390
  6572  00E5CA  0E1A               	movlw	26
  6573  00E5CC  5C09               	subwf	??___fladd^0,w,c
  6574  00E5CE  A0D8               	btfss	status,0,c
  6575  00E5D0  EFEC  F072         	goto	u3391
  6576  00E5D4  EFEE  F072         	goto	u3390
  6577  00E5D8                     u3391:
  6578  00E5D8  EF25  F073         	goto	l662
  6579  00E5DC                     u3390:
  6580  00E5DC  5001               	movf	___fladd@b^0,w,c
  6581  00E5DE  1002               	iorwf	(___fladd@b+1)^0,w,c
  6582  00E5E0  1003               	iorwf	(___fladd@b+2)^0,w,c
  6583  00E5E2  1004               	iorwf	(___fladd@b+3)^0,w,c
  6584  00E5E4  A4D8               	btfss	status,2,c
  6585  00E5E6  EFF7  F072         	goto	u3401
  6586  00E5EA  EFFA  F072         	goto	u3400
  6587  00E5EE                     u3401:
  6588  00E5EE  0E01               	movlw	1
  6589  00E5F0  EFFB  F072         	goto	u3410
  6590  00E5F4                     u3400:
  6591  00E5F4  0E00               	movlw	0
  6592  00E5F6                     u3410:
  6593  00E5F6  6E10               	movwf	___fladd@grs^0,c
  6594  00E5F8  0E00               	movlw	0
  6595  00E5FA  6E01               	movwf	___fladd@b^0,c
  6596  00E5FC  0E00               	movlw	0
  6597  00E5FE  6E02               	movwf	(___fladd@b+1)^0,c
  6598  00E600  0E00               	movlw	0
  6599  00E602  6E03               	movwf	(___fladd@b+2)^0,c
  6600  00E604  0E00               	movlw	0
  6601  00E606  6E04               	movwf	(___fladd@b+3)^0,c
  6602  00E608  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6603  00E60C  EF2E  F073         	goto	l661
  6604  00E610                     l663:
  6605  00E610  A010               	btfss	___fladd@grs^0,0,c
  6606  00E612  EF0D  F073         	goto	u3421
  6607  00E616  EF0F  F073         	goto	u3420
  6608  00E61A                     u3421:
  6609  00E61A  EF15  F073         	goto	l3186
  6610  00E61E                     u3420:
  6611  00E61E  90D8               	bcf	status,0,c
  6612  00E620  3010               	rrcf	___fladd@grs^0,w,c
  6613  00E622  0901               	iorlw	1
  6614  00E624  6E10               	movwf	___fladd@grs^0,c
  6615  00E626  EF17  F073         	goto	l3188
  6616  00E62A                     l3186:
  6617  00E62A  90D8               	bcf	status,0,c
  6618  00E62C  3210               	rrcf	___fladd@grs^0,f,c
  6619  00E62E                     l3188:
  6620  00E62E  A001               	btfss	___fladd@b^0,0,c
  6621  00E630  EF1C  F073         	goto	u3431
  6622  00E634  EF1E  F073         	goto	u3430
  6623  00E638                     u3431:
  6624  00E638  EF1F  F073         	goto	l3192
  6625  00E63C                     u3430:
  6626  00E63C  8E10               	bsf	___fladd@grs^0,7,c
  6627  00E63E                     l3192:
  6628  00E63E  3404               	rlcf	(___fladd@b+3)^0,w,c
  6629  00E640  3204               	rrcf	(___fladd@b+3)^0,f,c
  6630  00E642  3203               	rrcf	(___fladd@b+2)^0,f,c
  6631  00E644  3202               	rrcf	(___fladd@b+1)^0,f,c
  6632  00E646  3201               	rrcf	___fladd@b^0,f,c
  6633  00E648  2A0F               	incf	___fladd@bexp^0,f,c
  6634  00E64A                     l662:
  6635  00E64A  500E               	movf	___fladd@aexp^0,w,c
  6636  00E64C  5C0F               	subwf	___fladd@bexp^0,w,c
  6637  00E64E  A0D8               	btfss	status,0,c
  6638  00E650  EF2C  F073         	goto	u3441
  6639  00E654  EF2E  F073         	goto	u3440
  6640  00E658                     u3441:
  6641  00E658  EF08  F073         	goto	l663
  6642  00E65C                     u3440:
  6643  00E65C                     l661:
  6644  00E65C  BC0D               	btfsc	___fladd@signs^0,6,c
  6645  00E65E  EF33  F073         	goto	u3451
  6646  00E662  EF35  F073         	goto	u3450
  6647  00E666                     u3451:
  6648  00E666  EF75  F073         	goto	l3220
  6649  00E66A                     u3450:
  6650  00E66A  500F               	movf	___fladd@bexp^0,w,c
  6651  00E66C  A4D8               	btfss	status,2,c
  6652  00E66E  EF3B  F073         	goto	u3461
  6653  00E672  EF3D  F073         	goto	u3460
  6654  00E676                     u3461:
  6655  00E676  EF47  F073         	goto	l3202
  6656  00E67A                     u3460:
  6657  00E67A  0E00               	movlw	0
  6658  00E67C  6E01               	movwf	?___fladd^0,c
  6659  00E67E  0E00               	movlw	0
  6660  00E680  6E02               	movwf	(?___fladd+1)^0,c
  6661  00E682  0E00               	movlw	0
  6662  00E684  6E03               	movwf	(?___fladd+2)^0,c
  6663  00E686  0E00               	movlw	0
  6664  00E688  6E04               	movwf	(?___fladd+3)^0,c
  6665  00E68A  EF96  F074         	goto	l670
  6666  00E68E                     l3202:
  6667  00E68E  5005               	movf	___fladd@a^0,w,c
  6668  00E690  2601               	addwf	___fladd@b^0,f,c
  6669  00E692  5006               	movf	(___fladd@a+1)^0,w,c
  6670  00E694  2202               	addwfc	(___fladd@b+1)^0,f,c
  6671  00E696  5007               	movf	(___fladd@a+2)^0,w,c
  6672  00E698  2203               	addwfc	(___fladd@b+2)^0,f,c
  6673  00E69A  5008               	movf	(___fladd@a+3)^0,w,c
  6674  00E69C  2204               	addwfc	(___fladd@b+3)^0,f,c
  6675  00E69E  A004               	btfss	(___fladd@b+3)^0,0,c
  6676  00E6A0  EF54  F073         	goto	u3471
  6677  00E6A4  EF56  F073         	goto	u3470
  6678  00E6A8                     u3471:
  6679  00E6A8  EF02  F074         	goto	l3256
  6680  00E6AC                     u3470:
  6681  00E6AC  A010               	btfss	___fladd@grs^0,0,c
  6682  00E6AE  EF5B  F073         	goto	u3481
  6683  00E6B2  EF5D  F073         	goto	u3480
  6684  00E6B6                     u3481:
  6685  00E6B6  EF63  F073         	goto	l3210
  6686  00E6BA                     u3480:
  6687  00E6BA  90D8               	bcf	status,0,c
  6688  00E6BC  3010               	rrcf	___fladd@grs^0,w,c
  6689  00E6BE  0901               	iorlw	1
  6690  00E6C0  6E10               	movwf	___fladd@grs^0,c
  6691  00E6C2  EF65  F073         	goto	l3212
  6692  00E6C6                     l3210:
  6693  00E6C6  90D8               	bcf	status,0,c
  6694  00E6C8  3210               	rrcf	___fladd@grs^0,f,c
  6695  00E6CA                     l3212:
  6696  00E6CA  A001               	btfss	___fladd@b^0,0,c
  6697  00E6CC  EF6A  F073         	goto	u3491
  6698  00E6D0  EF6C  F073         	goto	u3490
  6699  00E6D4                     u3491:
  6700  00E6D4  EF6D  F073         	goto	l3216
  6701  00E6D8                     u3490:
  6702  00E6D8  8E10               	bsf	___fladd@grs^0,7,c
  6703  00E6DA                     l3216:
  6704  00E6DA  3404               	rlcf	(___fladd@b+3)^0,w,c
  6705  00E6DC  3204               	rrcf	(___fladd@b+3)^0,f,c
  6706  00E6DE  3203               	rrcf	(___fladd@b+2)^0,f,c
  6707  00E6E0  3202               	rrcf	(___fladd@b+1)^0,f,c
  6708  00E6E2  3201               	rrcf	___fladd@b^0,f,c
  6709  00E6E4  2A0F               	incf	___fladd@bexp^0,f,c
  6710  00E6E6  EF02  F074         	goto	l3256
  6711  00E6EA                     l3220:
  6712  00E6EA  5005               	movf	___fladd@a^0,w,c
  6713  00E6EC  5C01               	subwf	___fladd@b^0,w,c
  6714  00E6EE  5006               	movf	(___fladd@a+1)^0,w,c
  6715  00E6F0  5802               	subwfb	(___fladd@b+1)^0,w,c
  6716  00E6F2  5007               	movf	(___fladd@a+2)^0,w,c
  6717  00E6F4  5803               	subwfb	(___fladd@b+2)^0,w,c
  6718  00E6F6  5004               	movf	(___fladd@b+3)^0,w,c
  6719  00E6F8  0A80               	xorlw	128
  6720  00E6FA  6E09               	movwf	??___fladd^0,c
  6721  00E6FC  5008               	movf	(___fladd@a+3)^0,w,c
  6722  00E6FE  0A80               	xorlw	128
  6723  00E700  5809               	subwfb	??___fladd^0,w,c
  6724  00E702  B0D8               	btfsc	status,0,c
  6725  00E704  EF86  F073         	goto	u3501
  6726  00E708  EF88  F073         	goto	u3500
  6727  00E70C                     u3501:
  6728  00E70C  EFB3  F073         	goto	l3230
  6729  00E710                     u3500:
  6730  00E710  5001               	movf	___fladd@b^0,w,c
  6731  00E712  5C05               	subwf	___fladd@a^0,w,c
  6732  00E714  6E09               	movwf	??___fladd^0,c
  6733  00E716  5002               	movf	(___fladd@b+1)^0,w,c
  6734  00E718  5806               	subwfb	(___fladd@a+1)^0,w,c
  6735  00E71A  6E0A               	movwf	(??___fladd+1)^0,c
  6736  00E71C  5003               	movf	(___fladd@b+2)^0,w,c
  6737  00E71E  5807               	subwfb	(___fladd@a+2)^0,w,c
  6738  00E720  6E0B               	movwf	(??___fladd+2)^0,c
  6739  00E722  5004               	movf	(___fladd@b+3)^0,w,c
  6740  00E724  5808               	subwfb	(___fladd@a+3)^0,w,c
  6741  00E726  6E0C               	movwf	(??___fladd+3)^0,c
  6742  00E728  0EFF               	movlw	255
  6743  00E72A  2409               	addwf	??___fladd^0,w,c
  6744  00E72C  6E01               	movwf	___fladd@b^0,c
  6745  00E72E  0EFF               	movlw	255
  6746  00E730  200A               	addwfc	(??___fladd+1)^0,w,c
  6747  00E732  6E02               	movwf	(___fladd@b+1)^0,c
  6748  00E734  0EFF               	movlw	255
  6749  00E736  200B               	addwfc	(??___fladd+2)^0,w,c
  6750  00E738  6E03               	movwf	(___fladd@b+2)^0,c
  6751  00E73A  0EFF               	movlw	255
  6752  00E73C  200C               	addwfc	(??___fladd+3)^0,w,c
  6753  00E73E  6E04               	movwf	(___fladd@b+3)^0,c
  6754  00E740  0E80               	movlw	128
  6755  00E742  1A0D               	xorwf	___fladd@signs^0,f,c
  6756  00E744  6C10               	negf	___fladd@grs^0,c
  6757  00E746  5010               	movf	___fladd@grs^0,w,c
  6758  00E748  A4D8               	btfss	status,2,c
  6759  00E74A  EFA9  F073         	goto	u3511
  6760  00E74E  EFAB  F073         	goto	u3510
  6761  00E752                     u3511:
  6762  00E752  EFBB  F073         	goto	l678
  6763  00E756                     u3510:
  6764  00E756  0E01               	movlw	1
  6765  00E758  2601               	addwf	___fladd@b^0,f,c
  6766  00E75A  0E00               	movlw	0
  6767  00E75C  2202               	addwfc	(___fladd@b+1)^0,f,c
  6768  00E75E  2203               	addwfc	(___fladd@b+2)^0,f,c
  6769  00E760  2204               	addwfc	(___fladd@b+3)^0,f,c
  6770  00E762  EFBB  F073         	goto	l678
  6771  00E766                     l3230:
  6772  00E766  5005               	movf	___fladd@a^0,w,c
  6773  00E768  5E01               	subwf	___fladd@b^0,f,c
  6774  00E76A  5006               	movf	(___fladd@a+1)^0,w,c
  6775  00E76C  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6776  00E76E  5007               	movf	(___fladd@a+2)^0,w,c
  6777  00E770  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6778  00E772  5008               	movf	(___fladd@a+3)^0,w,c
  6779  00E774  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6780  00E776                     l678:
  6781  00E776  5001               	movf	___fladd@b^0,w,c
  6782  00E778  1002               	iorwf	(___fladd@b+1)^0,w,c
  6783  00E77A  1003               	iorwf	(___fladd@b+2)^0,w,c
  6784  00E77C  1004               	iorwf	(___fladd@b+3)^0,w,c
  6785  00E77E  A4D8               	btfss	status,2,c
  6786  00E780  EFC4  F073         	goto	u3521
  6787  00E784  EFC6  F073         	goto	u3520
  6788  00E788                     u3521:
  6789  00E788  EFFB  F073         	goto	l3254
  6790  00E78C                     u3520:
  6791  00E78C  5010               	movf	___fladd@grs^0,w,c
  6792  00E78E  A4D8               	btfss	status,2,c
  6793  00E790  EFCC  F073         	goto	u3531
  6794  00E794  EFCE  F073         	goto	u3530
  6795  00E798                     u3531:
  6796  00E798  EFFB  F073         	goto	l3254
  6797  00E79C                     u3530:
  6798  00E79C  0E00               	movlw	0
  6799  00E79E  6E01               	movwf	?___fladd^0,c
  6800  00E7A0  0E00               	movlw	0
  6801  00E7A2  6E02               	movwf	(?___fladd+1)^0,c
  6802  00E7A4  0E00               	movlw	0
  6803  00E7A6  6E03               	movwf	(?___fladd+2)^0,c
  6804  00E7A8  0E00               	movlw	0
  6805  00E7AA  6E04               	movwf	(?___fladd+3)^0,c
  6806  00E7AC  EF96  F074         	goto	l670
  6807  00E7B0                     l3238:
  6808  00E7B0  90D8               	bcf	status,0,c
  6809  00E7B2  3601               	rlcf	___fladd@b^0,f,c
  6810  00E7B4  3602               	rlcf	(___fladd@b+1)^0,f,c
  6811  00E7B6  3603               	rlcf	(___fladd@b+2)^0,f,c
  6812  00E7B8  3604               	rlcf	(___fladd@b+3)^0,f,c
  6813  00E7BA  AE10               	btfss	___fladd@grs^0,7,c
  6814  00E7BC  EFE2  F073         	goto	u3541
  6815  00E7C0  EFE4  F073         	goto	u3540
  6816  00E7C4                     u3541:
  6817  00E7C4  EFE5  F073         	goto	l3244
  6818  00E7C8                     u3540:
  6819  00E7C8  8001               	bsf	___fladd@b^0,0,c
  6820  00E7CA                     l3244:
  6821  00E7CA  A010               	btfss	___fladd@grs^0,0,c
  6822  00E7CC  EFEA  F073         	goto	u3551
  6823  00E7D0  EFEC  F073         	goto	u3550
  6824  00E7D4                     u3551:
  6825  00E7D4  EFF0  F073         	goto	l3248
  6826  00E7D8                     u3550:
  6827  00E7D8  80D8               	bsf	status,0,c
  6828  00E7DA  3610               	rlcf	___fladd@grs^0,f,c
  6829  00E7DC  EFF2  F073         	goto	l3250
  6830  00E7E0                     l3248:
  6831  00E7E0  90D8               	bcf	status,0,c
  6832  00E7E2  3610               	rlcf	___fladd@grs^0,f,c
  6833  00E7E4                     l3250:
  6834  00E7E4  500F               	movf	___fladd@bexp^0,w,c
  6835  00E7E6  B4D8               	btfsc	status,2,c
  6836  00E7E8  EFF8  F073         	goto	u3561
  6837  00E7EC  EFFA  F073         	goto	u3560
  6838  00E7F0                     u3561:
  6839  00E7F0  EFFB  F073         	goto	l3254
  6840  00E7F4                     u3560:
  6841  00E7F4  060F               	decf	___fladd@bexp^0,f,c
  6842  00E7F6                     l3254:
  6843  00E7F6  AE03               	btfss	(___fladd@b+2)^0,7,c
  6844  00E7F8  EF00  F074         	goto	u3571
  6845  00E7FC  EF02  F074         	goto	u3570
  6846  00E800                     u3571:
  6847  00E800  EFD8  F073         	goto	l3238
  6848  00E804                     u3570:
  6849  00E804                     l3256:
  6850  00E804  0E00               	movlw	0
  6851  00E806  6E0E               	movwf	___fladd@aexp^0,c
  6852  00E808  AE10               	btfss	___fladd@grs^0,7,c
  6853  00E80A  EF09  F074         	goto	u3581
  6854  00E80E  EF0B  F074         	goto	u3580
  6855  00E812                     u3581:
  6856  00E812  EF23  F074         	goto	l687
  6857  00E816                     u3580:
  6858  00E816  C010  F009         	movff	___fladd@grs,??___fladd
  6859  00E81A  0E7F               	movlw	127
  6860  00E81C  1609               	andwf	??___fladd^0,f,c
  6861  00E81E  B4D8               	btfsc	status,2,c
  6862  00E820  EF14  F074         	goto	u3591
  6863  00E824  EF16  F074         	goto	u3590
  6864  00E828                     u3591:
  6865  00E828  EF1A  F074         	goto	l688
  6866  00E82C                     u3590:
  6867  00E82C                     l3262:
  6868  00E82C  0E01               	movlw	1
  6869  00E82E  6E0E               	movwf	___fladd@aexp^0,c
  6870  00E830  EF23  F074         	goto	l687
  6871  00E834                     l688:
  6872  00E834  A001               	btfss	___fladd@b^0,0,c
  6873  00E836  EF1F  F074         	goto	u3601
  6874  00E83A  EF21  F074         	goto	u3600
  6875  00E83E                     u3601:
  6876  00E83E  EF23  F074         	goto	l687
  6877  00E842                     u3600:
  6878  00E842  EF16  F074         	goto	l3262
  6879  00E846                     l687:
  6880  00E846  500E               	movf	___fladd@aexp^0,w,c
  6881  00E848  B4D8               	btfsc	status,2,c
  6882  00E84A  EF29  F074         	goto	u3611
  6883  00E84E  EF2B  F074         	goto	u3610
  6884  00E852                     u3611:
  6885  00E852  EF56  F074         	goto	l3274
  6886  00E856                     u3610:
  6887  00E856  0E01               	movlw	1
  6888  00E858  2601               	addwf	___fladd@b^0,f,c
  6889  00E85A  0E00               	movlw	0
  6890  00E85C  2202               	addwfc	(___fladd@b+1)^0,f,c
  6891  00E85E  2203               	addwfc	(___fladd@b+2)^0,f,c
  6892  00E860  2204               	addwfc	(___fladd@b+3)^0,f,c
  6893  00E862  A004               	btfss	(___fladd@b+3)^0,0,c
  6894  00E864  EF36  F074         	goto	u3621
  6895  00E868  EF38  F074         	goto	u3620
  6896  00E86C                     u3621:
  6897  00E86C  EF56  F074         	goto	l3274
  6898  00E870                     u3620:
  6899  00E870  C001  F009         	movff	___fladd@b,??___fladd
  6900  00E874  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6901  00E878  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6902  00E87C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6903  00E880  340C               	rlcf	(??___fladd+3)^0,w,c
  6904  00E882  320C               	rrcf	(??___fladd+3)^0,f,c
  6905  00E884  320B               	rrcf	(??___fladd+2)^0,f,c
  6906  00E886  320A               	rrcf	(??___fladd+1)^0,f,c
  6907  00E888  3209               	rrcf	??___fladd^0,f,c
  6908  00E88A  C009  F001         	movff	??___fladd,___fladd@b
  6909  00E88E  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6910  00E892  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6911  00E896  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6912  00E89A  280F               	incf	___fladd@bexp^0,w,c
  6913  00E89C  B4D8               	btfsc	status,2,c
  6914  00E89E  EF53  F074         	goto	u3631
  6915  00E8A2  EF55  F074         	goto	u3630
  6916  00E8A6                     u3631:
  6917  00E8A6  EF56  F074         	goto	l3274
  6918  00E8AA                     u3630:
  6919  00E8AA  2A0F               	incf	___fladd@bexp^0,f,c
  6920  00E8AC                     l3274:
  6921  00E8AC  280F               	incf	___fladd@bexp^0,w,c
  6922  00E8AE  B4D8               	btfsc	status,2,c
  6923  00E8B0  EF5C  F074         	goto	u3641
  6924  00E8B4  EF5E  F074         	goto	u3640
  6925  00E8B8                     u3641:
  6926  00E8B8  EF66  F074         	goto	l3278
  6927  00E8BC                     u3640:
  6928  00E8BC  500F               	movf	___fladd@bexp^0,w,c
  6929  00E8BE  A4D8               	btfss	status,2,c
  6930  00E8C0  EF64  F074         	goto	u3651
  6931  00E8C4  EF66  F074         	goto	u3650
  6932  00E8C8                     u3651:
  6933  00E8C8  EF78  F074         	goto	l3282
  6934  00E8CC                     u3650:
  6935  00E8CC                     l3278:
  6936  00E8CC  0E00               	movlw	0
  6937  00E8CE  6E01               	movwf	___fladd@b^0,c
  6938  00E8D0  0E00               	movlw	0
  6939  00E8D2  6E02               	movwf	(___fladd@b+1)^0,c
  6940  00E8D4  0E00               	movlw	0
  6941  00E8D6  6E03               	movwf	(___fladd@b+2)^0,c
  6942  00E8D8  0E00               	movlw	0
  6943  00E8DA  6E04               	movwf	(___fladd@b+3)^0,c
  6944  00E8DC  500F               	movf	___fladd@bexp^0,w,c
  6945  00E8DE  A4D8               	btfss	status,2,c
  6946  00E8E0  EF74  F074         	goto	u3661
  6947  00E8E4  EF76  F074         	goto	u3660
  6948  00E8E8                     u3661:
  6949  00E8E8  EF78  F074         	goto	l3282
  6950  00E8EC                     u3660:
  6951  00E8EC  0E00               	movlw	0
  6952  00E8EE  6E0D               	movwf	___fladd@signs^0,c
  6953  00E8F0                     l3282:
  6954  00E8F0  A00F               	btfss	___fladd@bexp^0,0,c
  6955  00E8F2  EF7D  F074         	goto	u3671
  6956  00E8F6  EF7F  F074         	goto	u3670
  6957  00E8FA                     u3671:
  6958  00E8FA  EF82  F074         	goto	l3286
  6959  00E8FE                     u3670:
  6960  00E8FE  8E03               	bsf	(___fladd@b+2)^0,7,c
  6961  00E900  EF83  F074         	goto	l3288
  6962  00E904                     l3286:
  6963  00E904  9E03               	bcf	(___fladd@b+2)^0,7,c
  6964  00E906                     l3288:
  6965  00E906  90D8               	bcf	status,0,c
  6966  00E908  300F               	rrcf	___fladd@bexp^0,w,c
  6967  00E90A  6E04               	movwf	(___fladd@b+3)^0,c
  6968  00E90C  AE0D               	btfss	___fladd@signs^0,7,c
  6969  00E90E  EF8B  F074         	goto	u3681
  6970  00E912  EF8D  F074         	goto	u3680
  6971  00E916                     u3681:
  6972  00E916  EF8E  F074         	goto	l3294
  6973  00E91A                     u3680:
  6974  00E91A  8E04               	bsf	(___fladd@b+3)^0,7,c
  6975  00E91C                     l3294:
  6976  00E91C  C001  F001         	movff	___fladd@b,?___fladd
  6977  00E920  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6978  00E924  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6979  00E928  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6980  00E92C                     l670:
  6981  00E92C  0012               	return		;funcret
  6982  00E92E                     __end_of___fladd:
  6983                           	callstack 0
  6984                           
  6985 ;; *************** function ___flneg *****************
  6986 ;; Defined at:
  6987 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;  f1              4    0[COMRAM] unsigned char 
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;		None
  6992 ;; Return value:  Size  Location     Type
  6993 ;;                  4    0[COMRAM] unsigned char 
  6994 ;; Registers used:
  6995 ;;		wreg, status,2, status,0
  6996 ;; Tracked objects:
  6997 ;;		On entry : 0/0
  6998 ;;		On exit  : 0/0
  6999 ;;		Unchanged: 0/0
  7000 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  7001 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7004 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7005 ;;Total ram usage:        4 bytes
  7006 ;; Hardware stack levels used: 1
  7007 ;; This function calls:
  7008 ;;		Nothing
  7009 ;; This function is called by:
  7010 ;;		_efgtoa
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           	psect	text18
  7015  00C1B0                     __ptext18:
  7016                           	callstack 0
  7017  00C1B0                     ___flneg:
  7018                           	callstack 26
  7019  00C1B0  5001               	movf	___flneg@f1^0,w,c
  7020  00C1B2  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7021  00C1B4  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7022  00C1B6  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7023  00C1B8  B4D8               	btfsc	status,2,c
  7024  00C1BA  EFE1  F060         	goto	u4501
  7025  00C1BE  EFE3  F060         	goto	u4500
  7026  00C1C2                     u4501:
  7027  00C1C2  EFEB  F060         	goto	l3806
  7028  00C1C6                     u4500:
  7029  00C1C6  0E00               	movlw	0
  7030  00C1C8  1A01               	xorwf	___flneg@f1^0,f,c
  7031  00C1CA  0E00               	movlw	0
  7032  00C1CC  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7033  00C1CE  0E00               	movlw	0
  7034  00C1D0  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7035  00C1D2  0E80               	movlw	128
  7036  00C1D4  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7037  00C1D6                     l3806:
  7038  00C1D6  C001  F001         	movff	___flneg@f1,?___flneg
  7039  00C1DA  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7040  00C1DE  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7041  00C1E2  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7042  00C1E6  0012               	return		;funcret
  7043  00C1E8                     __end_of___flneg:
  7044                           	callstack 0
  7045                           
  7046 ;; *************** function ___flmul *****************
  7047 ;; Defined at:
  7048 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;  b               4    0[COMRAM] unsigned char 
  7051 ;;  a               4    4[COMRAM] unsigned char 
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;  prod            4   19[COMRAM] struct .
  7054 ;;  grs             4   13[COMRAM] unsigned long 
  7055 ;;  temp            2   23[COMRAM] struct .
  7056 ;;  bexp            1   18[COMRAM] unsigned char 
  7057 ;;  aexp            1   17[COMRAM] unsigned char 
  7058 ;;  sign            1   12[COMRAM] unsigned char 
  7059 ;; Return value:  Size  Location     Type
  7060 ;;                  4    0[COMRAM] unsigned char 
  7061 ;; Registers used:
  7062 ;;		wreg, status,2, status,0, prodl, prodh
  7063 ;; Tracked objects:
  7064 ;;		On entry : 0/0
  7065 ;;		On exit  : 0/0
  7066 ;;		Unchanged: 0/0
  7067 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  7068 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7069 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7070 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7071 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7072 ;;Total ram usage:       25 bytes
  7073 ;; Hardware stack levels used: 1
  7074 ;; This function calls:
  7075 ;;		Nothing
  7076 ;; This function is called by:
  7077 ;;		_efgtoa
  7078 ;; This function uses a non-reentrant model
  7079 ;;
  7080                           
  7081                           	psect	text19
  7082  00E044                     __ptext19:
  7083                           	callstack 0
  7084  00E044                     ___flmul:
  7085                           	callstack 26
  7086  00E044  5004               	movf	(___flmul@b+3)^0,w,c
  7087  00E046  0B80               	andlw	128
  7088  00E048  6E0D               	movwf	___flmul@sign^0,c
  7089  00E04A  5004               	movf	(___flmul@b+3)^0,w,c
  7090  00E04C  2404               	addwf	(___flmul@b+3)^0,w,c
  7091  00E04E  6E13               	movwf	___flmul@bexp^0,c
  7092  00E050  AE03               	btfss	(___flmul@b+2)^0,7,c
  7093  00E052  EF2D  F070         	goto	u4111
  7094  00E056  EF2F  F070         	goto	u4110
  7095  00E05A                     u4111:
  7096  00E05A  EF30  F070         	goto	l3554
  7097  00E05E                     u4110:
  7098  00E05E  8013               	bsf	___flmul@bexp^0,0,c
  7099  00E060                     l3554:
  7100  00E060  5013               	movf	___flmul@bexp^0,w,c
  7101  00E062  B4D8               	btfsc	status,2,c
  7102  00E064  EF36  F070         	goto	u4121
  7103  00E068  EF38  F070         	goto	u4120
  7104  00E06C                     u4121:
  7105  00E06C  EF4B  F070         	goto	l3562
  7106  00E070                     u4120:
  7107  00E070  2813               	incf	___flmul@bexp^0,w,c
  7108  00E072  A4D8               	btfss	status,2,c
  7109  00E074  EF3E  F070         	goto	u4131
  7110  00E078  EF40  F070         	goto	u4130
  7111  00E07C                     u4131:
  7112  00E07C  EF48  F070         	goto	l3560
  7113  00E080                     u4130:
  7114  00E080  0E00               	movlw	0
  7115  00E082  6E01               	movwf	___flmul@b^0,c
  7116  00E084  0E00               	movlw	0
  7117  00E086  6E02               	movwf	(___flmul@b+1)^0,c
  7118  00E088  0E00               	movlw	0
  7119  00E08A  6E03               	movwf	(___flmul@b+2)^0,c
  7120  00E08C  0E00               	movlw	0
  7121  00E08E  6E04               	movwf	(___flmul@b+3)^0,c
  7122  00E090                     l3560:
  7123  00E090  8E03               	bsf	(___flmul@b+2)^0,7,c
  7124  00E092  EF53  F070         	goto	l3564
  7125  00E096                     l3562:
  7126  00E096  0E00               	movlw	0
  7127  00E098  6E01               	movwf	___flmul@b^0,c
  7128  00E09A  0E00               	movlw	0
  7129  00E09C  6E02               	movwf	(___flmul@b+1)^0,c
  7130  00E09E  0E00               	movlw	0
  7131  00E0A0  6E03               	movwf	(___flmul@b+2)^0,c
  7132  00E0A2  0E00               	movlw	0
  7133  00E0A4  6E04               	movwf	(___flmul@b+3)^0,c
  7134  00E0A6                     l3564:
  7135  00E0A6  5008               	movf	(___flmul@a+3)^0,w,c
  7136  00E0A8  0B80               	andlw	128
  7137  00E0AA  1A0D               	xorwf	___flmul@sign^0,f,c
  7138  00E0AC  5008               	movf	(___flmul@a+3)^0,w,c
  7139  00E0AE  2408               	addwf	(___flmul@a+3)^0,w,c
  7140  00E0B0  6E12               	movwf	___flmul@aexp^0,c
  7141  00E0B2  AE07               	btfss	(___flmul@a+2)^0,7,c
  7142  00E0B4  EF5E  F070         	goto	u4141
  7143  00E0B8  EF60  F070         	goto	u4140
  7144  00E0BC                     u4141:
  7145  00E0BC  EF61  F070         	goto	l3572
  7146  00E0C0                     u4140:
  7147  00E0C0  8012               	bsf	___flmul@aexp^0,0,c
  7148  00E0C2                     l3572:
  7149  00E0C2  5012               	movf	___flmul@aexp^0,w,c
  7150  00E0C4  B4D8               	btfsc	status,2,c
  7151  00E0C6  EF67  F070         	goto	u4151
  7152  00E0CA  EF69  F070         	goto	u4150
  7153  00E0CE                     u4151:
  7154  00E0CE  EF7C  F070         	goto	l3580
  7155  00E0D2                     u4150:
  7156  00E0D2  2812               	incf	___flmul@aexp^0,w,c
  7157  00E0D4  A4D8               	btfss	status,2,c
  7158  00E0D6  EF6F  F070         	goto	u4161
  7159  00E0DA  EF71  F070         	goto	u4160
  7160  00E0DE                     u4161:
  7161  00E0DE  EF79  F070         	goto	l3578
  7162  00E0E2                     u4160:
  7163  00E0E2  0E00               	movlw	0
  7164  00E0E4  6E05               	movwf	___flmul@a^0,c
  7165  00E0E6  0E00               	movlw	0
  7166  00E0E8  6E06               	movwf	(___flmul@a+1)^0,c
  7167  00E0EA  0E00               	movlw	0
  7168  00E0EC  6E07               	movwf	(___flmul@a+2)^0,c
  7169  00E0EE  0E00               	movlw	0
  7170  00E0F0  6E08               	movwf	(___flmul@a+3)^0,c
  7171  00E0F2                     l3578:
  7172  00E0F2  8E07               	bsf	(___flmul@a+2)^0,7,c
  7173  00E0F4  EF84  F070         	goto	l747
  7174  00E0F8                     l3580:
  7175  00E0F8  0E00               	movlw	0
  7176  00E0FA  6E05               	movwf	___flmul@a^0,c
  7177  00E0FC  0E00               	movlw	0
  7178  00E0FE  6E06               	movwf	(___flmul@a+1)^0,c
  7179  00E100  0E00               	movlw	0
  7180  00E102  6E07               	movwf	(___flmul@a+2)^0,c
  7181  00E104  0E00               	movlw	0
  7182  00E106  6E08               	movwf	(___flmul@a+3)^0,c
  7183  00E108                     l747:
  7184  00E108  5012               	movf	___flmul@aexp^0,w,c
  7185  00E10A  B4D8               	btfsc	status,2,c
  7186  00E10C  EF8A  F070         	goto	u4171
  7187  00E110  EF8C  F070         	goto	u4170
  7188  00E114                     u4171:
  7189  00E114  EF94  F070         	goto	l3584
  7190  00E118                     u4170:
  7191  00E118  5013               	movf	___flmul@bexp^0,w,c
  7192  00E11A  A4D8               	btfss	status,2,c
  7193  00E11C  EF92  F070         	goto	u4181
  7194  00E120  EF94  F070         	goto	u4180
  7195  00E124                     u4181:
  7196  00E124  EF9E  F070         	goto	l3588
  7197  00E128                     u4180:
  7198  00E128                     l3584:
  7199  00E128  0E00               	movlw	0
  7200  00E12A  6E01               	movwf	?___flmul^0,c
  7201  00E12C  0E00               	movlw	0
  7202  00E12E  6E02               	movwf	(?___flmul+1)^0,c
  7203  00E130  0E00               	movlw	0
  7204  00E132  6E03               	movwf	(?___flmul+2)^0,c
  7205  00E134  0E00               	movlw	0
  7206  00E136  6E04               	movwf	(?___flmul+3)^0,c
  7207  00E138  EF36  F072         	goto	l751
  7208  00E13C                     l3588:
  7209  00E13C  5007               	movf	(___flmul@a+2)^0,w,c
  7210  00E13E  0201               	mulwf	___flmul@b^0,c
  7211  00E140  CFF3 F018          	movff	prodl,___flmul@temp
  7212  00E144  CFF4 F019          	movff	prodh,___flmul@temp+1
  7213  00E148  5018               	movf	___flmul@temp^0,w,c
  7214  00E14A  6E0E               	movwf	___flmul@grs^0,c
  7215  00E14C  6A0F               	clrf	(___flmul@grs+1)^0,c
  7216  00E14E  6A10               	clrf	(___flmul@grs+2)^0,c
  7217  00E150  6A11               	clrf	(___flmul@grs+3)^0,c
  7218  00E152  5019               	movf	(___flmul@temp+1)^0,w,c
  7219  00E154  6E14               	movwf	___flmul@prod^0,c
  7220  00E156  6A15               	clrf	(___flmul@prod+1)^0,c
  7221  00E158  6A16               	clrf	(___flmul@prod+2)^0,c
  7222  00E15A  6A17               	clrf	(___flmul@prod+3)^0,c
  7223  00E15C  5006               	movf	(___flmul@a+1)^0,w,c
  7224  00E15E  0202               	mulwf	(___flmul@b+1)^0,c
  7225  00E160  CFF3 F018          	movff	prodl,___flmul@temp
  7226  00E164  CFF4 F019          	movff	prodh,___flmul@temp+1
  7227  00E168  5018               	movf	___flmul@temp^0,w,c
  7228  00E16A  260E               	addwf	___flmul@grs^0,f,c
  7229  00E16C  0E00               	movlw	0
  7230  00E16E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7231  00E170  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7232  00E172  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7233  00E174  5019               	movf	(___flmul@temp+1)^0,w,c
  7234  00E176  2614               	addwf	___flmul@prod^0,f,c
  7235  00E178  0E00               	movlw	0
  7236  00E17A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7237  00E17C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7238  00E17E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7239  00E180  5005               	movf	___flmul@a^0,w,c
  7240  00E182  0203               	mulwf	(___flmul@b+2)^0,c
  7241  00E184  CFF3 F018          	movff	prodl,___flmul@temp
  7242  00E188  CFF4 F019          	movff	prodh,___flmul@temp+1
  7243  00E18C  5018               	movf	___flmul@temp^0,w,c
  7244  00E18E  260E               	addwf	___flmul@grs^0,f,c
  7245  00E190  0E00               	movlw	0
  7246  00E192  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7247  00E194  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7248  00E196  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7249  00E198  5019               	movf	(___flmul@temp+1)^0,w,c
  7250  00E19A  2614               	addwf	___flmul@prod^0,f,c
  7251  00E19C  0E00               	movlw	0
  7252  00E19E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7253  00E1A0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7254  00E1A2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7255  00E1A4  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7256  00E1A8  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7257  00E1AC  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7258  00E1B0  6A0E               	clrf	___flmul@grs^0,c
  7259  00E1B2  5005               	movf	___flmul@a^0,w,c
  7260  00E1B4  0202               	mulwf	(___flmul@b+1)^0,c
  7261  00E1B6  CFF3 F018          	movff	prodl,___flmul@temp
  7262  00E1BA  CFF4 F019          	movff	prodh,___flmul@temp+1
  7263  00E1BE  5018               	movf	___flmul@temp^0,w,c
  7264  00E1C0  260E               	addwf	___flmul@grs^0,f,c
  7265  00E1C2  5019               	movf	(___flmul@temp+1)^0,w,c
  7266  00E1C4  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7267  00E1C6  0E00               	movlw	0
  7268  00E1C8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7269  00E1CA  0E00               	movlw	0
  7270  00E1CC  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7271  00E1CE  5006               	movf	(___flmul@a+1)^0,w,c
  7272  00E1D0  0201               	mulwf	___flmul@b^0,c
  7273  00E1D2  CFF3 F018          	movff	prodl,___flmul@temp
  7274  00E1D6  CFF4 F019          	movff	prodh,___flmul@temp+1
  7275  00E1DA  5018               	movf	___flmul@temp^0,w,c
  7276  00E1DC  260E               	addwf	___flmul@grs^0,f,c
  7277  00E1DE  5019               	movf	(___flmul@temp+1)^0,w,c
  7278  00E1E0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7279  00E1E2  0E00               	movlw	0
  7280  00E1E4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7281  00E1E6  0E00               	movlw	0
  7282  00E1E8  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7283  00E1EA  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7284  00E1EE  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7285  00E1F2  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7286  00E1F6  6A0E               	clrf	___flmul@grs^0,c
  7287  00E1F8  5005               	movf	___flmul@a^0,w,c
  7288  00E1FA  0201               	mulwf	___flmul@b^0,c
  7289  00E1FC  CFF3 F018          	movff	prodl,___flmul@temp
  7290  00E200  CFF4 F019          	movff	prodh,___flmul@temp+1
  7291  00E204  5018               	movf	___flmul@temp^0,w,c
  7292  00E206  260E               	addwf	___flmul@grs^0,f,c
  7293  00E208  5019               	movf	(___flmul@temp+1)^0,w,c
  7294  00E20A  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7295  00E20C  0E00               	movlw	0
  7296  00E20E  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7297  00E210  0E00               	movlw	0
  7298  00E212  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7299  00E214  5007               	movf	(___flmul@a+2)^0,w,c
  7300  00E216  0202               	mulwf	(___flmul@b+1)^0,c
  7301  00E218  CFF3 F018          	movff	prodl,___flmul@temp
  7302  00E21C  CFF4 F019          	movff	prodh,___flmul@temp+1
  7303  00E220  5018               	movf	___flmul@temp^0,w,c
  7304  00E222  2614               	addwf	___flmul@prod^0,f,c
  7305  00E224  5019               	movf	(___flmul@temp+1)^0,w,c
  7306  00E226  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7307  00E228  0E00               	movlw	0
  7308  00E22A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7309  00E22C  0E00               	movlw	0
  7310  00E22E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7311  00E230  5006               	movf	(___flmul@a+1)^0,w,c
  7312  00E232  0203               	mulwf	(___flmul@b+2)^0,c
  7313  00E234  CFF3 F018          	movff	prodl,___flmul@temp
  7314  00E238  CFF4 F019          	movff	prodh,___flmul@temp+1
  7315  00E23C  5018               	movf	___flmul@temp^0,w,c
  7316  00E23E  2614               	addwf	___flmul@prod^0,f,c
  7317  00E240  5019               	movf	(___flmul@temp+1)^0,w,c
  7318  00E242  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7319  00E244  0E00               	movlw	0
  7320  00E246  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7321  00E248  0E00               	movlw	0
  7322  00E24A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7323  00E24C  5007               	movf	(___flmul@a+2)^0,w,c
  7324  00E24E  0203               	mulwf	(___flmul@b+2)^0,c
  7325  00E250  CFF3 F018          	movff	prodl,___flmul@temp
  7326  00E254  CFF4 F019          	movff	prodh,___flmul@temp+1
  7327  00E258  5018               	movf	___flmul@temp^0,w,c
  7328  00E25A  6E09               	movwf	??___flmul^0,c
  7329  00E25C  5019               	movf	(___flmul@temp+1)^0,w,c
  7330  00E25E  6E0A               	movwf	(??___flmul+1)^0,c
  7331  00E260  6A0B               	clrf	(??___flmul+2)^0,c
  7332  00E262  6A0C               	clrf	(??___flmul+3)^0,c
  7333  00E264  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  7334  00E268  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  7335  00E26C  C009  F00A         	movff	??___flmul,??___flmul+1
  7336  00E270  6A09               	clrf	??___flmul^0,c
  7337  00E272  5009               	movf	??___flmul^0,w,c
  7338  00E274  2614               	addwf	___flmul@prod^0,f,c
  7339  00E276  500A               	movf	(??___flmul+1)^0,w,c
  7340  00E278  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7341  00E27A  500B               	movf	(??___flmul+2)^0,w,c
  7342  00E27C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7343  00E27E  500C               	movf	(??___flmul+3)^0,w,c
  7344  00E280  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7345  00E282  C00E  F009         	movff	___flmul@grs,??___flmul
  7346  00E286  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  7347  00E28A  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  7348  00E28E  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  7349  00E292  0E19               	movlw	25
  7350  00E294  EF51  F071         	goto	u4190
  7351  00E298                     u4195:
  7352  00E298  90D8               	bcf	status,0,c
  7353  00E29A  320C               	rrcf	(??___flmul+3)^0,f,c
  7354  00E29C  320B               	rrcf	(??___flmul+2)^0,f,c
  7355  00E29E  320A               	rrcf	(??___flmul+1)^0,f,c
  7356  00E2A0  3209               	rrcf	??___flmul^0,f,c
  7357  00E2A2                     u4190:
  7358  00E2A2  2EE8               	decfsz	wreg,f,c
  7359  00E2A4  EF4C  F071         	goto	u4195
  7360  00E2A8  5009               	movf	??___flmul^0,w,c
  7361  00E2AA  2614               	addwf	___flmul@prod^0,f,c
  7362  00E2AC  500A               	movf	(??___flmul+1)^0,w,c
  7363  00E2AE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7364  00E2B0  500B               	movf	(??___flmul+2)^0,w,c
  7365  00E2B2  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7366  00E2B4  500C               	movf	(??___flmul+3)^0,w,c
  7367  00E2B6  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7368  00E2B8  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7369  00E2BC  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7370  00E2C0  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7371  00E2C4  6A0E               	clrf	___flmul@grs^0,c
  7372  00E2C6  5012               	movf	___flmul@aexp^0,w,c
  7373  00E2C8  C013  F009         	movff	___flmul@bexp,??___flmul
  7374  00E2CC  6A0A               	clrf	(??___flmul+1)^0,c
  7375  00E2CE  2609               	addwf	??___flmul^0,f,c
  7376  00E2D0  0E00               	movlw	0
  7377  00E2D2  220A               	addwfc	(??___flmul+1)^0,f,c
  7378  00E2D4  0E82               	movlw	130
  7379  00E2D6  2409               	addwf	??___flmul^0,w,c
  7380  00E2D8  6E18               	movwf	___flmul@temp^0,c
  7381  00E2DA  0EFF               	movlw	255
  7382  00E2DC  200A               	addwfc	(??___flmul+1)^0,w,c
  7383  00E2DE  6E19               	movwf	(___flmul@temp+1)^0,c
  7384  00E2E0  EF87  F071         	goto	l3636
  7385  00E2E4                     l3630:
  7386  00E2E4  90D8               	bcf	status,0,c
  7387  00E2E6  3614               	rlcf	___flmul@prod^0,f,c
  7388  00E2E8  3615               	rlcf	(___flmul@prod+1)^0,f,c
  7389  00E2EA  3616               	rlcf	(___flmul@prod+2)^0,f,c
  7390  00E2EC  3617               	rlcf	(___flmul@prod+3)^0,f,c
  7391  00E2EE  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7392  00E2F0  EF7C  F071         	goto	u4201
  7393  00E2F4  EF7E  F071         	goto	u4200
  7394  00E2F8                     u4201:
  7395  00E2F8  EF7F  F071         	goto	l754
  7396  00E2FC                     u4200:
  7397  00E2FC  8014               	bsf	___flmul@prod^0,0,c
  7398  00E2FE                     l754:
  7399  00E2FE  90D8               	bcf	status,0,c
  7400  00E300  360E               	rlcf	___flmul@grs^0,f,c
  7401  00E302  360F               	rlcf	(___flmul@grs+1)^0,f,c
  7402  00E304  3610               	rlcf	(___flmul@grs+2)^0,f,c
  7403  00E306  3611               	rlcf	(___flmul@grs+3)^0,f,c
  7404  00E308  0618               	decf	___flmul@temp^0,f,c
  7405  00E30A  A0D8               	btfss	status,0,c
  7406  00E30C  0619               	decf	(___flmul@temp+1)^0,f,c
  7407  00E30E                     l3636:
  7408  00E30E  AE16               	btfss	(___flmul@prod+2)^0,7,c
  7409  00E310  EF8C  F071         	goto	u4211
  7410  00E314  EF8E  F071         	goto	u4210
  7411  00E318                     u4211:
  7412  00E318  EF72  F071         	goto	l3630
  7413  00E31C                     u4210:
  7414  00E31C  0E00               	movlw	0
  7415  00E31E  6E12               	movwf	___flmul@aexp^0,c
  7416  00E320  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7417  00E322  EF95  F071         	goto	u4221
  7418  00E326  EF97  F071         	goto	u4220
  7419  00E32A                     u4221:
  7420  00E32A  EFBB  F071         	goto	l756
  7421  00E32E                     u4220:
  7422  00E32E  0EFF               	movlw	255
  7423  00E330  140E               	andwf	___flmul@grs^0,w,c
  7424  00E332  6E09               	movwf	??___flmul^0,c
  7425  00E334  0EFF               	movlw	255
  7426  00E336  140F               	andwf	(___flmul@grs+1)^0,w,c
  7427  00E338  6E0A               	movwf	(??___flmul+1)^0,c
  7428  00E33A  0EFF               	movlw	255
  7429  00E33C  1410               	andwf	(___flmul@grs+2)^0,w,c
  7430  00E33E  6E0B               	movwf	(??___flmul+2)^0,c
  7431  00E340  0E7F               	movlw	127
  7432  00E342  1411               	andwf	(___flmul@grs+3)^0,w,c
  7433  00E344  6E0C               	movwf	(??___flmul+3)^0,c
  7434  00E346  5009               	movf	??___flmul^0,w,c
  7435  00E348  100A               	iorwf	(??___flmul+1)^0,w,c
  7436  00E34A  100B               	iorwf	(??___flmul+2)^0,w,c
  7437  00E34C  100C               	iorwf	(??___flmul+3)^0,w,c
  7438  00E34E  B4D8               	btfsc	status,2,c
  7439  00E350  EFAC  F071         	goto	u4231
  7440  00E354  EFAE  F071         	goto	u4230
  7441  00E358                     u4231:
  7442  00E358  EFB2  F071         	goto	l757
  7443  00E35C                     u4230:
  7444  00E35C                     l3644:
  7445  00E35C  0E01               	movlw	1
  7446  00E35E  6E12               	movwf	___flmul@aexp^0,c
  7447  00E360  EFBB  F071         	goto	l756
  7448  00E364                     l757:
  7449  00E364  A014               	btfss	___flmul@prod^0,0,c
  7450  00E366  EFB7  F071         	goto	u4241
  7451  00E36A  EFB9  F071         	goto	u4240
  7452  00E36E                     u4241:
  7453  00E36E  EFBB  F071         	goto	l756
  7454  00E372                     u4240:
  7455  00E372  EFAE  F071         	goto	l3644
  7456  00E376                     l756:
  7457  00E376  5012               	movf	___flmul@aexp^0,w,c
  7458  00E378  B4D8               	btfsc	status,2,c
  7459  00E37A  EFC1  F071         	goto	u4251
  7460  00E37E  EFC3  F071         	goto	u4250
  7461  00E382                     u4251:
  7462  00E382  EFE7  F071         	goto	l3656
  7463  00E386                     u4250:
  7464  00E386  0E01               	movlw	1
  7465  00E388  2614               	addwf	___flmul@prod^0,f,c
  7466  00E38A  0E00               	movlw	0
  7467  00E38C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7468  00E38E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7469  00E390  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7470  00E392  A017               	btfss	(___flmul@prod+3)^0,0,c
  7471  00E394  EFCE  F071         	goto	u4261
  7472  00E398  EFD0  F071         	goto	u4260
  7473  00E39C                     u4261:
  7474  00E39C  EFE7  F071         	goto	l3656
  7475  00E3A0                     u4260:
  7476  00E3A0  C014  F009         	movff	___flmul@prod,??___flmul
  7477  00E3A4  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  7478  00E3A8  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  7479  00E3AC  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  7480  00E3B0  340C               	rlcf	(??___flmul+3)^0,w,c
  7481  00E3B2  320C               	rrcf	(??___flmul+3)^0,f,c
  7482  00E3B4  320B               	rrcf	(??___flmul+2)^0,f,c
  7483  00E3B6  320A               	rrcf	(??___flmul+1)^0,f,c
  7484  00E3B8  3209               	rrcf	??___flmul^0,f,c
  7485  00E3BA  C009  F014         	movff	??___flmul,___flmul@prod
  7486  00E3BE  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  7487  00E3C2  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  7488  00E3C6  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  7489  00E3CA  4A18               	infsnz	___flmul@temp^0,f,c
  7490  00E3CC  2A19               	incf	(___flmul@temp+1)^0,f,c
  7491  00E3CE                     l3656:
  7492  00E3CE  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7493  00E3D0  EFF2  F071         	goto	u4271
  7494  00E3D4  5019               	movf	(___flmul@temp+1)^0,w,c
  7495  00E3D6  E108               	bnz	u4270
  7496  00E3D8  2818               	incf	___flmul@temp^0,w,c
  7497  00E3DA  A0D8               	btfss	status,0,c
  7498  00E3DC  EFF2  F071         	goto	u4271
  7499  00E3E0  EFF4  F071         	goto	u4270
  7500  00E3E4                     u4271:
  7501  00E3E4  EFFE  F071         	goto	l3660
  7502  00E3E8                     u4270:
  7503  00E3E8  0E00               	movlw	0
  7504  00E3EA  6E14               	movwf	___flmul@prod^0,c
  7505  00E3EC  0E00               	movlw	0
  7506  00E3EE  6E15               	movwf	(___flmul@prod+1)^0,c
  7507  00E3F0  0E80               	movlw	128
  7508  00E3F2  6E16               	movwf	(___flmul@prod+2)^0,c
  7509  00E3F4  0E7F               	movlw	127
  7510  00E3F6  6E17               	movwf	(___flmul@prod+3)^0,c
  7511  00E3F8  EF2C  F072         	goto	l3672
  7512  00E3FC                     l3660:
  7513  00E3FC  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7514  00E3FE  EF0B  F072         	goto	u4280
  7515  00E402  5019               	movf	(___flmul@temp+1)^0,w,c
  7516  00E404  E106               	bnz	u4281
  7517  00E406  0418               	decf	___flmul@temp^0,w,c
  7518  00E408  B0D8               	btfsc	status,0,c
  7519  00E40A  EF09  F072         	goto	u4281
  7520  00E40E  EF0B  F072         	goto	u4280
  7521  00E412                     u4281:
  7522  00E412  EF17  F072         	goto	l764
  7523  00E416                     u4280:
  7524  00E416  0E00               	movlw	0
  7525  00E418  6E14               	movwf	___flmul@prod^0,c
  7526  00E41A  0E00               	movlw	0
  7527  00E41C  6E15               	movwf	(___flmul@prod+1)^0,c
  7528  00E41E  0E00               	movlw	0
  7529  00E420  6E16               	movwf	(___flmul@prod+2)^0,c
  7530  00E422  0E00               	movlw	0
  7531  00E424  6E17               	movwf	(___flmul@prod+3)^0,c
  7532  00E426  0E00               	movlw	0
  7533  00E428  6E0D               	movwf	___flmul@sign^0,c
  7534  00E42A  EF2C  F072         	goto	l3672
  7535  00E42E                     l764:
  7536  00E42E  C018  F013         	movff	___flmul@temp,___flmul@bexp
  7537  00E432  0EFF               	movlw	255
  7538  00E434  1614               	andwf	___flmul@prod^0,f,c
  7539  00E436  0EFF               	movlw	255
  7540  00E438  1615               	andwf	(___flmul@prod+1)^0,f,c
  7541  00E43A  0E7F               	movlw	127
  7542  00E43C  1616               	andwf	(___flmul@prod+2)^0,f,c
  7543  00E43E  0E00               	movlw	0
  7544  00E440  1617               	andwf	(___flmul@prod+3)^0,f,c
  7545  00E442  A013               	btfss	___flmul@bexp^0,0,c
  7546  00E444  EF26  F072         	goto	u4291
  7547  00E448  EF28  F072         	goto	u4290
  7548  00E44C                     u4291:
  7549  00E44C  EF29  F072         	goto	l3670
  7550  00E450                     u4290:
  7551  00E450  8E16               	bsf	(___flmul@prod+2)^0,7,c
  7552  00E452                     l3670:
  7553  00E452  90D8               	bcf	status,0,c
  7554  00E454  3013               	rrcf	___flmul@bexp^0,w,c
  7555  00E456  6E17               	movwf	(___flmul@prod+3)^0,c
  7556  00E458                     l3672:
  7557  00E458  500D               	movf	___flmul@sign^0,w,c
  7558  00E45A  1217               	iorwf	(___flmul@prod+3)^0,f,c
  7559  00E45C  C014  F001         	movff	___flmul@prod,?___flmul
  7560  00E460  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  7561  00E464  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  7562  00E468  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  7563  00E46C                     l751:
  7564  00E46C  0012               	return		;funcret
  7565  00E46E                     __end_of___flmul:
  7566                           	callstack 0
  7567                           
  7568 ;; *************** function ___flge *****************
  7569 ;; Defined at:
  7570 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;  ff1             4   25[COMRAM] unsigned char 
  7573 ;;  ff2             4   29[COMRAM] unsigned char 
  7574 ;; Auto vars:     Size  Location     Type
  7575 ;;		None
  7576 ;; Return value:  Size  Location     Type
  7577 ;;		None               void
  7578 ;; Registers used:
  7579 ;;		wreg, status,2, status,0
  7580 ;; Tracked objects:
  7581 ;;		On entry : 0/0
  7582 ;;		On exit  : 0/0
  7583 ;;		Unchanged: 0/0
  7584 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  7585 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7587 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7588 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7589 ;;Total ram usage:       12 bytes
  7590 ;; Hardware stack levels used: 1
  7591 ;; This function calls:
  7592 ;;		Nothing
  7593 ;; This function is called by:
  7594 ;;		_efgtoa
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           	psect	text20
  7599  00CBA2                     __ptext20:
  7600                           	callstack 0
  7601  00CBA2                     ___flge:
  7602                           	callstack 26
  7603  00CBA2  0E00               	movlw	0
  7604  00CBA4  141A               	andwf	___flge@ff1^0,w,c
  7605  00CBA6  6E22               	movwf	??___flge^0,c
  7606  00CBA8  0E00               	movlw	0
  7607  00CBAA  141B               	andwf	(___flge@ff1+1)^0,w,c
  7608  00CBAC  6E23               	movwf	(??___flge+1)^0,c
  7609  00CBAE  0E80               	movlw	128
  7610  00CBB0  141C               	andwf	(___flge@ff1+2)^0,w,c
  7611  00CBB2  6E24               	movwf	(??___flge+2)^0,c
  7612  00CBB4  0E7F               	movlw	127
  7613  00CBB6  141D               	andwf	(___flge@ff1+3)^0,w,c
  7614  00CBB8  6E25               	movwf	(??___flge+3)^0,c
  7615  00CBBA  5022               	movf	??___flge^0,w,c
  7616  00CBBC  1023               	iorwf	(??___flge+1)^0,w,c
  7617  00CBBE  1024               	iorwf	(??___flge+2)^0,w,c
  7618  00CBC0  1025               	iorwf	(??___flge+3)^0,w,c
  7619  00CBC2  A4D8               	btfss	status,2,c
  7620  00CBC4  EFE6  F065         	goto	u4451
  7621  00CBC8  EFE8  F065         	goto	u4450
  7622  00CBCC                     u4451:
  7623  00CBCC  EFF0  F065         	goto	l3784
  7624  00CBD0                     u4450:
  7625  00CBD0  0E00               	movlw	0
  7626  00CBD2  6E1A               	movwf	___flge@ff1^0,c
  7627  00CBD4  0E00               	movlw	0
  7628  00CBD6  6E1B               	movwf	(___flge@ff1+1)^0,c
  7629  00CBD8  0E00               	movlw	0
  7630  00CBDA  6E1C               	movwf	(___flge@ff1+2)^0,c
  7631  00CBDC  0E00               	movlw	0
  7632  00CBDE  6E1D               	movwf	(___flge@ff1+3)^0,c
  7633  00CBE0                     l3784:
  7634  00CBE0  0E00               	movlw	0
  7635  00CBE2  141E               	andwf	___flge@ff2^0,w,c
  7636  00CBE4  6E22               	movwf	??___flge^0,c
  7637  00CBE6  0E00               	movlw	0
  7638  00CBE8  141F               	andwf	(___flge@ff2+1)^0,w,c
  7639  00CBEA  6E23               	movwf	(??___flge+1)^0,c
  7640  00CBEC  0E80               	movlw	128
  7641  00CBEE  1420               	andwf	(___flge@ff2+2)^0,w,c
  7642  00CBF0  6E24               	movwf	(??___flge+2)^0,c
  7643  00CBF2  0E7F               	movlw	127
  7644  00CBF4  1421               	andwf	(___flge@ff2+3)^0,w,c
  7645  00CBF6  6E25               	movwf	(??___flge+3)^0,c
  7646  00CBF8  5022               	movf	??___flge^0,w,c
  7647  00CBFA  1023               	iorwf	(??___flge+1)^0,w,c
  7648  00CBFC  1024               	iorwf	(??___flge+2)^0,w,c
  7649  00CBFE  1025               	iorwf	(??___flge+3)^0,w,c
  7650  00CC00  A4D8               	btfss	status,2,c
  7651  00CC02  EF05  F066         	goto	u4461
  7652  00CC06  EF07  F066         	goto	u4460
  7653  00CC0A                     u4461:
  7654  00CC0A  EF0F  F066         	goto	l3788
  7655  00CC0E                     u4460:
  7656  00CC0E  0E00               	movlw	0
  7657  00CC10  6E1E               	movwf	___flge@ff2^0,c
  7658  00CC12  0E00               	movlw	0
  7659  00CC14  6E1F               	movwf	(___flge@ff2+1)^0,c
  7660  00CC16  0E00               	movlw	0
  7661  00CC18  6E20               	movwf	(___flge@ff2+2)^0,c
  7662  00CC1A  0E00               	movlw	0
  7663  00CC1C  6E21               	movwf	(___flge@ff2+3)^0,c
  7664  00CC1E                     l3788:
  7665  00CC1E  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  7666  00CC20  EF14  F066         	goto	u4471
  7667  00CC24  EF16  F066         	goto	u4470
  7668  00CC28                     u4471:
  7669  00CC28  EF1F  F066         	goto	l3792
  7670  00CC2C                     u4470:
  7671  00CC2C  6C1A               	negf	___flge@ff1^0,c
  7672  00CC2E  1E1B               	comf	(___flge@ff1+1)^0,f,c
  7673  00CC30  B0D8               	btfsc	status,0,c
  7674  00CC32  2A1B               	incf	(___flge@ff1+1)^0,f,c
  7675  00CC34  1E1C               	comf	(___flge@ff1+2)^0,f,c
  7676  00CC36  B0D8               	btfsc	status,0,c
  7677  00CC38  2A1C               	incf	(___flge@ff1+2)^0,f,c
  7678  00CC3A  0E80               	movlw	128
  7679  00CC3C  561D               	subfwb	(___flge@ff1+3)^0,f,c
  7680  00CC3E                     l3792:
  7681  00CC3E  AE21               	btfss	(___flge@ff2+3)^0,7,c
  7682  00CC40  EF24  F066         	goto	u4481
  7683  00CC44  EF26  F066         	goto	u4480
  7684  00CC48                     u4481:
  7685  00CC48  EF2F  F066         	goto	l398
  7686  00CC4C                     u4480:
  7687  00CC4C  6C1E               	negf	___flge@ff2^0,c
  7688  00CC4E  1E1F               	comf	(___flge@ff2+1)^0,f,c
  7689  00CC50  B0D8               	btfsc	status,0,c
  7690  00CC52  2A1F               	incf	(___flge@ff2+1)^0,f,c
  7691  00CC54  1E20               	comf	(___flge@ff2+2)^0,f,c
  7692  00CC56  B0D8               	btfsc	status,0,c
  7693  00CC58  2A20               	incf	(___flge@ff2+2)^0,f,c
  7694  00CC5A  0E80               	movlw	128
  7695  00CC5C  5621               	subfwb	(___flge@ff2+3)^0,f,c
  7696  00CC5E                     l398:
  7697  00CC5E  0E00               	movlw	0
  7698  00CC60  1A1A               	xorwf	___flge@ff1^0,f,c
  7699  00CC62  0E00               	movlw	0
  7700  00CC64  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  7701  00CC66  0E00               	movlw	0
  7702  00CC68  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  7703  00CC6A  0E80               	movlw	128
  7704  00CC6C  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  7705  00CC6E  0E00               	movlw	0
  7706  00CC70  1A1E               	xorwf	___flge@ff2^0,f,c
  7707  00CC72  0E00               	movlw	0
  7708  00CC74  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  7709  00CC76  0E00               	movlw	0
  7710  00CC78  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  7711  00CC7A  0E80               	movlw	128
  7712  00CC7C  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  7713  00CC7E  501E               	movf	___flge@ff2^0,w,c
  7714  00CC80  5C1A               	subwf	___flge@ff1^0,w,c
  7715  00CC82  501F               	movf	(___flge@ff2+1)^0,w,c
  7716  00CC84  581B               	subwfb	(___flge@ff1+1)^0,w,c
  7717  00CC86  5020               	movf	(___flge@ff2+2)^0,w,c
  7718  00CC88  581C               	subwfb	(___flge@ff1+2)^0,w,c
  7719  00CC8A  5021               	movf	(___flge@ff2+3)^0,w,c
  7720  00CC8C  581D               	subwfb	(___flge@ff1+3)^0,w,c
  7721  00CC8E  B0D8               	btfsc	status,0,c
  7722  00CC90  EF4C  F066         	goto	u4491
  7723  00CC94  EF4E  F066         	goto	u4490
  7724  00CC98                     u4491:
  7725  00CC98  EF51  F066         	goto	l3798
  7726  00CC9C                     u4490:
  7727  00CC9C  90D8               	bcf	status,0,c
  7728  00CC9E  EF52  F066         	goto	l403
  7729  00CCA2                     l3798:
  7730  00CCA2  80D8               	bsf	status,0,c
  7731  00CCA4                     l403:
  7732  00CCA4  0012               	return		;funcret
  7733  00CCA6                     __end_of___flge:
  7734                           	callstack 0
  7735                           
  7736 ;; *************** function ___fleq *****************
  7737 ;; Defined at:
  7738 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;  ff1             4    0[COMRAM] unsigned char 
  7741 ;;  ff2             4    4[COMRAM] unsigned char 
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;		None
  7744 ;; Return value:  Size  Location     Type
  7745 ;;		None               void
  7746 ;; Registers used:
  7747 ;;		wreg, status,2, status,0
  7748 ;; Tracked objects:
  7749 ;;		On entry : 0/0
  7750 ;;		On exit  : 0/0
  7751 ;;		Unchanged: 0/0
  7752 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  7753 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7755 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7756 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7757 ;;Total ram usage:       12 bytes
  7758 ;; Hardware stack levels used: 1
  7759 ;; This function calls:
  7760 ;;		Nothing
  7761 ;; This function is called by:
  7762 ;;		_efgtoa
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           	psect	text21
  7767  00C624                     __ptext21:
  7768                           	callstack 0
  7769  00C624                     ___fleq:
  7770                           	callstack 26
  7771  00C624  0E00               	movlw	0
  7772  00C626  1401               	andwf	___fleq@ff1^0,w,c
  7773  00C628  6E09               	movwf	??___fleq^0,c
  7774  00C62A  0E00               	movlw	0
  7775  00C62C  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7776  00C62E  6E0A               	movwf	(??___fleq+1)^0,c
  7777  00C630  0E80               	movlw	128
  7778  00C632  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7779  00C634  6E0B               	movwf	(??___fleq+2)^0,c
  7780  00C636  0E7F               	movlw	127
  7781  00C638  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7782  00C63A  6E0C               	movwf	(??___fleq+3)^0,c
  7783  00C63C  5009               	movf	??___fleq^0,w,c
  7784  00C63E  100A               	iorwf	(??___fleq+1)^0,w,c
  7785  00C640  100B               	iorwf	(??___fleq+2)^0,w,c
  7786  00C642  100C               	iorwf	(??___fleq+3)^0,w,c
  7787  00C644  A4D8               	btfss	status,2,c
  7788  00C646  EF27  F063         	goto	u4421
  7789  00C64A  EF29  F063         	goto	u4420
  7790  00C64E                     u4421:
  7791  00C64E  EF31  F063         	goto	l3768
  7792  00C652                     u4420:
  7793  00C652  0E00               	movlw	0
  7794  00C654  6E01               	movwf	___fleq@ff1^0,c
  7795  00C656  0E00               	movlw	0
  7796  00C658  6E02               	movwf	(___fleq@ff1+1)^0,c
  7797  00C65A  0E00               	movlw	0
  7798  00C65C  6E03               	movwf	(___fleq@ff1+2)^0,c
  7799  00C65E  0E00               	movlw	0
  7800  00C660  6E04               	movwf	(___fleq@ff1+3)^0,c
  7801  00C662                     l3768:
  7802  00C662  0E00               	movlw	0
  7803  00C664  1405               	andwf	___fleq@ff2^0,w,c
  7804  00C666  6E09               	movwf	??___fleq^0,c
  7805  00C668  0E00               	movlw	0
  7806  00C66A  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7807  00C66C  6E0A               	movwf	(??___fleq+1)^0,c
  7808  00C66E  0E80               	movlw	128
  7809  00C670  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7810  00C672  6E0B               	movwf	(??___fleq+2)^0,c
  7811  00C674  0E7F               	movlw	127
  7812  00C676  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7813  00C678  6E0C               	movwf	(??___fleq+3)^0,c
  7814  00C67A  5009               	movf	??___fleq^0,w,c
  7815  00C67C  100A               	iorwf	(??___fleq+1)^0,w,c
  7816  00C67E  100B               	iorwf	(??___fleq+2)^0,w,c
  7817  00C680  100C               	iorwf	(??___fleq+3)^0,w,c
  7818  00C682  A4D8               	btfss	status,2,c
  7819  00C684  EF46  F063         	goto	u4431
  7820  00C688  EF48  F063         	goto	u4430
  7821  00C68C                     u4431:
  7822  00C68C  EF50  F063         	goto	l3772
  7823  00C690                     u4430:
  7824  00C690  0E00               	movlw	0
  7825  00C692  6E05               	movwf	___fleq@ff2^0,c
  7826  00C694  0E00               	movlw	0
  7827  00C696  6E06               	movwf	(___fleq@ff2+1)^0,c
  7828  00C698  0E00               	movlw	0
  7829  00C69A  6E07               	movwf	(___fleq@ff2+2)^0,c
  7830  00C69C  0E00               	movlw	0
  7831  00C69E  6E08               	movwf	(___fleq@ff2+3)^0,c
  7832  00C6A0                     l3772:
  7833  00C6A0  5005               	movf	___fleq@ff2^0,w,c
  7834  00C6A2  1801               	xorwf	___fleq@ff1^0,w,c
  7835  00C6A4  E10F               	bnz	u4440
  7836  00C6A6  5006               	movf	(___fleq@ff2+1)^0,w,c
  7837  00C6A8  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7838  00C6AA  E10C               	bnz	u4440
  7839  00C6AC  5007               	movf	(___fleq@ff2+2)^0,w,c
  7840  00C6AE  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7841  00C6B0  E109               	bnz	u4440
  7842  00C6B2  5008               	movf	(___fleq@ff2+3)^0,w,c
  7843  00C6B4  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7844  00C6B6  B4D8               	btfsc	status,2,c
  7845  00C6B8  EF60  F063         	goto	u4441
  7846  00C6BC  EF62  F063         	goto	u4440
  7847  00C6C0                     u4441:
  7848  00C6C0  EF65  F063         	goto	l3776
  7849  00C6C4                     u4440:
  7850  00C6C4  90D8               	bcf	status,0,c
  7851  00C6C6  EF66  F063         	goto	l392
  7852  00C6CA                     l3776:
  7853  00C6CA  80D8               	bsf	status,0,c
  7854  00C6CC                     l392:
  7855  00C6CC  0012               	return		;funcret
  7856  00C6CE                     __end_of___fleq:
  7857                           	callstack 0
  7858                           
  7859 ;; *************** function ___fldiv *****************
  7860 ;; Defined at:
  7861 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  7862 ;; Parameters:    Size  Location     Type
  7863 ;;  b               4    0[COMRAM] unsigned char 
  7864 ;;  a               4    4[COMRAM] unsigned char 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;  grs             4   19[COMRAM] unsigned long 
  7867 ;;  rem             4   12[COMRAM] unsigned long 
  7868 ;;  new_exp         2   17[COMRAM] short 
  7869 ;;  aexp            1   24[COMRAM] unsigned char 
  7870 ;;  bexp            1   23[COMRAM] unsigned char 
  7871 ;;  sign            1   16[COMRAM] unsigned char 
  7872 ;; Return value:  Size  Location     Type
  7873 ;;                  4    0[COMRAM] unsigned char 
  7874 ;; Registers used:
  7875 ;;		wreg, status,2, status,0
  7876 ;; Tracked objects:
  7877 ;;		On entry : 0/0
  7878 ;;		On exit  : 0/0
  7879 ;;		Unchanged: 0/0
  7880 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  7881 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7882 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7883 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7884 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7885 ;;Total ram usage:       25 bytes
  7886 ;; Hardware stack levels used: 1
  7887 ;; This function calls:
  7888 ;;		Nothing
  7889 ;; This function is called by:
  7890 ;;		_efgtoa
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           	psect	text22
  7895  00DCAA                     __ptext22:
  7896                           	callstack 0
  7897  00DCAA                     ___fldiv:
  7898                           	callstack 26
  7899  00DCAA  5004               	movf	(___fldiv@b+3)^0,w,c
  7900  00DCAC  0B80               	andlw	128
  7901  00DCAE  6E11               	movwf	___fldiv@sign^0,c
  7902  00DCB0  5004               	movf	(___fldiv@b+3)^0,w,c
  7903  00DCB2  2404               	addwf	(___fldiv@b+3)^0,w,c
  7904  00DCB4  6E18               	movwf	___fldiv@bexp^0,c
  7905  00DCB6  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7906  00DCB8  EF60  F06E         	goto	u3881
  7907  00DCBC  EF62  F06E         	goto	u3880
  7908  00DCC0                     u3881:
  7909  00DCC0  EF63  F06E         	goto	l3416
  7910  00DCC4                     u3880:
  7911  00DCC4  8018               	bsf	___fldiv@bexp^0,0,c
  7912  00DCC6                     l3416:
  7913  00DCC6  5018               	movf	___fldiv@bexp^0,w,c
  7914  00DCC8  B4D8               	btfsc	status,2,c
  7915  00DCCA  EF69  F06E         	goto	u3891
  7916  00DCCE  EF6B  F06E         	goto	u3890
  7917  00DCD2                     u3891:
  7918  00DCD2  EF80  F06E         	goto	l3426
  7919  00DCD6                     u3890:
  7920  00DCD6  2818               	incf	___fldiv@bexp^0,w,c
  7921  00DCD8  A4D8               	btfss	status,2,c
  7922  00DCDA  EF71  F06E         	goto	u3901
  7923  00DCDE  EF73  F06E         	goto	u3900
  7924  00DCE2                     u3901:
  7925  00DCE2  EF7B  F06E         	goto	l3422
  7926  00DCE6                     u3900:
  7927  00DCE6  0E00               	movlw	0
  7928  00DCE8  6E01               	movwf	___fldiv@b^0,c
  7929  00DCEA  0E00               	movlw	0
  7930  00DCEC  6E02               	movwf	(___fldiv@b+1)^0,c
  7931  00DCEE  0E00               	movlw	0
  7932  00DCF0  6E03               	movwf	(___fldiv@b+2)^0,c
  7933  00DCF2  0E00               	movlw	0
  7934  00DCF4  6E04               	movwf	(___fldiv@b+3)^0,c
  7935  00DCF6                     l3422:
  7936  00DCF6  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7937  00DCF8  0E00               	movlw	0
  7938  00DCFA  6E04               	movwf	(___fldiv@b+3)^0,c
  7939  00DCFC  EF88  F06E         	goto	l3428
  7940  00DD00                     l3426:
  7941  00DD00  0E00               	movlw	0
  7942  00DD02  6E01               	movwf	___fldiv@b^0,c
  7943  00DD04  0E00               	movlw	0
  7944  00DD06  6E02               	movwf	(___fldiv@b+1)^0,c
  7945  00DD08  0E00               	movlw	0
  7946  00DD0A  6E03               	movwf	(___fldiv@b+2)^0,c
  7947  00DD0C  0E00               	movlw	0
  7948  00DD0E  6E04               	movwf	(___fldiv@b+3)^0,c
  7949  00DD10                     l3428:
  7950  00DD10  5008               	movf	(___fldiv@a+3)^0,w,c
  7951  00DD12  0B80               	andlw	128
  7952  00DD14  1A11               	xorwf	___fldiv@sign^0,f,c
  7953  00DD16  5008               	movf	(___fldiv@a+3)^0,w,c
  7954  00DD18  2408               	addwf	(___fldiv@a+3)^0,w,c
  7955  00DD1A  6E19               	movwf	___fldiv@aexp^0,c
  7956  00DD1C  AE07               	btfss	(___fldiv@a+2)^0,7,c
  7957  00DD1E  EF93  F06E         	goto	u3911
  7958  00DD22  EF95  F06E         	goto	u3910
  7959  00DD26                     u3911:
  7960  00DD26  EF96  F06E         	goto	l3436
  7961  00DD2A                     u3910:
  7962  00DD2A  8019               	bsf	___fldiv@aexp^0,0,c
  7963  00DD2C                     l3436:
  7964  00DD2C  5019               	movf	___fldiv@aexp^0,w,c
  7965  00DD2E  B4D8               	btfsc	status,2,c
  7966  00DD30  EF9C  F06E         	goto	u3921
  7967  00DD34  EF9E  F06E         	goto	u3920
  7968  00DD38                     u3921:
  7969  00DD38  EFB3  F06E         	goto	l3446
  7970  00DD3C                     u3920:
  7971  00DD3C  2819               	incf	___fldiv@aexp^0,w,c
  7972  00DD3E  A4D8               	btfss	status,2,c
  7973  00DD40  EFA4  F06E         	goto	u3931
  7974  00DD44  EFA6  F06E         	goto	u3930
  7975  00DD48                     u3931:
  7976  00DD48  EFAE  F06E         	goto	l3442
  7977  00DD4C                     u3930:
  7978  00DD4C  0E00               	movlw	0
  7979  00DD4E  6E05               	movwf	___fldiv@a^0,c
  7980  00DD50  0E00               	movlw	0
  7981  00DD52  6E06               	movwf	(___fldiv@a+1)^0,c
  7982  00DD54  0E00               	movlw	0
  7983  00DD56  6E07               	movwf	(___fldiv@a+2)^0,c
  7984  00DD58  0E00               	movlw	0
  7985  00DD5A  6E08               	movwf	(___fldiv@a+3)^0,c
  7986  00DD5C                     l3442:
  7987  00DD5C  8E07               	bsf	(___fldiv@a+2)^0,7,c
  7988  00DD5E  0E00               	movlw	0
  7989  00DD60  6E08               	movwf	(___fldiv@a+3)^0,c
  7990  00DD62  EFBB  F06E         	goto	l3448
  7991  00DD66                     l3446:
  7992  00DD66  0E00               	movlw	0
  7993  00DD68  6E05               	movwf	___fldiv@a^0,c
  7994  00DD6A  0E00               	movlw	0
  7995  00DD6C  6E06               	movwf	(___fldiv@a+1)^0,c
  7996  00DD6E  0E00               	movlw	0
  7997  00DD70  6E07               	movwf	(___fldiv@a+2)^0,c
  7998  00DD72  0E00               	movlw	0
  7999  00DD74  6E08               	movwf	(___fldiv@a+3)^0,c
  8000  00DD76                     l3448:
  8001  00DD76  5005               	movf	___fldiv@a^0,w,c
  8002  00DD78  1006               	iorwf	(___fldiv@a+1)^0,w,c
  8003  00DD7A  1007               	iorwf	(___fldiv@a+2)^0,w,c
  8004  00DD7C  1008               	iorwf	(___fldiv@a+3)^0,w,c
  8005  00DD7E  A4D8               	btfss	status,2,c
  8006  00DD80  EFC4  F06E         	goto	u3941
  8007  00DD84  EFC6  F06E         	goto	u3940
  8008  00DD88                     u3941:
  8009  00DD88  EFDE  F06E         	goto	l3460
  8010  00DD8C                     u3940:
  8011  00DD8C  0E00               	movlw	0
  8012  00DD8E  6E01               	movwf	___fldiv@b^0,c
  8013  00DD90  0E00               	movlw	0
  8014  00DD92  6E02               	movwf	(___fldiv@b+1)^0,c
  8015  00DD94  0E00               	movlw	0
  8016  00DD96  6E03               	movwf	(___fldiv@b+2)^0,c
  8017  00DD98  0E00               	movlw	0
  8018  00DD9A  6E04               	movwf	(___fldiv@b+3)^0,c
  8019  00DD9C  0E80               	movlw	128
  8020  00DD9E  1203               	iorwf	(___fldiv@b+2)^0,f,c
  8021  00DDA0  0E7F               	movlw	127
  8022  00DDA2  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8023  00DDA4                     l3454:
  8024  00DDA4  5011               	movf	___fldiv@sign^0,w,c
  8025  00DDA6  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8026  00DDA8  C001  F001         	movff	___fldiv@b,?___fldiv
  8027  00DDAC  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  8028  00DDB0  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  8029  00DDB4  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  8030  00DDB8  EF21  F070         	goto	l715
  8031  00DDBC                     l3460:
  8032  00DDBC  5018               	movf	___fldiv@bexp^0,w,c
  8033  00DDBE  A4D8               	btfss	status,2,c
  8034  00DDC0  EFE4  F06E         	goto	u3951
  8035  00DDC4  EFE6  F06E         	goto	u3950
  8036  00DDC8                     u3951:
  8037  00DDC8  EFF0  F06E         	goto	l3468
  8038  00DDCC                     u3950:
  8039  00DDCC  0E00               	movlw	0
  8040  00DDCE  6E01               	movwf	?___fldiv^0,c
  8041  00DDD0  0E00               	movlw	0
  8042  00DDD2  6E02               	movwf	(?___fldiv+1)^0,c
  8043  00DDD4  0E00               	movlw	0
  8044  00DDD6  6E03               	movwf	(?___fldiv+2)^0,c
  8045  00DDD8  0E00               	movlw	0
  8046  00DDDA  6E04               	movwf	(?___fldiv+3)^0,c
  8047  00DDDC  EF21  F070         	goto	l715
  8048  00DDE0                     l3468:
  8049  00DDE0  5019               	movf	___fldiv@aexp^0,w,c
  8050  00DDE2  C018  F009         	movff	___fldiv@bexp,??___fldiv
  8051  00DDE6  6A0A               	clrf	(??___fldiv+1)^0,c
  8052  00DDE8  5E09               	subwf	??___fldiv^0,f,c
  8053  00DDEA  0E00               	movlw	0
  8054  00DDEC  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  8055  00DDEE  0E7F               	movlw	127
  8056  00DDF0  2409               	addwf	??___fldiv^0,w,c
  8057  00DDF2  6E12               	movwf	___fldiv@new_exp^0,c
  8058  00DDF4  0E00               	movlw	0
  8059  00DDF6  200A               	addwfc	(??___fldiv+1)^0,w,c
  8060  00DDF8  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8061  00DDFA  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  8062  00DDFE  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  8063  00DE02  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  8064  00DE06  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  8065  00DE0A  0E00               	movlw	0
  8066  00DE0C  6E01               	movwf	___fldiv@b^0,c
  8067  00DE0E  0E00               	movlw	0
  8068  00DE10  6E02               	movwf	(___fldiv@b+1)^0,c
  8069  00DE12  0E00               	movlw	0
  8070  00DE14  6E03               	movwf	(___fldiv@b+2)^0,c
  8071  00DE16  0E00               	movlw	0
  8072  00DE18  6E04               	movwf	(___fldiv@b+3)^0,c
  8073  00DE1A  0E00               	movlw	0
  8074  00DE1C  6E14               	movwf	___fldiv@grs^0,c
  8075  00DE1E  0E00               	movlw	0
  8076  00DE20  6E15               	movwf	(___fldiv@grs+1)^0,c
  8077  00DE22  0E00               	movlw	0
  8078  00DE24  6E16               	movwf	(___fldiv@grs+2)^0,c
  8079  00DE26  0E00               	movlw	0
  8080  00DE28  6E17               	movwf	(___fldiv@grs+3)^0,c
  8081  00DE2A  0E00               	movlw	0
  8082  00DE2C  6E19               	movwf	___fldiv@aexp^0,c
  8083  00DE2E  EF51  F06F         	goto	l717
  8084  00DE32                     l3478:
  8085  00DE32  5019               	movf	___fldiv@aexp^0,w,c
  8086  00DE34  B4D8               	btfsc	status,2,c
  8087  00DE36  EF1F  F06F         	goto	u3961
  8088  00DE3A  EF21  F06F         	goto	u3960
  8089  00DE3E                     u3961:
  8090  00DE3E  EF38  F06F         	goto	l3486
  8091  00DE42                     u3960:
  8092  00DE42  90D8               	bcf	status,0,c
  8093  00DE44  360D               	rlcf	___fldiv@rem^0,f,c
  8094  00DE46  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  8095  00DE48  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  8096  00DE4A  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  8097  00DE4C  90D8               	bcf	status,0,c
  8098  00DE4E  3601               	rlcf	___fldiv@b^0,f,c
  8099  00DE50  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8100  00DE52  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8101  00DE54  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8102  00DE56  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8103  00DE58  EF30  F06F         	goto	u3971
  8104  00DE5C  EF32  F06F         	goto	u3970
  8105  00DE60                     u3971:
  8106  00DE60  EF33  F06F         	goto	l720
  8107  00DE64                     u3970:
  8108  00DE64  8001               	bsf	___fldiv@b^0,0,c
  8109  00DE66                     l720:
  8110  00DE66  90D8               	bcf	status,0,c
  8111  00DE68  3614               	rlcf	___fldiv@grs^0,f,c
  8112  00DE6A  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8113  00DE6C  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8114  00DE6E  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8115  00DE70                     l3486:
  8116  00DE70  5005               	movf	___fldiv@a^0,w,c
  8117  00DE72  5C0D               	subwf	___fldiv@rem^0,w,c
  8118  00DE74  5006               	movf	(___fldiv@a+1)^0,w,c
  8119  00DE76  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  8120  00DE78  5007               	movf	(___fldiv@a+2)^0,w,c
  8121  00DE7A  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  8122  00DE7C  5008               	movf	(___fldiv@a+3)^0,w,c
  8123  00DE7E  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  8124  00DE80  A0D8               	btfss	status,0,c
  8125  00DE82  EF45  F06F         	goto	u3981
  8126  00DE86  EF47  F06F         	goto	u3980
  8127  00DE8A                     u3981:
  8128  00DE8A  EF50  F06F         	goto	l3492
  8129  00DE8E                     u3980:
  8130  00DE8E  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  8131  00DE90  5005               	movf	___fldiv@a^0,w,c
  8132  00DE92  5E0D               	subwf	___fldiv@rem^0,f,c
  8133  00DE94  5006               	movf	(___fldiv@a+1)^0,w,c
  8134  00DE96  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  8135  00DE98  5007               	movf	(___fldiv@a+2)^0,w,c
  8136  00DE9A  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  8137  00DE9C  5008               	movf	(___fldiv@a+3)^0,w,c
  8138  00DE9E  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  8139  00DEA0                     l3492:
  8140  00DEA0  2A19               	incf	___fldiv@aexp^0,f,c
  8141  00DEA2                     l717:
  8142  00DEA2  0E19               	movlw	25
  8143  00DEA4  6419               	cpfsgt	___fldiv@aexp^0,c
  8144  00DEA6  EF57  F06F         	goto	u3991
  8145  00DEAA  EF59  F06F         	goto	u3990
  8146  00DEAE                     u3991:
  8147  00DEAE  EF19  F06F         	goto	l3478
  8148  00DEB2                     u3990:
  8149  00DEB2  500D               	movf	___fldiv@rem^0,w,c
  8150  00DEB4  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  8151  00DEB6  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  8152  00DEB8  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  8153  00DEBA  B4D8               	btfsc	status,2,c
  8154  00DEBC  EF62  F06F         	goto	u4001
  8155  00DEC0  EF64  F06F         	goto	u4000
  8156  00DEC4                     u4001:
  8157  00DEC4  EF7C  F06F         	goto	l3504
  8158  00DEC8                     u4000:
  8159  00DEC8  8014               	bsf	___fldiv@grs^0,0,c
  8160  00DECA  EF7C  F06F         	goto	l3504
  8161  00DECE                     l3498:
  8162  00DECE  90D8               	bcf	status,0,c
  8163  00DED0  3601               	rlcf	___fldiv@b^0,f,c
  8164  00DED2  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8165  00DED4  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8166  00DED6  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8167  00DED8  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8168  00DEDA  EF71  F06F         	goto	u4011
  8169  00DEDE  EF73  F06F         	goto	u4010
  8170  00DEE2                     u4011:
  8171  00DEE2  EF74  F06F         	goto	l726
  8172  00DEE6                     u4010:
  8173  00DEE6  8001               	bsf	___fldiv@b^0,0,c
  8174  00DEE8                     l726:
  8175  00DEE8  90D8               	bcf	status,0,c
  8176  00DEEA  3614               	rlcf	___fldiv@grs^0,f,c
  8177  00DEEC  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8178  00DEEE  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8179  00DEF0  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8180  00DEF2  0612               	decf	___fldiv@new_exp^0,f,c
  8181  00DEF4  A0D8               	btfss	status,0,c
  8182  00DEF6  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  8183  00DEF8                     l3504:
  8184  00DEF8  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8185  00DEFA  EF81  F06F         	goto	u4021
  8186  00DEFE  EF83  F06F         	goto	u4020
  8187  00DF02                     u4021:
  8188  00DF02  EF67  F06F         	goto	l3498
  8189  00DF06                     u4020:
  8190  00DF06  0E00               	movlw	0
  8191  00DF08  6E19               	movwf	___fldiv@aexp^0,c
  8192  00DF0A  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8193  00DF0C  EF8A  F06F         	goto	u4031
  8194  00DF10  EF8C  F06F         	goto	u4030
  8195  00DF14                     u4031:
  8196  00DF14  EFB0  F06F         	goto	l728
  8197  00DF18                     u4030:
  8198  00DF18  0EFF               	movlw	255
  8199  00DF1A  1414               	andwf	___fldiv@grs^0,w,c
  8200  00DF1C  6E09               	movwf	??___fldiv^0,c
  8201  00DF1E  0EFF               	movlw	255
  8202  00DF20  1415               	andwf	(___fldiv@grs+1)^0,w,c
  8203  00DF22  6E0A               	movwf	(??___fldiv+1)^0,c
  8204  00DF24  0EFF               	movlw	255
  8205  00DF26  1416               	andwf	(___fldiv@grs+2)^0,w,c
  8206  00DF28  6E0B               	movwf	(??___fldiv+2)^0,c
  8207  00DF2A  0E7F               	movlw	127
  8208  00DF2C  1417               	andwf	(___fldiv@grs+3)^0,w,c
  8209  00DF2E  6E0C               	movwf	(??___fldiv+3)^0,c
  8210  00DF30  5009               	movf	??___fldiv^0,w,c
  8211  00DF32  100A               	iorwf	(??___fldiv+1)^0,w,c
  8212  00DF34  100B               	iorwf	(??___fldiv+2)^0,w,c
  8213  00DF36  100C               	iorwf	(??___fldiv+3)^0,w,c
  8214  00DF38  B4D8               	btfsc	status,2,c
  8215  00DF3A  EFA1  F06F         	goto	u4041
  8216  00DF3E  EFA3  F06F         	goto	u4040
  8217  00DF42                     u4041:
  8218  00DF42  EFA7  F06F         	goto	l729
  8219  00DF46                     u4040:
  8220  00DF46                     l3512:
  8221  00DF46  0E01               	movlw	1
  8222  00DF48  6E19               	movwf	___fldiv@aexp^0,c
  8223  00DF4A  EFB0  F06F         	goto	l728
  8224  00DF4E                     l729:
  8225  00DF4E  A001               	btfss	___fldiv@b^0,0,c
  8226  00DF50  EFAC  F06F         	goto	u4051
  8227  00DF54  EFAE  F06F         	goto	u4050
  8228  00DF58                     u4051:
  8229  00DF58  EFB0  F06F         	goto	l728
  8230  00DF5C                     u4050:
  8231  00DF5C  EFA3  F06F         	goto	l3512
  8232  00DF60                     l728:
  8233  00DF60  5019               	movf	___fldiv@aexp^0,w,c
  8234  00DF62  B4D8               	btfsc	status,2,c
  8235  00DF64  EFB6  F06F         	goto	u4061
  8236  00DF68  EFB8  F06F         	goto	u4060
  8237  00DF6C                     u4061:
  8238  00DF6C  EFDC  F06F         	goto	l3524
  8239  00DF70                     u4060:
  8240  00DF70  0E01               	movlw	1
  8241  00DF72  2601               	addwf	___fldiv@b^0,f,c
  8242  00DF74  0E00               	movlw	0
  8243  00DF76  2202               	addwfc	(___fldiv@b+1)^0,f,c
  8244  00DF78  2203               	addwfc	(___fldiv@b+2)^0,f,c
  8245  00DF7A  2204               	addwfc	(___fldiv@b+3)^0,f,c
  8246  00DF7C  A004               	btfss	(___fldiv@b+3)^0,0,c
  8247  00DF7E  EFC3  F06F         	goto	u4071
  8248  00DF82  EFC5  F06F         	goto	u4070
  8249  00DF86                     u4071:
  8250  00DF86  EFDC  F06F         	goto	l3524
  8251  00DF8A                     u4070:
  8252  00DF8A  C001  F009         	movff	___fldiv@b,??___fldiv
  8253  00DF8E  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  8254  00DF92  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  8255  00DF96  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  8256  00DF9A  340C               	rlcf	(??___fldiv+3)^0,w,c
  8257  00DF9C  320C               	rrcf	(??___fldiv+3)^0,f,c
  8258  00DF9E  320B               	rrcf	(??___fldiv+2)^0,f,c
  8259  00DFA0  320A               	rrcf	(??___fldiv+1)^0,f,c
  8260  00DFA2  3209               	rrcf	??___fldiv^0,f,c
  8261  00DFA4  C009  F001         	movff	??___fldiv,___fldiv@b
  8262  00DFA8  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  8263  00DFAC  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  8264  00DFB0  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  8265  00DFB4  4A12               	infsnz	___fldiv@new_exp^0,f,c
  8266  00DFB6  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  8267  00DFB8                     l3524:
  8268  00DFB8  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8269  00DFBA  EFE7  F06F         	goto	u4081
  8270  00DFBE  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8271  00DFC0  E108               	bnz	u4080
  8272  00DFC2  2812               	incf	___fldiv@new_exp^0,w,c
  8273  00DFC4  A0D8               	btfss	status,0,c
  8274  00DFC6  EFE7  F06F         	goto	u4081
  8275  00DFCA  EFE9  F06F         	goto	u4080
  8276  00DFCE                     u4081:
  8277  00DFCE  EFF4  F06F         	goto	l3528
  8278  00DFD2                     u4080:
  8279  00DFD2  0E00               	movlw	0
  8280  00DFD4  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8281  00DFD6  6812               	setf	___fldiv@new_exp^0,c
  8282  00DFD8  0E00               	movlw	0
  8283  00DFDA  6E01               	movwf	___fldiv@b^0,c
  8284  00DFDC  0E00               	movlw	0
  8285  00DFDE  6E02               	movwf	(___fldiv@b+1)^0,c
  8286  00DFE0  0E00               	movlw	0
  8287  00DFE2  6E03               	movwf	(___fldiv@b+2)^0,c
  8288  00DFE4  0E00               	movlw	0
  8289  00DFE6  6E04               	movwf	(___fldiv@b+3)^0,c
  8290  00DFE8                     l3528:
  8291  00DFE8  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8292  00DFEA  EF01  F070         	goto	u4090
  8293  00DFEE  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8294  00DFF0  E106               	bnz	u4091
  8295  00DFF2  0412               	decf	___fldiv@new_exp^0,w,c
  8296  00DFF4  B0D8               	btfsc	status,0,c
  8297  00DFF6  EFFF  F06F         	goto	u4091
  8298  00DFFA  EF01  F070         	goto	u4090
  8299  00DFFE                     u4091:
  8300  00DFFE  EF0F  F070         	goto	l3532
  8301  00E002                     u4090:
  8302  00E002  0E00               	movlw	0
  8303  00E004  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8304  00E006  0E00               	movlw	0
  8305  00E008  6E12               	movwf	___fldiv@new_exp^0,c
  8306  00E00A  0E00               	movlw	0
  8307  00E00C  6E01               	movwf	___fldiv@b^0,c
  8308  00E00E  0E00               	movlw	0
  8309  00E010  6E02               	movwf	(___fldiv@b+1)^0,c
  8310  00E012  0E00               	movlw	0
  8311  00E014  6E03               	movwf	(___fldiv@b+2)^0,c
  8312  00E016  0E00               	movlw	0
  8313  00E018  6E04               	movwf	(___fldiv@b+3)^0,c
  8314  00E01A  0E00               	movlw	0
  8315  00E01C  6E11               	movwf	___fldiv@sign^0,c
  8316  00E01E                     l3532:
  8317  00E01E  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  8318  00E022  A018               	btfss	___fldiv@bexp^0,0,c
  8319  00E024  EF16  F070         	goto	u4101
  8320  00E028  EF18  F070         	goto	u4100
  8321  00E02C                     u4101:
  8322  00E02C  EF1B  F070         	goto	l3538
  8323  00E030                     u4100:
  8324  00E030  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8325  00E032  EF1C  F070         	goto	l3540
  8326  00E036                     l3538:
  8327  00E036  9E03               	bcf	(___fldiv@b+2)^0,7,c
  8328  00E038                     l3540:
  8329  00E038  90D8               	bcf	status,0,c
  8330  00E03A  3018               	rrcf	___fldiv@bexp^0,w,c
  8331  00E03C  6E04               	movwf	(___fldiv@b+3)^0,c
  8332  00E03E  EFD2  F06E         	goto	l3454
  8333  00E042                     l715:
  8334  00E042  0012               	return		;funcret
  8335  00E044                     __end_of___fldiv:
  8336                           	callstack 0
  8337                           
  8338 ;; *************** function ___awmod *****************
  8339 ;; Defined at:
  8340 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  8341 ;; Parameters:    Size  Location     Type
  8342 ;;  dividend        2    0[COMRAM] int 
  8343 ;;  divisor         2    2[COMRAM] int 
  8344 ;; Auto vars:     Size  Location     Type
  8345 ;;  sign            1    5[COMRAM] unsigned char 
  8346 ;;  counter         1    4[COMRAM] unsigned char 
  8347 ;; Return value:  Size  Location     Type
  8348 ;;                  2    0[COMRAM] int 
  8349 ;; Registers used:
  8350 ;;		wreg, status,2, status,0
  8351 ;; Tracked objects:
  8352 ;;		On entry : 0/0
  8353 ;;		On exit  : 0/0
  8354 ;;		Unchanged: 0/0
  8355 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  8356 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8357 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8359 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8360 ;;Total ram usage:        6 bytes
  8361 ;; Hardware stack levels used: 1
  8362 ;; This function calls:
  8363 ;;		Nothing
  8364 ;; This function is called by:
  8365 ;;		_efgtoa
  8366 ;; This function uses a non-reentrant model
  8367 ;;
  8368                           
  8369                           	psect	text23
  8370  00C6CE                     __ptext23:
  8371                           	callstack 0
  8372  00C6CE                     ___awmod:
  8373                           	callstack 26
  8374  00C6CE  0E00               	movlw	0
  8375  00C6D0  6E06               	movwf	___awmod@sign^0,c
  8376  00C6D2  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  8377  00C6D4  EF70  F063         	goto	u4360
  8378  00C6D8  EF6E  F063         	goto	u4361
  8379  00C6DC                     u4361:
  8380  00C6DC  EF76  F063         	goto	l3736
  8381  00C6E0                     u4360:
  8382  00C6E0  6C01               	negf	___awmod@dividend^0,c
  8383  00C6E2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8384  00C6E4  B0D8               	btfsc	status,0,c
  8385  00C6E6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8386  00C6E8  0E01               	movlw	1
  8387  00C6EA  6E06               	movwf	___awmod@sign^0,c
  8388  00C6EC                     l3736:
  8389  00C6EC  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  8390  00C6EE  EF7D  F063         	goto	u4370
  8391  00C6F2  EF7B  F063         	goto	u4371
  8392  00C6F6                     u4371:
  8393  00C6F6  EF81  F063         	goto	l3740
  8394  00C6FA                     u4370:
  8395  00C6FA  6C03               	negf	___awmod@divisor^0,c
  8396  00C6FC  1E04               	comf	(___awmod@divisor+1)^0,f,c
  8397  00C6FE  B0D8               	btfsc	status,0,c
  8398  00C700  2A04               	incf	(___awmod@divisor+1)^0,f,c
  8399  00C702                     l3740:
  8400  00C702  5003               	movf	___awmod@divisor^0,w,c
  8401  00C704  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  8402  00C706  B4D8               	btfsc	status,2,c
  8403  00C708  EF88  F063         	goto	u4381
  8404  00C70C  EF8A  F063         	goto	u4380
  8405  00C710                     u4381:
  8406  00C710  EFAE  F063         	goto	l3756
  8407  00C714                     u4380:
  8408  00C714  0E01               	movlw	1
  8409  00C716  6E05               	movwf	___awmod@counter^0,c
  8410  00C718  EF92  F063         	goto	l3746
  8411  00C71C                     l3744:
  8412  00C71C  90D8               	bcf	status,0,c
  8413  00C71E  3603               	rlcf	___awmod@divisor^0,f,c
  8414  00C720  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  8415  00C722  2A05               	incf	___awmod@counter^0,f,c
  8416  00C724                     l3746:
  8417  00C724  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  8418  00C726  EF97  F063         	goto	u4391
  8419  00C72A  EF99  F063         	goto	u4390
  8420  00C72E                     u4391:
  8421  00C72E  EF8E  F063         	goto	l3744
  8422  00C732                     u4390:
  8423  00C732                     l3748:
  8424  00C732  5003               	movf	___awmod@divisor^0,w,c
  8425  00C734  5C01               	subwf	___awmod@dividend^0,w,c
  8426  00C736  5004               	movf	(___awmod@divisor+1)^0,w,c
  8427  00C738  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  8428  00C73A  A0D8               	btfss	status,0,c
  8429  00C73C  EFA2  F063         	goto	u4401
  8430  00C740  EFA4  F063         	goto	u4400
  8431  00C744                     u4401:
  8432  00C744  EFA8  F063         	goto	l3752
  8433  00C748                     u4400:
  8434  00C748  5003               	movf	___awmod@divisor^0,w,c
  8435  00C74A  5E01               	subwf	___awmod@dividend^0,f,c
  8436  00C74C  5004               	movf	(___awmod@divisor+1)^0,w,c
  8437  00C74E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  8438  00C750                     l3752:
  8439  00C750  90D8               	bcf	status,0,c
  8440  00C752  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  8441  00C754  3203               	rrcf	___awmod@divisor^0,f,c
  8442  00C756  2E05               	decfsz	___awmod@counter^0,f,c
  8443  00C758  EF99  F063         	goto	l3748
  8444  00C75C                     l3756:
  8445  00C75C  5006               	movf	___awmod@sign^0,w,c
  8446  00C75E  B4D8               	btfsc	status,2,c
  8447  00C760  EFB4  F063         	goto	u4411
  8448  00C764  EFB6  F063         	goto	u4410
  8449  00C768                     u4411:
  8450  00C768  EFBA  F063         	goto	l3760
  8451  00C76C                     u4410:
  8452  00C76C  6C01               	negf	___awmod@dividend^0,c
  8453  00C76E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8454  00C770  B0D8               	btfsc	status,0,c
  8455  00C772  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8456  00C774                     l3760:
  8457  00C774  C001  F001         	movff	___awmod@dividend,?___awmod
  8458  00C778  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  8459  00C77C  0012               	return		;funcret
  8460  00C77E                     __end_of___awmod:
  8461                           	callstack 0
  8462                           
  8463 ;; *************** function ___awdiv *****************
  8464 ;; Defined at:
  8465 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  8466 ;; Parameters:    Size  Location     Type
  8467 ;;  dividend        2    0[COMRAM] int 
  8468 ;;  divisor         2    2[COMRAM] int 
  8469 ;; Auto vars:     Size  Location     Type
  8470 ;;  quotient        2    6[COMRAM] int 
  8471 ;;  sign            1    5[COMRAM] unsigned char 
  8472 ;;  counter         1    4[COMRAM] unsigned char 
  8473 ;; Return value:  Size  Location     Type
  8474 ;;                  2    0[COMRAM] int 
  8475 ;; Registers used:
  8476 ;;		wreg, status,2, status,0
  8477 ;; Tracked objects:
  8478 ;;		On entry : 0/0
  8479 ;;		On exit  : 0/0
  8480 ;;		Unchanged: 0/0
  8481 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  8482 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8483 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8485 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8486 ;;Total ram usage:        8 bytes
  8487 ;; Hardware stack levels used: 1
  8488 ;; This function calls:
  8489 ;;		Nothing
  8490 ;; This function is called by:
  8491 ;;		_efgtoa
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495                           	psect	text24
  8496  00C840                     __ptext24:
  8497                           	callstack 0
  8498  00C840                     ___awdiv:
  8499                           	callstack 26
  8500  00C840  0E00               	movlw	0
  8501  00C842  6E06               	movwf	___awdiv@sign^0,c
  8502  00C844  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  8503  00C846  EF29  F064         	goto	u4300
  8504  00C84A  EF27  F064         	goto	u4301
  8505  00C84E                     u4301:
  8506  00C84E  EF2F  F064         	goto	l3692
  8507  00C852                     u4300:
  8508  00C852  6C03               	negf	___awdiv@divisor^0,c
  8509  00C854  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  8510  00C856  B0D8               	btfsc	status,0,c
  8511  00C858  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  8512  00C85A  0E01               	movlw	1
  8513  00C85C  6E06               	movwf	___awdiv@sign^0,c
  8514  00C85E                     l3692:
  8515  00C85E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  8516  00C860  EF36  F064         	goto	u4310
  8517  00C864  EF34  F064         	goto	u4311
  8518  00C868                     u4311:
  8519  00C868  EF3C  F064         	goto	l3698
  8520  00C86C                     u4310:
  8521  00C86C  6C01               	negf	___awdiv@dividend^0,c
  8522  00C86E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  8523  00C870  B0D8               	btfsc	status,0,c
  8524  00C872  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  8525  00C874  0E01               	movlw	1
  8526  00C876  1A06               	xorwf	___awdiv@sign^0,f,c
  8527  00C878                     l3698:
  8528  00C878  0E00               	movlw	0
  8529  00C87A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  8530  00C87C  0E00               	movlw	0
  8531  00C87E  6E07               	movwf	___awdiv@quotient^0,c
  8532  00C880  5003               	movf	___awdiv@divisor^0,w,c
  8533  00C882  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  8534  00C884  B4D8               	btfsc	status,2,c
  8535  00C886  EF47  F064         	goto	u4321
  8536  00C88A  EF49  F064         	goto	u4320
  8537  00C88E                     u4321:
  8538  00C88E  EF71  F064         	goto	l3720
  8539  00C892                     u4320:
  8540  00C892  0E01               	movlw	1
  8541  00C894  6E05               	movwf	___awdiv@counter^0,c
  8542  00C896  EF51  F064         	goto	l3706
  8543  00C89A                     l3704:
  8544  00C89A  90D8               	bcf	status,0,c
  8545  00C89C  3603               	rlcf	___awdiv@divisor^0,f,c
  8546  00C89E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  8547  00C8A0  2A05               	incf	___awdiv@counter^0,f,c
  8548  00C8A2                     l3706:
  8549  00C8A2  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  8550  00C8A4  EF56  F064         	goto	u4331
  8551  00C8A8  EF58  F064         	goto	u4330
  8552  00C8AC                     u4331:
  8553  00C8AC  EF4D  F064         	goto	l3704
  8554  00C8B0                     u4330:
  8555  00C8B0                     l3708:
  8556  00C8B0  90D8               	bcf	status,0,c
  8557  00C8B2  3607               	rlcf	___awdiv@quotient^0,f,c
  8558  00C8B4  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  8559  00C8B6  5003               	movf	___awdiv@divisor^0,w,c
  8560  00C8B8  5C01               	subwf	___awdiv@dividend^0,w,c
  8561  00C8BA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8562  00C8BC  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8563  00C8BE  A0D8               	btfss	status,0,c
  8564  00C8C0  EF64  F064         	goto	u4341
  8565  00C8C4  EF66  F064         	goto	u4340
  8566  00C8C8                     u4341:
  8567  00C8C8  EF6B  F064         	goto	l3716
  8568  00C8CC                     u4340:
  8569  00C8CC  5003               	movf	___awdiv@divisor^0,w,c
  8570  00C8CE  5E01               	subwf	___awdiv@dividend^0,f,c
  8571  00C8D0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8572  00C8D2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8573  00C8D4  8007               	bsf	___awdiv@quotient^0,0,c
  8574  00C8D6                     l3716:
  8575  00C8D6  90D8               	bcf	status,0,c
  8576  00C8D8  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8577  00C8DA  3203               	rrcf	___awdiv@divisor^0,f,c
  8578  00C8DC  2E05               	decfsz	___awdiv@counter^0,f,c
  8579  00C8DE  EF58  F064         	goto	l3708
  8580  00C8E2                     l3720:
  8581  00C8E2  5006               	movf	___awdiv@sign^0,w,c
  8582  00C8E4  B4D8               	btfsc	status,2,c
  8583  00C8E6  EF77  F064         	goto	u4351
  8584  00C8EA  EF79  F064         	goto	u4350
  8585  00C8EE                     u4351:
  8586  00C8EE  EF7D  F064         	goto	l3724
  8587  00C8F2                     u4350:
  8588  00C8F2  6C07               	negf	___awdiv@quotient^0,c
  8589  00C8F4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8590  00C8F6  B0D8               	btfsc	status,0,c
  8591  00C8F8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8592  00C8FA                     l3724:
  8593  00C8FA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8594  00C8FE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8595  00C902  0012               	return		;funcret
  8596  00C904                     __end_of___awdiv:
  8597                           	callstack 0
  8598                           
  8599 ;; *************** function _dtoa *****************
  8600 ;; Defined at:
  8601 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8602 ;; Parameters:    Size  Location     Type
  8603 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8604 ;;		 -> sprintf@f(6), 
  8605 ;;  d               8   29[COMRAM] long long 
  8606 ;; Auto vars:     Size  Location     Type
  8607 ;;  n               8   53[COMRAM] long long 
  8608 ;;  i               2   61[COMRAM] int 
  8609 ;;  s               2   51[COMRAM] int 
  8610 ;;  w               2   49[COMRAM] int 
  8611 ;;  p               2   47[COMRAM] int 
  8612 ;; Return value:  Size  Location     Type
  8613 ;;                  2   27[COMRAM] int 
  8614 ;; Registers used:
  8615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8616 ;; Tracked objects:
  8617 ;;		On entry : 0/0
  8618 ;;		On exit  : 0/0
  8619 ;;		Unchanged: 0/0
  8620 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  8621 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8622 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8623 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8624 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8625 ;;Total ram usage:       36 bytes
  8626 ;; Hardware stack levels used: 1
  8627 ;; Hardware stack levels required when called: 4
  8628 ;; This function calls:
  8629 ;;		___aodiv
  8630 ;;		___aomod
  8631 ;;		_abs
  8632 ;;		_pad
  8633 ;; This function is called by:
  8634 ;;		_vfpfcnvrt
  8635 ;; This function uses a non-reentrant model
  8636 ;;
  8637                           
  8638                           	psect	text25
  8639  00D9CA                     __ptext25:
  8640                           	callstack 0
  8641  00D9CA                     _dtoa:
  8642                           	callstack 23
  8643  00D9CA                     
  8644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  8645  00D9CA  C01E  F036         	movff	dtoa@d,dtoa@n
  8646  00D9CE  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8647  00D9D2  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8648  00D9D6  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8649  00D9DA  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8650  00D9DE  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8651  00D9E2  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8652  00D9E6  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8653  00D9EA                     
  8654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  8655  00D9EA  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  8656  00D9EC  EFFA  F06C         	goto	u4991
  8657  00D9F0  EFFD  F06C         	goto	u4990
  8658  00D9F4                     u4991:
  8659  00D9F4  0E01               	movlw	1
  8660  00D9F6  EFFE  F06C         	goto	u5000
  8661  00D9FA                     u4990:
  8662  00D9FA  0E00               	movlw	0
  8663  00D9FC                     u5000:
  8664  00D9FC  6E34               	movwf	dtoa@s^0,c
  8665  00D9FE  6A35               	clrf	(dtoa@s+1)^0,c
  8666                           
  8667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  8668  00DA00  5034               	movf	dtoa@s^0,w,c
  8669  00DA02  1035               	iorwf	(dtoa@s+1)^0,w,c
  8670  00DA04  B4D8               	btfsc	status,2,c
  8671  00DA06  EF07  F06D         	goto	u5011
  8672  00DA0A  EF09  F06D         	goto	u5010
  8673  00DA0E                     u5011:
  8674  00DA0E  EF19  F06D         	goto	l4008
  8675  00DA12                     u5010:
  8676  00DA12                     
  8677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  8678  00DA12  1E3D               	comf	(dtoa@n+7)^0,f,c
  8679  00DA14  1E3C               	comf	(dtoa@n+6)^0,f,c
  8680  00DA16  1E3B               	comf	(dtoa@n+5)^0,f,c
  8681  00DA18  1E3A               	comf	(dtoa@n+4)^0,f,c
  8682  00DA1A  1E39               	comf	(dtoa@n+3)^0,f,c
  8683  00DA1C  1E38               	comf	(dtoa@n+2)^0,f,c
  8684  00DA1E  1E37               	comf	(dtoa@n+1)^0,f,c
  8685  00DA20  6C36               	negf	dtoa@n^0,c
  8686  00DA22  0E00               	movlw	0
  8687  00DA24  2237               	addwfc	(dtoa@n+1)^0,f,c
  8688  00DA26  2238               	addwfc	(dtoa@n+2)^0,f,c
  8689  00DA28  2239               	addwfc	(dtoa@n+3)^0,f,c
  8690  00DA2A  223A               	addwfc	(dtoa@n+4)^0,f,c
  8691  00DA2C  223B               	addwfc	(dtoa@n+5)^0,f,c
  8692  00DA2E  223C               	addwfc	(dtoa@n+6)^0,f,c
  8693  00DA30  223D               	addwfc	(dtoa@n+7)^0,f,c
  8694  00DA32                     l4008:
  8695                           
  8696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  8697  00DA32  0100               	movlb	0	; () banked
  8698  00DA34  BFFE               	btfsc	(_prec+1)& (0+255),7,b
  8699  00DA36  EF1F  F06D         	goto	u5021
  8700  00DA3A  EF21  F06D         	goto	u5020
  8701  00DA3E                     u5021:
  8702  00DA3E  EF22  F06D         	goto	l4012
  8703  00DA42                     u5020:
  8704  00DA42                     
  8705                           ; BSR set to: 0
  8706                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  8707  00DA42  927C               	bcf	_flags^0,1,c
  8708  00DA44                     l4012:
  8709                           
  8710                           ; BSR set to: 0
  8711                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  8712  00DA44  BFFE               	btfsc	(_prec+1)& (0+255),7,b
  8713  00DA46  EF2F  F06D         	goto	u5030
  8714  00DA4A  51FE               	movf	(_prec+1)& (0+255),w,b
  8715  00DA4C  E106               	bnz	u5031
  8716  00DA4E  05FD               	decf	_prec& (0+255),w,b
  8717  00DA50  B0D8               	btfsc	status,0,c
  8718  00DA52  EF2D  F06D         	goto	u5031
  8719  00DA56  EF2F  F06D         	goto	u5030
  8720  00DA5A                     u5031:
  8721  00DA5A  EF35  F06D         	goto	l885
  8722  00DA5E                     u5030:
  8723  00DA5E                     
  8724                           ; BSR set to: 0
  8725  00DA5E  0E00               	movlw	0
  8726  00DA60  6E31               	movwf	(dtoa@p+1)^0,c
  8727  00DA62  0E01               	movlw	1
  8728  00DA64  6E30               	movwf	dtoa@p^0,c
  8729  00DA66  EF39  F06D         	goto	l887
  8730  00DA6A                     l885:
  8731                           
  8732                           ; BSR set to: 0
  8733  00DA6A  C0FD  F030         	movff	_prec,dtoa@p
  8734  00DA6E  C0FE  F031         	movff	_prec+1,dtoa@p+1
  8735  00DA72                     l887:
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  8739  00DA72  C0FB  F032         	movff	_width,dtoa@w
  8740  00DA76  C0FC  F033         	movff	_width+1,dtoa@w+1
  8741  00DA7A                     
  8742                           ; BSR set to: 0
  8743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  8744  00DA7A  5034               	movf	dtoa@s^0,w,c
  8745  00DA7C  1035               	iorwf	(dtoa@s+1)^0,w,c
  8746  00DA7E  A4D8               	btfss	status,2,c
  8747  00DA80  EF44  F06D         	goto	u5041
  8748  00DA84  EF46  F06D         	goto	u5040
  8749  00DA88                     u5041:
  8750  00DA88  EF4D  F06D         	goto	l4020
  8751  00DA8C                     u5040:
  8752  00DA8C                     
  8753                           ; BSR set to: 0
  8754  00DA8C  A47C               	btfss	_flags^0,2,c
  8755  00DA8E  EF4B  F06D         	goto	u5051
  8756  00DA92  EF4D  F06D         	goto	u5050
  8757  00DA96                     u5051:
  8758  00DA96  EF50  F06D         	goto	l4022
  8759  00DA9A                     u5050:
  8760  00DA9A                     l4020:
  8761                           
  8762                           ; BSR set to: 0
  8763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  8764  00DA9A  0632               	decf	dtoa@w^0,f,c
  8765  00DA9C  A0D8               	btfss	status,0,c
  8766  00DA9E  0633               	decf	(dtoa@w+1)^0,f,c
  8767  00DAA0                     l4022:
  8768                           
  8769                           ; BSR set to: 0
  8770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  8771  00DAA0  0E00               	movlw	0
  8772  00DAA2  6E3F               	movwf	(dtoa@i+1)^0,c
  8773  00DAA4  0E4F               	movlw	79
  8774  00DAA6  6E3E               	movwf	dtoa@i^0,c
  8775  00DAA8                     
  8776                           ; BSR set to: 0
  8777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  8778  00DAA8  0E00               	movlw	0
  8779  00DAAA  0101               	movlb	1	; () banked
  8780  00DAAC  6F4F               	movwf	(_dbuf+79)& (0+255),b
  8781                           
  8782                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8783  00DAAE  EFD5  F06D         	goto	l4036
  8784  00DAB2                     l4026:
  8785                           
  8786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  8787  00DAB2  063E               	decf	dtoa@i^0,f,c
  8788  00DAB4  A0D8               	btfss	status,0,c
  8789  00DAB6  063F               	decf	(dtoa@i+1)^0,f,c
  8790  00DAB8                     
  8791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8792  00DAB8  0E00               	movlw	low _dbuf
  8793  00DABA  243E               	addwf	dtoa@i^0,w,c
  8794  00DABC  6ED9               	movwf	fsr2l,c
  8795  00DABE  0E01               	movlw	high _dbuf
  8796  00DAC0  203F               	addwfc	(dtoa@i+1)^0,w,c
  8797  00DAC2  6EDA               	movwf	fsr2h,c
  8798  00DAC4  C036  F001         	movff	dtoa@n,___aomod@dividend
  8799  00DAC8  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8800  00DACC  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8801  00DAD0  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8802  00DAD4  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8803  00DAD8  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8804  00DADC  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8805  00DAE0  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8806  00DAE4  0E0A               	movlw	10
  8807  00DAE6  6E09               	movwf	___aomod@divisor^0,c
  8808  00DAE8  0E00               	movlw	0
  8809  00DAEA  6E0A               	movwf	(___aomod@divisor+1)^0,c
  8810  00DAEC  0E00               	movlw	0
  8811  00DAEE  6E0B               	movwf	(___aomod@divisor+2)^0,c
  8812  00DAF0  0E00               	movlw	0
  8813  00DAF2  6E0C               	movwf	(___aomod@divisor+3)^0,c
  8814  00DAF4  0E00               	movlw	0
  8815  00DAF6  6E0D               	movwf	(___aomod@divisor+4)^0,c
  8816  00DAF8  0E00               	movlw	0
  8817  00DAFA  6E0E               	movwf	(___aomod@divisor+5)^0,c
  8818  00DAFC  0E00               	movlw	0
  8819  00DAFE  6E0F               	movwf	(___aomod@divisor+6)^0,c
  8820  00DB00  0E00               	movlw	0
  8821  00DB02  6E10               	movwf	(___aomod@divisor+7)^0,c
  8822  00DB04  EC66  F067         	call	___aomod	;wreg free
  8823  00DB08  C001  F026         	movff	?___aomod,??_dtoa
  8824  00DB0C  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8825  00DB10  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8826  00DB14  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8827  00DB18  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8828  00DB1C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8829  00DB20  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8830  00DB24  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8831  00DB28  C026  F013         	movff	??_dtoa,abs@a
  8832  00DB2C  C028  F014         	movff	??_dtoa+2,abs@a+1
  8833  00DB30  EC4A  F061         	call	_abs	;wreg free
  8834  00DB34  5013               	movf	?_abs^0,w,c
  8835  00DB36  0F30               	addlw	48
  8836  00DB38  6EDF               	movwf	indf2,c
  8837  00DB3A                     
  8838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  8839  00DB3A  0630               	decf	dtoa@p^0,f,c
  8840  00DB3C  A0D8               	btfss	status,0,c
  8841  00DB3E  0631               	decf	(dtoa@p+1)^0,f,c
  8842  00DB40                     
  8843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  8844  00DB40  0632               	decf	dtoa@w^0,f,c
  8845  00DB42  A0D8               	btfss	status,0,c
  8846  00DB44  0633               	decf	(dtoa@w+1)^0,f,c
  8847  00DB46                     
  8848                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8849  00DB46  C036  F001         	movff	dtoa@n,___aodiv@dividend
  8850  00DB4A  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  8851  00DB4E  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  8852  00DB52  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  8853  00DB56  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  8854  00DB5A  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  8855  00DB5E  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  8856  00DB62  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  8857  00DB66  0E0A               	movlw	10
  8858  00DB68  6E09               	movwf	___aodiv@divisor^0,c
  8859  00DB6A  0E00               	movlw	0
  8860  00DB6C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  8861  00DB6E  0E00               	movlw	0
  8862  00DB70  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  8863  00DB72  0E00               	movlw	0
  8864  00DB74  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  8865  00DB76  0E00               	movlw	0
  8866  00DB78  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  8867  00DB7A  0E00               	movlw	0
  8868  00DB7C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  8869  00DB7E  0E00               	movlw	0
  8870  00DB80  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  8871  00DB82  0E00               	movlw	0
  8872  00DB84  6E10               	movwf	(___aodiv@divisor+7)^0,c
  8873  00DB86  EC18  F068         	call	___aodiv	;wreg free
  8874  00DB8A  C001  F036         	movff	?___aodiv,dtoa@n
  8875  00DB8E  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  8876  00DB92  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  8877  00DB96  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  8878  00DB9A  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  8879  00DB9E  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  8880  00DBA2  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  8881  00DBA6  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  8882  00DBAA                     l4036:
  8883                           
  8884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8885  00DBAA  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  8886  00DBAC  EFE0  F06D         	goto	u5061
  8887  00DBB0  503F               	movf	(dtoa@i+1)^0,w,c
  8888  00DBB2  E108               	bnz	u5060
  8889  00DBB4  043E               	decf	dtoa@i^0,w,c
  8890  00DBB6  A0D8               	btfss	status,0,c
  8891  00DBB8  EFE0  F06D         	goto	u5061
  8892  00DBBC  EFE2  F06D         	goto	u5060
  8893  00DBC0                     u5061:
  8894  00DBC0  EF12  F06E         	goto	l4046
  8895  00DBC4                     u5060:
  8896  00DBC4  5036               	movf	dtoa@n^0,w,c
  8897  00DBC6  1037               	iorwf	(dtoa@n+1)^0,w,c
  8898  00DBC8  1038               	iorwf	(dtoa@n+2)^0,w,c
  8899  00DBCA  1039               	iorwf	(dtoa@n+3)^0,w,c
  8900  00DBCC  103A               	iorwf	(dtoa@n+4)^0,w,c
  8901  00DBCE  103B               	iorwf	(dtoa@n+5)^0,w,c
  8902  00DBD0  103C               	iorwf	(dtoa@n+6)^0,w,c
  8903  00DBD2  103D               	iorwf	(dtoa@n+7)^0,w,c
  8904  00DBD4  A4D8               	btfss	status,2,c
  8905  00DBD6  EFEF  F06D         	goto	u5071
  8906  00DBDA  EFF1  F06D         	goto	u5070
  8907  00DBDE                     u5071:
  8908  00DBDE  EF59  F06D         	goto	l4026
  8909  00DBE2                     u5070:
  8910  00DBE2  BE31               	btfsc	(dtoa@p+1)^0,7,c
  8911  00DBE4  EFFE  F06D         	goto	u5080
  8912  00DBE8  5031               	movf	(dtoa@p+1)^0,w,c
  8913  00DBEA  E106               	bnz	u5081
  8914  00DBEC  0430               	decf	dtoa@p^0,w,c
  8915  00DBEE  B0D8               	btfsc	status,0,c
  8916  00DBF0  EFFC  F06D         	goto	u5081
  8917  00DBF4  EFFE  F06D         	goto	u5080
  8918  00DBF8                     u5081:
  8919  00DBF8  EF59  F06D         	goto	l4026
  8920  00DBFC                     u5080:
  8921  00DBFC  BE33               	btfsc	(dtoa@w+1)^0,7,c
  8922  00DBFE  EF09  F06E         	goto	u5091
  8923  00DC02  5033               	movf	(dtoa@w+1)^0,w,c
  8924  00DC04  E108               	bnz	u5090
  8925  00DC06  0432               	decf	dtoa@w^0,w,c
  8926  00DC08  A0D8               	btfss	status,0,c
  8927  00DC0A  EF09  F06E         	goto	u5091
  8928  00DC0E  EF0B  F06E         	goto	u5090
  8929  00DC12                     u5091:
  8930  00DC12  EF12  F06E         	goto	l4046
  8931  00DC16                     u5090:
  8932  00DC16  B27C               	btfsc	_flags^0,1,c
  8933  00DC18  EF10  F06E         	goto	u5101
  8934  00DC1C  EF12  F06E         	goto	u5100
  8935  00DC20                     u5101:
  8936  00DC20  EF59  F06D         	goto	l4026
  8937  00DC24                     u5100:
  8938  00DC24                     l4046:
  8939                           
  8940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8941  00DC24  5034               	movf	dtoa@s^0,w,c
  8942  00DC26  1035               	iorwf	(dtoa@s+1)^0,w,c
  8943  00DC28  A4D8               	btfss	status,2,c
  8944  00DC2A  EF19  F06E         	goto	u5111
  8945  00DC2E  EF1B  F06E         	goto	u5110
  8946  00DC32                     u5111:
  8947  00DC32  EF22  F06E         	goto	l4050
  8948  00DC36                     u5110:
  8949  00DC36  A47C               	btfss	_flags^0,2,c
  8950  00DC38  EF20  F06E         	goto	u5121
  8951  00DC3C  EF22  F06E         	goto	u5120
  8952  00DC40                     u5121:
  8953  00DC40  EF40  F06E         	goto	l4060
  8954  00DC44                     u5120:
  8955  00DC44                     l4050:
  8956                           
  8957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  8958  00DC44  063E               	decf	dtoa@i^0,f,c
  8959  00DC46  A0D8               	btfss	status,0,c
  8960  00DC48  063F               	decf	(dtoa@i+1)^0,f,c
  8961  00DC4A                     
  8962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8963  00DC4A  5034               	movf	dtoa@s^0,w,c
  8964  00DC4C  1035               	iorwf	(dtoa@s+1)^0,w,c
  8965  00DC4E  A4D8               	btfss	status,2,c
  8966  00DC50  EF2C  F06E         	goto	u5131
  8967  00DC54  EF2E  F06E         	goto	u5130
  8968  00DC58                     u5131:
  8969  00DC58  EF34  F06E         	goto	l4056
  8970  00DC5C                     u5130:
  8971  00DC5C  0E00               	movlw	0
  8972  00DC5E  6E2F               	movwf	(_dtoa$1027+1)^0,c
  8973  00DC60  0E2B               	movlw	43
  8974  00DC62  6E2E               	movwf	_dtoa$1027^0,c
  8975  00DC64  EF38  F06E         	goto	l4058
  8976  00DC68                     l4056:
  8977  00DC68  0E00               	movlw	0
  8978  00DC6A  6E2F               	movwf	(_dtoa$1027+1)^0,c
  8979  00DC6C  0E2D               	movlw	45
  8980  00DC6E  6E2E               	movwf	_dtoa$1027^0,c
  8981  00DC70                     l4058:
  8982  00DC70  0E00               	movlw	low _dbuf
  8983  00DC72  243E               	addwf	dtoa@i^0,w,c
  8984  00DC74  6ED9               	movwf	fsr2l,c
  8985  00DC76  0E01               	movlw	high _dbuf
  8986  00DC78  203F               	addwfc	(dtoa@i+1)^0,w,c
  8987  00DC7A  6EDA               	movwf	fsr2h,c
  8988  00DC7C  C02E  FFDF         	movff	_dtoa$1027,indf2
  8989  00DC80                     l4060:
  8990                           
  8991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8992  00DC80  C01C  F011         	movff	dtoa@fp,pad@fp
  8993  00DC84  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  8994  00DC88  0E00               	movlw	low _dbuf
  8995  00DC8A  243E               	addwf	dtoa@i^0,w,c
  8996  00DC8C  6E13               	movwf	pad@buf^0,c
  8997  00DC8E  0E01               	movlw	high _dbuf
  8998  00DC90  203F               	addwfc	(dtoa@i+1)^0,w,c
  8999  00DC92  6E14               	movwf	(pad@buf+1)^0,c
  9000  00DC94  C032  F015         	movff	dtoa@w,pad@p
  9001  00DC98  C033  F016         	movff	dtoa@w+1,pad@p+1
  9002  00DC9C  ECBF  F063         	call	_pad	;wreg free
  9003  00DCA0  C011  F01C         	movff	?_pad,?_dtoa
  9004  00DCA4  C012  F01D         	movff	?_pad+1,?_dtoa+1
  9005  00DCA8  0012               	return		;funcret
  9006  00DCAA                     __end_of_dtoa:
  9007                           	callstack 0
  9008                           
  9009 ;; *************** function _pad *****************
  9010 ;; Defined at:
  9011 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9012 ;; Parameters:    Size  Location     Type
  9013 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9014 ;;		 -> sprintf@f(6), 
  9015 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9016 ;;		 -> dbuf(80), 
  9017 ;;  p               2   20[COMRAM] int 
  9018 ;; Auto vars:     Size  Location     Type
  9019 ;;  w               2   25[COMRAM] int 
  9020 ;;  i               2   23[COMRAM] int 
  9021 ;; Return value:  Size  Location     Type
  9022 ;;                  2   16[COMRAM] int 
  9023 ;; Registers used:
  9024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9025 ;; Tracked objects:
  9026 ;;		On entry : 0/0
  9027 ;;		On exit  : 0/0
  9028 ;;		Unchanged: 0/0
  9029 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  9030 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9031 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9032 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9033 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9034 ;;Total ram usage:       11 bytes
  9035 ;; Hardware stack levels used: 1
  9036 ;; Hardware stack levels required when called: 3
  9037 ;; This function calls:
  9038 ;;		_fputc
  9039 ;;		_fputs
  9040 ;;		_strlen
  9041 ;; This function is called by:
  9042 ;;		_dtoa
  9043 ;;		_efgtoa
  9044 ;;		_xtoa
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048                           	psect	text26
  9049  00C77E                     __ptext26:
  9050                           	callstack 0
  9051  00C77E                     _pad:
  9052                           	callstack 23
  9053  00C77E                     
  9054                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9055  00C77E  A07C               	btfss	_flags^0,0,c
  9056  00C780  EFC4  F063         	goto	u4581
  9057  00C784  EFC6  F063         	goto	u4580
  9058  00C788                     u4581:
  9059  00C788  EFD0  F063         	goto	l3858
  9060  00C78C                     u4580:
  9061  00C78C                     
  9062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9063  00C78C  C013  F00A         	movff	pad@buf,fputs@s
  9064  00C790  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9065  00C794  C011  F00C         	movff	pad@fp,fputs@fp
  9066  00C798  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9067  00C79C  EC8B  F061         	call	_fputs	;wreg free
  9068  00C7A0                     l3858:
  9069                           
  9070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9071  00C7A0  BE16               	btfsc	(pad@p+1)^0,7,c
  9072  00C7A2  EFD5  F063         	goto	u4591
  9073  00C7A6  EFD7  F063         	goto	u4590
  9074  00C7AA                     u4591:
  9075  00C7AA  EFDD  F063         	goto	l3862
  9076  00C7AE                     u4590:
  9077  00C7AE  C015  F01A         	movff	pad@p,pad@w
  9078  00C7B2  C016  F01B         	movff	pad@p+1,pad@w+1
  9079  00C7B6  EFE1  F063         	goto	l858
  9080  00C7BA                     l3862:
  9081  00C7BA  0E00               	movlw	0
  9082  00C7BC  6E1B               	movwf	(pad@w+1)^0,c
  9083  00C7BE  0E00               	movlw	0
  9084  00C7C0  6E1A               	movwf	pad@w^0,c
  9085  00C7C2                     l858:
  9086                           
  9087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9088  00C7C2  0E00               	movlw	0
  9089  00C7C4  6E19               	movwf	(pad@i+1)^0,c
  9090  00C7C6  0E00               	movlw	0
  9091  00C7C8  6E18               	movwf	pad@i^0,c
  9092                           
  9093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9094  00C7CA  EFF3  F063         	goto	l3868
  9095  00C7CE                     l3864:
  9096                           
  9097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9098  00C7CE  0E00               	movlw	0
  9099  00C7D0  6E02               	movwf	(fputc@c+1)^0,c
  9100  00C7D2  0E20               	movlw	32
  9101  00C7D4  6E01               	movwf	fputc@c^0,c
  9102  00C7D6  C011  F003         	movff	pad@fp,fputc@fp
  9103  00C7DA  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9104  00C7DE  EC82  F064         	call	_fputc	;wreg free
  9105  00C7E2                     
  9106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9107  00C7E2  4A18               	infsnz	pad@i^0,f,c
  9108  00C7E4  2A19               	incf	(pad@i+1)^0,f,c
  9109  00C7E6                     l3868:
  9110                           
  9111                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9112  00C7E6  501A               	movf	pad@w^0,w,c
  9113  00C7E8  5C18               	subwf	pad@i^0,w,c
  9114  00C7EA  5019               	movf	(pad@i+1)^0,w,c
  9115  00C7EC  0A80               	xorlw	128
  9116  00C7EE  6E17               	movwf	??_pad^0,c
  9117  00C7F0  501B               	movf	(pad@w+1)^0,w,c
  9118  00C7F2  0A80               	xorlw	128
  9119  00C7F4  5817               	subwfb	??_pad^0,w,c
  9120  00C7F6  A0D8               	btfss	status,0,c
  9121  00C7F8  EF00  F064         	goto	u4601
  9122  00C7FC  EF02  F064         	goto	u4600
  9123  00C800                     u4601:
  9124  00C800  EFE7  F063         	goto	l3864
  9125  00C804                     u4600:
  9126  00C804                     
  9127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9128  00C804  B07C               	btfsc	_flags^0,0,c
  9129  00C806  EF07  F064         	goto	u4611
  9130  00C80A  EF09  F064         	goto	u4610
  9131  00C80E                     u4611:
  9132  00C80E  EF13  F064         	goto	l3872
  9133  00C812                     u4610:
  9134  00C812                     
  9135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9136  00C812  C013  F00A         	movff	pad@buf,fputs@s
  9137  00C816  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9138  00C81A  C011  F00C         	movff	pad@fp,fputs@fp
  9139  00C81E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9140  00C822  EC8B  F061         	call	_fputs	;wreg free
  9141  00C826                     l3872:
  9142                           
  9143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  9144  00C826  C013  F001         	movff	pad@buf,strlen@s
  9145  00C82A  C014  F002         	movff	pad@buf+1,strlen@s+1
  9146  00C82E  EC85  F060         	call	_strlen	;wreg free
  9147  00C832  501A               	movf	pad@w^0,w,c
  9148  00C834  2401               	addwf	?_strlen^0,w,c
  9149  00C836  6E11               	movwf	?_pad^0,c
  9150  00C838  501B               	movf	(pad@w+1)^0,w,c
  9151  00C83A  2002               	addwfc	(?_strlen+1)^0,w,c
  9152  00C83C  6E12               	movwf	(?_pad+1)^0,c
  9153  00C83E  0012               	return		;funcret
  9154  00C840                     __end_of_pad:
  9155                           	callstack 0
  9156                           
  9157 ;; *************** function _strlen *****************
  9158 ;; Defined at:
  9159 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9162 ;;		 -> dbuf(80), 
  9163 ;; Auto vars:     Size  Location     Type
  9164 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9165 ;;		 -> dbuf(80), 
  9166 ;; Return value:  Size  Location     Type
  9167 ;;                  2    0[COMRAM] unsigned int 
  9168 ;; Registers used:
  9169 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9170 ;; Tracked objects:
  9171 ;;		On entry : 0/0
  9172 ;;		On exit  : 0/0
  9173 ;;		Unchanged: 0/0
  9174 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  9175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9176 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9178 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9179 ;;Total ram usage:        4 bytes
  9180 ;; Hardware stack levels used: 1
  9181 ;; This function calls:
  9182 ;;		Nothing
  9183 ;; This function is called by:
  9184 ;;		_pad
  9185 ;; This function uses a non-reentrant model
  9186 ;;
  9187                           
  9188                           	psect	text27
  9189  00C10A                     __ptext27:
  9190                           	callstack 0
  9191  00C10A                     _strlen:
  9192                           	callstack 25
  9193  00C10A  C001  F003         	movff	strlen@s,strlen@a
  9194  00C10E  C002  F004         	movff	strlen@s+1,strlen@a+1
  9195  00C112  EF8D  F060         	goto	l3310
  9196  00C116                     l3308:
  9197  00C116  4A01               	infsnz	strlen@s^0,f,c
  9198  00C118  2A02               	incf	(strlen@s+1)^0,f,c
  9199  00C11A                     l3310:
  9200  00C11A  C001  FFD9         	movff	strlen@s,fsr2l
  9201  00C11E  C002  FFDA         	movff	strlen@s+1,fsr2h
  9202  00C122  50DF               	movf	indf2,w,c
  9203  00C124  A4D8               	btfss	status,2,c
  9204  00C126  EF97  F060         	goto	u3701
  9205  00C12A  EF99  F060         	goto	u3700
  9206  00C12E                     u3701:
  9207  00C12E  EF8B  F060         	goto	l3308
  9208  00C132                     u3700:
  9209  00C132  5003               	movf	strlen@a^0,w,c
  9210  00C134  5C01               	subwf	strlen@s^0,w,c
  9211  00C136  6E01               	movwf	?_strlen^0,c
  9212  00C138  5004               	movf	(strlen@a+1)^0,w,c
  9213  00C13A  5802               	subwfb	(strlen@s+1)^0,w,c
  9214  00C13C  6E02               	movwf	(?_strlen+1)^0,c
  9215  00C13E  0012               	return		;funcret
  9216  00C140                     __end_of_strlen:
  9217                           	callstack 0
  9218                           
  9219 ;; *************** function _fputs *****************
  9220 ;; Defined at:
  9221 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  9222 ;; Parameters:    Size  Location     Type
  9223 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9224 ;;		 -> dbuf(80), 
  9225 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9226 ;;		 -> sprintf@f(6), 
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;  i               2   14[COMRAM] int 
  9229 ;;  c               1   13[COMRAM] unsigned char 
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  2    9[COMRAM] int 
  9232 ;; Registers used:
  9233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  9239 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9240 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9242 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9243 ;;Total ram usage:        7 bytes
  9244 ;; Hardware stack levels used: 1
  9245 ;; Hardware stack levels required when called: 2
  9246 ;; This function calls:
  9247 ;;		_fputc
  9248 ;; This function is called by:
  9249 ;;		_pad
  9250 ;; This function uses a non-reentrant model
  9251 ;;
  9252                           
  9253                           	psect	text28
  9254  00C316                     __ptext28:
  9255                           	callstack 0
  9256  00C316                     _fputs:
  9257                           	callstack 23
  9258  00C316  0E00               	movlw	0
  9259  00C318  6E10               	movwf	(fputs@i+1)^0,c
  9260  00C31A  0E00               	movlw	0
  9261  00C31C  6E0F               	movwf	fputs@i^0,c
  9262  00C31E  EF9C  F061         	goto	l3304
  9263  00C322                     l3300:
  9264  00C322  C00E  F001         	movff	fputs@c,fputc@c
  9265  00C326  6A02               	clrf	(fputc@c+1)^0,c
  9266  00C328  C00C  F003         	movff	fputs@fp,fputc@fp
  9267  00C32C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9268  00C330  EC82  F064         	call	_fputc	;wreg free
  9269  00C334  4A0F               	infsnz	fputs@i^0,f,c
  9270  00C336  2A10               	incf	(fputs@i+1)^0,f,c
  9271  00C338                     l3304:
  9272  00C338  500F               	movf	fputs@i^0,w,c
  9273  00C33A  240A               	addwf	fputs@s^0,w,c
  9274  00C33C  6ED9               	movwf	fsr2l,c
  9275  00C33E  5010               	movf	(fputs@i+1)^0,w,c
  9276  00C340  200B               	addwfc	(fputs@s+1)^0,w,c
  9277  00C342  6EDA               	movwf	fsr2h,c
  9278  00C344  50DF               	movf	indf2,w,c
  9279  00C346  6E0E               	movwf	fputs@c^0,c
  9280  00C348  500E               	movf	fputs@c^0,w,c
  9281  00C34A  A4D8               	btfss	status,2,c
  9282  00C34C  EFAA  F061         	goto	u3691
  9283  00C350  EFAC  F061         	goto	u3690
  9284  00C354                     u3691:
  9285  00C354  EF91  F061         	goto	l3300
  9286  00C358                     u3690:
  9287  00C358  0012               	return		;funcret
  9288  00C35A                     __end_of_fputs:
  9289                           	callstack 0
  9290                           
  9291 ;; *************** function _abs *****************
  9292 ;; Defined at:
  9293 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;  a               2   18[COMRAM] int 
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;		None
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  2   18[COMRAM] int 
  9300 ;; Registers used:
  9301 ;;		wreg, status,2, status,0
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/0
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  9307 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9309 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9310 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9311 ;;Total ram usage:        4 bytes
  9312 ;; Hardware stack levels used: 1
  9313 ;; This function calls:
  9314 ;;		Nothing
  9315 ;; This function is called by:
  9316 ;;		_dtoa
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320                           	psect	text29
  9321  00C294                     __ptext29:
  9322                           	callstack 0
  9323  00C294                     _abs:
  9324                           	callstack 26
  9325  00C294  BE14               	btfsc	(abs@a+1)^0,7,c
  9326  00C296  EF57  F061         	goto	u4620
  9327  00C29A  5014               	movf	(abs@a+1)^0,w,c
  9328  00C29C  E106               	bnz	u4621
  9329  00C29E  0413               	decf	abs@a^0,w,c
  9330  00C2A0  B0D8               	btfsc	status,0,c
  9331  00C2A2  EF55  F061         	goto	u4621
  9332  00C2A6  EF57  F061         	goto	u4620
  9333  00C2AA                     u4621:
  9334  00C2AA  EF65  F061         	goto	l1099
  9335  00C2AE                     u4620:
  9336  00C2AE  C013  F015         	movff	abs@a,??_abs
  9337  00C2B2  C014  F016         	movff	abs@a+1,??_abs+1
  9338  00C2B6  1E15               	comf	??_abs^0,f,c
  9339  00C2B8  1E16               	comf	(??_abs+1)^0,f,c
  9340  00C2BA  4A15               	infsnz	??_abs^0,f,c
  9341  00C2BC  2A16               	incf	(??_abs+1)^0,f,c
  9342  00C2BE  C015  F013         	movff	??_abs,?_abs
  9343  00C2C2  C016  F014         	movff	??_abs+1,?_abs+1
  9344  00C2C6  EF69  F061         	goto	l1102
  9345  00C2CA                     l1099:
  9346  00C2CA  C013  F013         	movff	abs@a,?_abs
  9347  00C2CE  C014  F014         	movff	abs@a+1,?_abs+1
  9348  00C2D2                     l1102:
  9349  00C2D2  0012               	return		;funcret
  9350  00C2D4                     __end_of_abs:
  9351                           	callstack 0
  9352                           
  9353 ;; *************** function ___aomod *****************
  9354 ;; Defined at:
  9355 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  9356 ;; Parameters:    Size  Location     Type
  9357 ;;  dividend        8    0[COMRAM] long long 
  9358 ;;  divisor         8    8[COMRAM] long long 
  9359 ;; Auto vars:     Size  Location     Type
  9360 ;;  sign            1   17[COMRAM] unsigned char 
  9361 ;;  counter         1   16[COMRAM] unsigned char 
  9362 ;; Return value:  Size  Location     Type
  9363 ;;                  8    0[COMRAM] long long 
  9364 ;; Registers used:
  9365 ;;		wreg, status,2, status,0
  9366 ;; Tracked objects:
  9367 ;;		On entry : 0/0
  9368 ;;		On exit  : 0/0
  9369 ;;		Unchanged: 0/0
  9370 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  9371 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9372 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9374 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9375 ;;Total ram usage:       18 bytes
  9376 ;; Hardware stack levels used: 1
  9377 ;; This function calls:
  9378 ;;		Nothing
  9379 ;; This function is called by:
  9380 ;;		_dtoa
  9381 ;; This function uses a non-reentrant model
  9382 ;;
  9383                           
  9384                           	psect	text30
  9385  00CECC                     __ptext30:
  9386                           	callstack 0
  9387  00CECC                     ___aomod:
  9388                           	callstack 26
  9389  00CECC  0E00               	movlw	0
  9390  00CECE  6E12               	movwf	___aomod@sign^0,c
  9391  00CED0  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  9392  00CED2  EF6F  F067         	goto	u3820
  9393  00CED6  EF6D  F067         	goto	u3821
  9394  00CEDA                     u3821:
  9395  00CEDA  EF81  F067         	goto	l3382
  9396  00CEDE                     u3820:
  9397  00CEDE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9398  00CEE0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9399  00CEE2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9400  00CEE4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9401  00CEE6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9402  00CEE8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9403  00CEEA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9404  00CEEC  6C01               	negf	___aomod@dividend^0,c
  9405  00CEEE  0E00               	movlw	0
  9406  00CEF0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9407  00CEF2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9408  00CEF4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9409  00CEF6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9410  00CEF8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  9411  00CEFA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  9412  00CEFC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  9413  00CEFE  0E01               	movlw	1
  9414  00CF00  6E12               	movwf	___aomod@sign^0,c
  9415  00CF02                     l3382:
  9416  00CF02  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  9417  00CF04  EF88  F067         	goto	u3830
  9418  00CF08  EF86  F067         	goto	u3831
  9419  00CF0C                     u3831:
  9420  00CF0C  EF98  F067         	goto	l3386
  9421  00CF10                     u3830:
  9422  00CF10  1E10               	comf	(___aomod@divisor+7)^0,f,c
  9423  00CF12  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  9424  00CF14  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  9425  00CF16  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  9426  00CF18  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  9427  00CF1A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  9428  00CF1C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  9429  00CF1E  6C09               	negf	___aomod@divisor^0,c
  9430  00CF20  0E00               	movlw	0
  9431  00CF22  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  9432  00CF24  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  9433  00CF26  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  9434  00CF28  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  9435  00CF2A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  9436  00CF2C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  9437  00CF2E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  9438  00CF30                     l3386:
  9439  00CF30  5009               	movf	___aomod@divisor^0,w,c
  9440  00CF32  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  9441  00CF34  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  9442  00CF36  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  9443  00CF38  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  9444  00CF3A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  9445  00CF3C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  9446  00CF3E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  9447  00CF40  B4D8               	btfsc	status,2,c
  9448  00CF42  EFA5  F067         	goto	u3841
  9449  00CF46  EFA7  F067         	goto	u3840
  9450  00CF4A                     u3841:
  9451  00CF4A  EFEF  F067         	goto	l3402
  9452  00CF4E                     u3840:
  9453  00CF4E  0E01               	movlw	1
  9454  00CF50  6E11               	movwf	___aomod@counter^0,c
  9455  00CF52  EFB5  F067         	goto	l3392
  9456  00CF56                     l3390:
  9457  00CF56  90D8               	bcf	status,0,c
  9458  00CF58  3609               	rlcf	___aomod@divisor^0,f,c
  9459  00CF5A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  9460  00CF5C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  9461  00CF5E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  9462  00CF60  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  9463  00CF62  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  9464  00CF64  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  9465  00CF66  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  9466  00CF68  2A11               	incf	___aomod@counter^0,f,c
  9467  00CF6A                     l3392:
  9468  00CF6A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  9469  00CF6C  EFBA  F067         	goto	u3851
  9470  00CF70  EFBC  F067         	goto	u3850
  9471  00CF74                     u3851:
  9472  00CF74  EFAB  F067         	goto	l3390
  9473  00CF78                     u3850:
  9474  00CF78                     l3394:
  9475  00CF78  5009               	movf	___aomod@divisor^0,w,c
  9476  00CF7A  5C01               	subwf	___aomod@dividend^0,w,c
  9477  00CF7C  500A               	movf	(___aomod@divisor+1)^0,w,c
  9478  00CF7E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  9479  00CF80  500B               	movf	(___aomod@divisor+2)^0,w,c
  9480  00CF82  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  9481  00CF84  500C               	movf	(___aomod@divisor+3)^0,w,c
  9482  00CF86  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  9483  00CF88  500D               	movf	(___aomod@divisor+4)^0,w,c
  9484  00CF8A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  9485  00CF8C  500E               	movf	(___aomod@divisor+5)^0,w,c
  9486  00CF8E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  9487  00CF90  500F               	movf	(___aomod@divisor+6)^0,w,c
  9488  00CF92  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  9489  00CF94  5010               	movf	(___aomod@divisor+7)^0,w,c
  9490  00CF96  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  9491  00CF98  A0D8               	btfss	status,0,c
  9492  00CF9A  EFD1  F067         	goto	u3861
  9493  00CF9E  EFD3  F067         	goto	u3860
  9494  00CFA2                     u3861:
  9495  00CFA2  EFE3  F067         	goto	l3398
  9496  00CFA6                     u3860:
  9497  00CFA6  5009               	movf	___aomod@divisor^0,w,c
  9498  00CFA8  5E01               	subwf	___aomod@dividend^0,f,c
  9499  00CFAA  500A               	movf	(___aomod@divisor+1)^0,w,c
  9500  00CFAC  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  9501  00CFAE  500B               	movf	(___aomod@divisor+2)^0,w,c
  9502  00CFB0  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  9503  00CFB2  500C               	movf	(___aomod@divisor+3)^0,w,c
  9504  00CFB4  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  9505  00CFB6  500D               	movf	(___aomod@divisor+4)^0,w,c
  9506  00CFB8  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  9507  00CFBA  500E               	movf	(___aomod@divisor+5)^0,w,c
  9508  00CFBC  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  9509  00CFBE  500F               	movf	(___aomod@divisor+6)^0,w,c
  9510  00CFC0  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  9511  00CFC2  5010               	movf	(___aomod@divisor+7)^0,w,c
  9512  00CFC4  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  9513  00CFC6                     l3398:
  9514  00CFC6  90D8               	bcf	status,0,c
  9515  00CFC8  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  9516  00CFCA  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  9517  00CFCC  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  9518  00CFCE  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  9519  00CFD0  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  9520  00CFD2  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  9521  00CFD4  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  9522  00CFD6  3209               	rrcf	___aomod@divisor^0,f,c
  9523  00CFD8  2E11               	decfsz	___aomod@counter^0,f,c
  9524  00CFDA  EFBC  F067         	goto	l3394
  9525  00CFDE                     l3402:
  9526  00CFDE  5012               	movf	___aomod@sign^0,w,c
  9527  00CFE0  B4D8               	btfsc	status,2,c
  9528  00CFE2  EFF5  F067         	goto	u3871
  9529  00CFE6  EFF7  F067         	goto	u3870
  9530  00CFEA                     u3871:
  9531  00CFEA  EF07  F068         	goto	l3406
  9532  00CFEE                     u3870:
  9533  00CFEE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9534  00CFF0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9535  00CFF2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9536  00CFF4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9537  00CFF6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9538  00CFF8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9539  00CFFA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9540  00CFFC  6C01               	negf	___aomod@dividend^0,c
  9541  00CFFE  0E00               	movlw	0
  9542  00D000  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9543  00D002  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9544  00D004  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9545  00D006  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9546  00D008  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  9547  00D00A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  9548  00D00C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  9549  00D00E                     l3406:
  9550  00D00E  C001  F001         	movff	___aomod@dividend,?___aomod
  9551  00D012  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  9552  00D016  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  9553  00D01A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  9554  00D01E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  9555  00D022  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  9556  00D026  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  9557  00D02A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  9558  00D02E  0012               	return		;funcret
  9559  00D030                     __end_of___aomod:
  9560                           	callstack 0
  9561                           
  9562 ;; *************** function ___aodiv *****************
  9563 ;; Defined at:
  9564 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  9565 ;; Parameters:    Size  Location     Type
  9566 ;;  dividend        8    0[COMRAM] long long 
  9567 ;;  divisor         8    8[COMRAM] long long 
  9568 ;; Auto vars:     Size  Location     Type
  9569 ;;  quotient        8   18[COMRAM] long long 
  9570 ;;  sign            1   17[COMRAM] unsigned char 
  9571 ;;  counter         1   16[COMRAM] unsigned char 
  9572 ;; Return value:  Size  Location     Type
  9573 ;;                  8    0[COMRAM] long long 
  9574 ;; Registers used:
  9575 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9576 ;; Tracked objects:
  9577 ;;		On entry : 0/0
  9578 ;;		On exit  : 0/0
  9579 ;;		Unchanged: 0/0
  9580 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  9581 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9582 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9584 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9585 ;;Total ram usage:       26 bytes
  9586 ;; Hardware stack levels used: 1
  9587 ;; This function calls:
  9588 ;;		Nothing
  9589 ;; This function is called by:
  9590 ;;		_dtoa
  9591 ;; This function uses a non-reentrant model
  9592 ;;
  9593                           
  9594                           	psect	text31
  9595  00D030                     __ptext31:
  9596                           	callstack 0
  9597  00D030                     ___aodiv:
  9598                           	callstack 26
  9599  00D030  0E00               	movlw	0
  9600  00D032  6E12               	movwf	___aodiv@sign^0,c
  9601  00D034  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  9602  00D036  EF21  F068         	goto	u3750
  9603  00D03A  EF1F  F068         	goto	u3751
  9604  00D03E                     u3751:
  9605  00D03E  EF33  F068         	goto	l3338
  9606  00D042                     u3750:
  9607  00D042  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  9608  00D044  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  9609  00D046  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  9610  00D048  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  9611  00D04A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  9612  00D04C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  9613  00D04E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  9614  00D050  6C09               	negf	___aodiv@divisor^0,c
  9615  00D052  0E00               	movlw	0
  9616  00D054  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  9617  00D056  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  9618  00D058  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  9619  00D05A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  9620  00D05C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  9621  00D05E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  9622  00D060  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  9623  00D062  0E01               	movlw	1
  9624  00D064  6E12               	movwf	___aodiv@sign^0,c
  9625  00D066                     l3338:
  9626  00D066  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  9627  00D068  EF3A  F068         	goto	u3760
  9628  00D06C  EF38  F068         	goto	u3761
  9629  00D070                     u3761:
  9630  00D070  EF4C  F068         	goto	l3344
  9631  00D074                     u3760:
  9632  00D074  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  9633  00D076  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  9634  00D078  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  9635  00D07A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  9636  00D07C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  9637  00D07E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  9638  00D080  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  9639  00D082  6C01               	negf	___aodiv@dividend^0,c
  9640  00D084  0E00               	movlw	0
  9641  00D086  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  9642  00D088  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  9643  00D08A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  9644  00D08C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  9645  00D08E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  9646  00D090  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  9647  00D092  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  9648  00D094  0E01               	movlw	1
  9649  00D096  1A12               	xorwf	___aodiv@sign^0,f,c
  9650  00D098                     l3344:
  9651  00D098  EE20  F013         	lfsr	2,___aodiv@quotient
  9652  00D09C  0E07               	movlw	7
  9653  00D09E                     u3771:
  9654  00D09E  6ADE               	clrf	postinc2,c
  9655  00D0A0  06E8               	decf	wreg,f,c
  9656  00D0A2  E2FD               	bc	u3771
  9657  00D0A4  5009               	movf	___aodiv@divisor^0,w,c
  9658  00D0A6  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  9659  00D0A8  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  9660  00D0AA  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  9661  00D0AC  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  9662  00D0AE  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  9663  00D0B0  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  9664  00D0B2  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  9665  00D0B4  B4D8               	btfsc	status,2,c
  9666  00D0B6  EF5F  F068         	goto	u3781
  9667  00D0BA  EF61  F068         	goto	u3780
  9668  00D0BE                     u3781:
  9669  00D0BE  EFB3  F068         	goto	l3366
  9670  00D0C2                     u3780:
  9671  00D0C2  0E01               	movlw	1
  9672  00D0C4  6E11               	movwf	___aodiv@counter^0,c
  9673  00D0C6  EF6F  F068         	goto	l3352
  9674  00D0CA                     l3350:
  9675  00D0CA  90D8               	bcf	status,0,c
  9676  00D0CC  3609               	rlcf	___aodiv@divisor^0,f,c
  9677  00D0CE  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  9678  00D0D0  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  9679  00D0D2  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  9680  00D0D4  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  9681  00D0D6  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  9682  00D0D8  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  9683  00D0DA  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  9684  00D0DC  2A11               	incf	___aodiv@counter^0,f,c
  9685  00D0DE                     l3352:
  9686  00D0DE  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  9687  00D0E0  EF74  F068         	goto	u3791
  9688  00D0E4  EF76  F068         	goto	u3790
  9689  00D0E8                     u3791:
  9690  00D0E8  EF65  F068         	goto	l3350
  9691  00D0EC                     u3790:
  9692  00D0EC                     l3354:
  9693  00D0EC  90D8               	bcf	status,0,c
  9694  00D0EE  3613               	rlcf	___aodiv@quotient^0,f,c
  9695  00D0F0  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  9696  00D0F2  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  9697  00D0F4  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  9698  00D0F6  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  9699  00D0F8  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  9700  00D0FA  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  9701  00D0FC  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  9702  00D0FE  5009               	movf	___aodiv@divisor^0,w,c
  9703  00D100  5C01               	subwf	___aodiv@dividend^0,w,c
  9704  00D102  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9705  00D104  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  9706  00D106  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9707  00D108  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  9708  00D10A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9709  00D10C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  9710  00D10E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9711  00D110  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  9712  00D112  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9713  00D114  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  9714  00D116  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9715  00D118  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  9716  00D11A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9717  00D11C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  9718  00D11E  A0D8               	btfss	status,0,c
  9719  00D120  EF94  F068         	goto	u3801
  9720  00D124  EF96  F068         	goto	u3800
  9721  00D128                     u3801:
  9722  00D128  EFA7  F068         	goto	l3362
  9723  00D12C                     u3800:
  9724  00D12C  5009               	movf	___aodiv@divisor^0,w,c
  9725  00D12E  5E01               	subwf	___aodiv@dividend^0,f,c
  9726  00D130  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9727  00D132  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  9728  00D134  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9729  00D136  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  9730  00D138  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9731  00D13A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  9732  00D13C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9733  00D13E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  9734  00D140  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9735  00D142  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  9736  00D144  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9737  00D146  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  9738  00D148  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9739  00D14A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  9740  00D14C  8013               	bsf	___aodiv@quotient^0,0,c
  9741  00D14E                     l3362:
  9742  00D14E  90D8               	bcf	status,0,c
  9743  00D150  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  9744  00D152  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  9745  00D154  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  9746  00D156  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  9747  00D158  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  9748  00D15A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  9749  00D15C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  9750  00D15E  3209               	rrcf	___aodiv@divisor^0,f,c
  9751  00D160  2E11               	decfsz	___aodiv@counter^0,f,c
  9752  00D162  EF76  F068         	goto	l3354
  9753  00D166                     l3366:
  9754  00D166  5012               	movf	___aodiv@sign^0,w,c
  9755  00D168  B4D8               	btfsc	status,2,c
  9756  00D16A  EFB9  F068         	goto	u3811
  9757  00D16E  EFBB  F068         	goto	u3810
  9758  00D172                     u3811:
  9759  00D172  EFCB  F068         	goto	l3370
  9760  00D176                     u3810:
  9761  00D176  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  9762  00D178  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  9763  00D17A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  9764  00D17C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  9765  00D17E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  9766  00D180  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  9767  00D182  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  9768  00D184  6C13               	negf	___aodiv@quotient^0,c
  9769  00D186  0E00               	movlw	0
  9770  00D188  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  9771  00D18A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  9772  00D18C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  9773  00D18E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  9774  00D190  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  9775  00D192  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  9776  00D194  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  9777  00D196                     l3370:
  9778  00D196  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9779  00D19A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9780  00D19E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9781  00D1A2  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9782  00D1A6  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9783  00D1AA  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9784  00D1AE  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9785  00D1B2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9786  00D1B6  0012               	return		;funcret
  9787  00D1B8                     __end_of___aodiv:
  9788                           	callstack 0
  9789                           
  9790 ;; *************** function _ctoa *****************
  9791 ;; Defined at:
  9792 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9793 ;; Parameters:    Size  Location     Type
  9794 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  9795 ;;		 -> sprintf@f(6), 
  9796 ;;  c               1   11[COMRAM] unsigned char 
  9797 ;; Auto vars:     Size  Location     Type
  9798 ;;  w               2   15[COMRAM] int 
  9799 ;;  l               2   13[COMRAM] int 
  9800 ;; Return value:  Size  Location     Type
  9801 ;;                  2    9[COMRAM] int 
  9802 ;; Registers used:
  9803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9804 ;; Tracked objects:
  9805 ;;		On entry : 0/0
  9806 ;;		On exit  : 0/0
  9807 ;;		Unchanged: 0/0
  9808 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  9809 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9810 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9811 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9812 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9813 ;;Total ram usage:        8 bytes
  9814 ;; Hardware stack levels used: 1
  9815 ;; Hardware stack levels required when called: 2
  9816 ;; This function calls:
  9817 ;;		_fputc
  9818 ;; This function is called by:
  9819 ;;		_vfpfcnvrt
  9820 ;; This function uses a non-reentrant model
  9821 ;;
  9822                           
  9823                           	psect	text32
  9824  00C9CE                     __ptext32:
  9825                           	callstack 0
  9826  00C9CE                     _ctoa:
  9827                           	callstack 25
  9828  00C9CE                     
  9829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  9830  00C9CE  0100               	movlb	0	; () banked
  9831  00C9D0  51FB               	movf	_width& (0+255),w,b
  9832  00C9D2  11FC               	iorwf	(_width+1)& (0+255),w,b
  9833  00C9D4  A4D8               	btfss	status,2,c
  9834  00C9D6  EFEF  F064         	goto	u4941
  9835  00C9DA  EFF1  F064         	goto	u4940
  9836  00C9DE                     u4941:
  9837  00C9DE  EFF7  F064         	goto	l3978
  9838  00C9E2                     u4940:
  9839  00C9E2                     
  9840                           ; BSR set to: 0
  9841  00C9E2  C0FB  F010         	movff	_width,ctoa@w
  9842  00C9E6  C0FC  F011         	movff	_width+1,ctoa@w+1
  9843  00C9EA  EFFD  F064         	goto	l3980
  9844  00C9EE                     l3978:
  9845                           
  9846                           ; BSR set to: 0
  9847  00C9EE  0EFF               	movlw	255
  9848  00C9F0  25FB               	addwf	_width& (0+255),w,b
  9849  00C9F2  6E10               	movwf	ctoa@w^0,c
  9850  00C9F4  0EFF               	movlw	255
  9851  00C9F6  21FC               	addwfc	(_width+1)& (0+255),w,b
  9852  00C9F8  6E11               	movwf	(ctoa@w+1)^0,c
  9853  00C9FA                     l3980:
  9854                           
  9855                           ; BSR set to: 0
  9856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  9857  00C9FA  A07C               	btfss	_flags^0,0,c
  9858  00C9FC  EF02  F065         	goto	u4951
  9859  00CA00  EF04  F065         	goto	u4950
  9860  00CA04                     u4951:
  9861  00CA04  EF0D  F065         	goto	l3984
  9862  00CA08                     u4950:
  9863  00CA08                     
  9864                           ; BSR set to: 0
  9865                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  9866  00CA08  C00C  F001         	movff	ctoa@c,fputc@c
  9867  00CA0C  6A02               	clrf	(fputc@c+1)^0,c
  9868  00CA0E  C00A  F003         	movff	ctoa@fp,fputc@fp
  9869  00CA12  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  9870  00CA16  EC82  F064         	call	_fputc	;wreg free
  9871  00CA1A                     l3984:
  9872                           
  9873                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  9874  00CA1A  BE11               	btfsc	(ctoa@w+1)^0,7,c
  9875  00CA1C  EF12  F065         	goto	u4961
  9876  00CA20  EF14  F065         	goto	u4960
  9877  00CA24                     u4961:
  9878  00CA24  EF16  F065         	goto	l3988
  9879  00CA28                     u4960:
  9880  00CA28  EF1A  F065         	goto	l874
  9881  00CA2C                     l3988:
  9882  00CA2C  0E00               	movlw	0
  9883  00CA2E  6E11               	movwf	(ctoa@w+1)^0,c
  9884  00CA30  0E00               	movlw	0
  9885  00CA32  6E10               	movwf	ctoa@w^0,c
  9886  00CA34                     l874:
  9887                           
  9888                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  9889  00CA34  0E00               	movlw	0
  9890  00CA36  6E0F               	movwf	(ctoa@l+1)^0,c
  9891  00CA38  0E00               	movlw	0
  9892  00CA3A  6E0E               	movwf	ctoa@l^0,c
  9893                           
  9894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  9895  00CA3C  EF2C  F065         	goto	l3994
  9896  00CA40                     l3990:
  9897                           
  9898                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  9899  00CA40  0E00               	movlw	0
  9900  00CA42  6E02               	movwf	(fputc@c+1)^0,c
  9901  00CA44  0E20               	movlw	32
  9902  00CA46  6E01               	movwf	fputc@c^0,c
  9903  00CA48  C00A  F003         	movff	ctoa@fp,fputc@fp
  9904  00CA4C  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  9905  00CA50  EC82  F064         	call	_fputc	;wreg free
  9906  00CA54                     
  9907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 275:         ++l;
  9908  00CA54  4A0E               	infsnz	ctoa@l^0,f,c
  9909  00CA56  2A0F               	incf	(ctoa@l+1)^0,f,c
  9910  00CA58                     l3994:
  9911                           
  9912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  9913  00CA58  5010               	movf	ctoa@w^0,w,c
  9914  00CA5A  5C0E               	subwf	ctoa@l^0,w,c
  9915  00CA5C  500F               	movf	(ctoa@l+1)^0,w,c
  9916  00CA5E  0A80               	xorlw	128
  9917  00CA60  6E0D               	movwf	??_ctoa^0,c
  9918  00CA62  5011               	movf	(ctoa@w+1)^0,w,c
  9919  00CA64  0A80               	xorlw	128
  9920  00CA66  580D               	subwfb	??_ctoa^0,w,c
  9921  00CA68  A0D8               	btfss	status,0,c
  9922  00CA6A  EF39  F065         	goto	u4971
  9923  00CA6E  EF3B  F065         	goto	u4970
  9924  00CA72                     u4971:
  9925  00CA72  EF20  F065         	goto	l3990
  9926  00CA76                     u4970:
  9927  00CA76                     
  9928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  9929  00CA76  B07C               	btfsc	_flags^0,0,c
  9930  00CA78  EF40  F065         	goto	u4981
  9931  00CA7C  EF42  F065         	goto	u4980
  9932  00CA80                     u4981:
  9933  00CA80  EF4B  F065         	goto	l3998
  9934  00CA84                     u4980:
  9935  00CA84                     
  9936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  9937  00CA84  C00C  F001         	movff	ctoa@c,fputc@c
  9938  00CA88  6A02               	clrf	(fputc@c+1)^0,c
  9939  00CA8A  C00A  F003         	movff	ctoa@fp,fputc@fp
  9940  00CA8E  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  9941  00CA92  EC82  F064         	call	_fputc	;wreg free
  9942  00CA96                     l3998:
  9943                           
  9944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  9945  00CA96  0E01               	movlw	1
  9946  00CA98  240E               	addwf	ctoa@l^0,w,c
  9947  00CA9A  6E0A               	movwf	?_ctoa^0,c
  9948  00CA9C  0E00               	movlw	0
  9949  00CA9E  200F               	addwfc	(ctoa@l+1)^0,w,c
  9950  00CAA0  6E0B               	movwf	(?_ctoa+1)^0,c
  9951  00CAA2  0012               	return		;funcret
  9952  00CAA4                     __end_of_ctoa:
  9953                           	callstack 0
  9954                           
  9955 ;; *************** function _fputc *****************
  9956 ;; Defined at:
  9957 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  9958 ;; Parameters:    Size  Location     Type
  9959 ;;  c               2    0[COMRAM] int 
  9960 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9961 ;;		 -> sprintf@f(6), 
  9962 ;; Auto vars:     Size  Location     Type
  9963 ;;		None
  9964 ;; Return value:  Size  Location     Type
  9965 ;;                  2    0[COMRAM] int 
  9966 ;; Registers used:
  9967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9968 ;; Tracked objects:
  9969 ;;		On entry : 0/0
  9970 ;;		On exit  : 0/0
  9971 ;;		Unchanged: 0/0
  9972 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  9973 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9975 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9976 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9977 ;;Total ram usage:        9 bytes
  9978 ;; Hardware stack levels used: 1
  9979 ;; Hardware stack levels required when called: 1
  9980 ;; This function calls:
  9981 ;;		_putch
  9982 ;; This function is called by:
  9983 ;;		_pad
  9984 ;;		_ctoa
  9985 ;;		_vfpfcnvrt
  9986 ;;		_fputs
  9987 ;; This function uses a non-reentrant model
  9988 ;;
  9989                           
  9990                           	psect	text33
  9991  00C904                     __ptext33:
  9992                           	callstack 0
  9993  00C904                     _fputc:
  9994                           	callstack 23
  9995  00C904  5003               	movf	fputc@fp^0,w,c
  9996  00C906  1004               	iorwf	(fputc@fp+1)^0,w,c
  9997  00C908  B4D8               	btfsc	status,2,c
  9998  00C90A  EF89  F064         	goto	u3261
  9999  00C90E  EF8B  F064         	goto	u3260
 10000  00C912                     u3261:
 10001  00C912  EF94  F064         	goto	l3086
 10002  00C916                     u3260:
 10003  00C916  5003               	movf	fputc@fp^0,w,c
 10004  00C918  1004               	iorwf	(fputc@fp+1)^0,w,c
 10005  00C91A  A4D8               	btfss	status,2,c
 10006  00C91C  EF92  F064         	goto	u3271
 10007  00C920  EF94  F064         	goto	u3270
 10008  00C924                     u3271:
 10009  00C924  EF99  F064         	goto	l3088
 10010  00C928                     u3270:
 10011  00C928                     l3086:
 10012  00C928  5001               	movf	fputc@c^0,w,c
 10013  00C92A  EC18  F060         	call	_putch
 10014  00C92E  EFE6  F064         	goto	l1184
 10015  00C932                     l3088:
 10016  00C932  EE20 F004          	lfsr	2,4
 10017  00C936  5003               	movf	fputc@fp^0,w,c
 10018  00C938  26D9               	addwf	fsr2l,f,c
 10019  00C93A  5004               	movf	(fputc@fp+1)^0,w,c
 10020  00C93C  22DA               	addwfc	fsr2h,f,c
 10021  00C93E  50DE               	movf	postinc2,w,c
 10022  00C940  10DE               	iorwf	postinc2,w,c
 10023  00C942  B4D8               	btfsc	status,2,c
 10024  00C944  EFA6  F064         	goto	u3281
 10025  00C948  EFA8  F064         	goto	u3280
 10026  00C94C                     u3281:
 10027  00C94C  EFC3  F064         	goto	l3092
 10028  00C950                     u3280:
 10029  00C950  EE20 F004          	lfsr	2,4
 10030  00C954  5003               	movf	fputc@fp^0,w,c
 10031  00C956  26D9               	addwf	fsr2l,f,c
 10032  00C958  5004               	movf	(fputc@fp+1)^0,w,c
 10033  00C95A  22DA               	addwfc	fsr2h,f,c
 10034  00C95C  EE10 F002          	lfsr	1,2
 10035  00C960  5003               	movf	fputc@fp^0,w,c
 10036  00C962  26E1               	addwf	fsr1l,f,c
 10037  00C964  5004               	movf	(fputc@fp+1)^0,w,c
 10038  00C966  22E2               	addwfc	fsr1h,f,c
 10039  00C968  50DE               	movf	postinc2,w,c
 10040  00C96A  5CE6               	subwf	postinc1,w,c
 10041  00C96C  50E6               	movf	postinc1,w,c
 10042  00C96E  0A80               	xorlw	128
 10043  00C970  6E09               	movwf	(??_fputc+4)^0,c
 10044  00C972  50DE               	movf	postinc2,w,c
 10045  00C974  0A80               	xorlw	128
 10046  00C976  5809               	subwfb	(??_fputc+4)^0,w,c
 10047  00C978  B0D8               	btfsc	status,0,c
 10048  00C97A  EFC1  F064         	goto	u3291
 10049  00C97E  EFC3  F064         	goto	u3290
 10050  00C982                     u3291:
 10051  00C982  EFE6  F064         	goto	l1184
 10052  00C986                     u3290:
 10053  00C986                     l3092:
 10054  00C986  EE20 F002          	lfsr	2,2
 10055  00C98A  5003               	movf	fputc@fp^0,w,c
 10056  00C98C  26D9               	addwf	fsr2l,f,c
 10057  00C98E  5004               	movf	(fputc@fp+1)^0,w,c
 10058  00C990  22DA               	addwfc	fsr2h,f,c
 10059  00C992  CFDE F005          	movff	postinc2,??_fputc
 10060  00C996  CFDD F006          	movff	postdec2,??_fputc+1
 10061  00C99A  C003  FFD9         	movff	fputc@fp,fsr2l
 10062  00C99E  C004  FFDA         	movff	fputc@fp+1,fsr2h
 10063  00C9A2  CFDE F007          	movff	postinc2,??_fputc+2
 10064  00C9A6  CFDD F008          	movff	postdec2,??_fputc+3
 10065  00C9AA  5005               	movf	??_fputc^0,w,c
 10066  00C9AC  2407               	addwf	(??_fputc+2)^0,w,c
 10067  00C9AE  6ED9               	movwf	fsr2l,c
 10068  00C9B0  5006               	movf	(??_fputc+1)^0,w,c
 10069  00C9B2  2008               	addwfc	(??_fputc+3)^0,w,c
 10070  00C9B4  6EDA               	movwf	fsr2h,c
 10071  00C9B6  C001  FFDF         	movff	fputc@c,indf2
 10072  00C9BA  EE20 F002          	lfsr	2,2
 10073  00C9BE  5003               	movf	fputc@fp^0,w,c
 10074  00C9C0  26D9               	addwf	fsr2l,f,c
 10075  00C9C2  5004               	movf	(fputc@fp+1)^0,w,c
 10076  00C9C4  22DA               	addwfc	fsr2h,f,c
 10077  00C9C6  2ADE               	incf	postinc2,f,c
 10078  00C9C8  0E00               	movlw	0
 10079  00C9CA  22DD               	addwfc	postdec2,f,c
 10080  00C9CC                     l1184:
 10081  00C9CC  0012               	return		;funcret
 10082  00C9CE                     __end_of_fputc:
 10083                           	callstack 0
 10084                           
 10085 ;; *************** function _putch *****************
 10086 ;; Defined at:
 10087 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
 10088 ;; Parameters:    Size  Location     Type
 10089 ;;  c               1    wreg     unsigned char 
 10090 ;; Auto vars:     Size  Location     Type
 10091 ;;  c               1    0[COMRAM] unsigned char 
 10092 ;; Return value:  Size  Location     Type
 10093 ;;                  1    wreg      void 
 10094 ;; Registers used:
 10095 ;;		wreg
 10096 ;; Tracked objects:
 10097 ;;		On entry : 0/0
 10098 ;;		On exit  : 0/0
 10099 ;;		Unchanged: 0/0
 10100 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10105 ;;Total ram usage:        0 bytes
 10106 ;; Hardware stack levels used: 1
 10107 ;; This function calls:
 10108 ;;		Nothing
 10109 ;; This function is called by:
 10110 ;;		_fputc
 10111 ;; This function uses a non-reentrant model
 10112 ;;
 10113                           
 10114                           	psect	text34
 10115  00C030                     __ptext34:
 10116                           	callstack 0
 10117  00C030                     _putch:
 10118                           	callstack 23
 10119  00C030  0012               	return		;funcret
 10120  00C032                     __end_of_putch:
 10121                           	callstack 0
 10122                           
 10123 ;; *************** function _atoi *****************
 10124 ;; Defined at:
 10125 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 10126 ;; Parameters:    Size  Location     Type
 10127 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10128 ;;		 -> STR_13(3), STR_12(20), STR_11(27), STR_10(34), 
 10129 ;;		 -> STR_9(8), STR_8(14), STR_7(41), STR_6(42), 
 10130 ;;		 -> STR_5(33), STR_4(41), STR_3(38), STR_2(33), 
 10131 ;; Auto vars:     Size  Location     Type
 10132 ;;  n               2   20[COMRAM] int 
 10133 ;;  neg             2   13[COMRAM] int 
 10134 ;; Return value:  Size  Location     Type
 10135 ;;                  2    7[COMRAM] int 
 10136 ;; Registers used:
 10137 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10138 ;; Tracked objects:
 10139 ;;		On entry : 0/0
 10140 ;;		On exit  : 0/0
 10141 ;;		Unchanged: 0/0
 10142 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10144 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10145 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10146 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10147 ;;Total ram usage:       15 bytes
 10148 ;; Hardware stack levels used: 1
 10149 ;; Hardware stack levels required when called: 1
 10150 ;; This function calls:
 10151 ;;		___wmul
 10152 ;;		_isdigit
 10153 ;;		_isspace
 10154 ;; This function is called by:
 10155 ;;		_vfpfcnvrt
 10156 ;; This function uses a non-reentrant model
 10157 ;;
 10158                           
 10159                           	psect	text35
 10160  00D1B8                     __ptext35:
 10161                           	callstack 0
 10162  00D1B8                     _atoi:
 10163                           	callstack 26
 10164  00D1B8  0E00               	movlw	0
 10165  00D1BA  6E16               	movwf	(atoi@n+1)^0,c
 10166  00D1BC  0E00               	movlw	0
 10167  00D1BE  6E15               	movwf	atoi@n^0,c
 10168  00D1C0  0E00               	movlw	0
 10169  00D1C2  6E0F               	movwf	(atoi@neg+1)^0,c
 10170  00D1C4  0E00               	movlw	0
 10171  00D1C6  6E0E               	movwf	atoi@neg^0,c
 10172  00D1C8  EFE8  F068         	goto	l4442
 10173  00D1CC                     l4440:
 10174  00D1CC  4A08               	infsnz	atoi@s^0,f,c
 10175  00D1CE  2A09               	incf	(atoi@s+1)^0,f,c
 10176  00D1D0                     l4442:
 10177  00D1D0  0E01               	movlw	1
 10178  00D1D2  6E14               	movwf	_atoi$1149^0,c
 10179  00D1D4  C008  FFF6         	movff	atoi@s,tblptrl
 10180  00D1D8  C009  FFF7         	movff	atoi@s+1,tblptrh
 10181  00D1DC                     	if	0	;tblptru may be non-zero
 10182  00D1DC                     	endif
 10183  00D1DC                     	if	0	;tblptru may be non-zero
 10184  00D1DC                     	endif
 10185  00D1DC  0008               	tblrd		*
 10186  00D1DE  50F5               	movf	tablat,w,c
 10187  00D1E0  0A20               	xorlw	32
 10188  00D1E2  B4D8               	btfsc	status,2,c
 10189  00D1E4  EFF6  F068         	goto	u5851
 10190  00D1E8  EFF8  F068         	goto	u5850
 10191  00D1EC                     u5851:
 10192  00D1EC  EF15  F069         	goto	l4450
 10193  00D1F0                     u5850:
 10194  00D1F0  0EF7               	movlw	247
 10195  00D1F2  6E0A               	movwf	??_atoi^0,c
 10196  00D1F4  0EFF               	movlw	255
 10197  00D1F6  6E0B               	movwf	(??_atoi+1)^0,c
 10198  00D1F8  C008  FFF6         	movff	atoi@s,tblptrl
 10199  00D1FC  C009  FFF7         	movff	atoi@s+1,tblptrh
 10200  00D200                     	if	0	;tblptru may be non-zero
 10201  00D200                     	endif
 10202  00D200                     	if	0	;tblptru may be non-zero
 10203  00D200                     	endif
 10204  00D200  0008               	tblrd		*
 10205  00D202  50F5               	movf	tablat,w,c
 10206  00D204  6E0C               	movwf	(??_atoi+2)^0,c
 10207  00D206  6A0D               	clrf	(??_atoi+3)^0,c
 10208  00D208  500A               	movf	??_atoi^0,w,c
 10209  00D20A  260C               	addwf	(??_atoi+2)^0,f,c
 10210  00D20C  500B               	movf	(??_atoi+1)^0,w,c
 10211  00D20E  220D               	addwfc	(??_atoi+3)^0,f,c
 10212  00D210  500D               	movf	(??_atoi+3)^0,w,c
 10213  00D212  E109               	bnz	u5860
 10214  00D214  0E05               	movlw	5
 10215  00D216  5C0C               	subwf	(??_atoi+2)^0,w,c
 10216  00D218  A0D8               	btfss	status,0,c
 10217  00D21A  EF11  F069         	goto	u5861
 10218  00D21E  EF13  F069         	goto	u5860
 10219  00D222                     u5861:
 10220  00D222  EF15  F069         	goto	l4450
 10221  00D226                     u5860:
 10222  00D226  0E00               	movlw	0
 10223  00D228  6E14               	movwf	_atoi$1149^0,c
 10224  00D22A                     l4450:
 10225  00D22A  C014  F010         	movff	_atoi$1149,_atoi$1148
 10226  00D22E  6A11               	clrf	(_atoi$1148+1)^0,c
 10227  00D230  5010               	movf	_atoi$1148^0,w,c
 10228  00D232  1011               	iorwf	(_atoi$1148+1)^0,w,c
 10229  00D234  A4D8               	btfss	status,2,c
 10230  00D236  EF1F  F069         	goto	u5871
 10231  00D23A  EF21  F069         	goto	u5870
 10232  00D23E                     u5871:
 10233  00D23E  EFE6  F068         	goto	l4440
 10234  00D242                     u5870:
 10235  00D242  EF2B  F069         	goto	l4460
 10236  00D246                     l4456:
 10237  00D246  0E00               	movlw	0
 10238  00D248  6E0F               	movwf	(atoi@neg+1)^0,c
 10239  00D24A  0E01               	movlw	1
 10240  00D24C  6E0E               	movwf	atoi@neg^0,c
 10241  00D24E                     l4458:
 10242  00D24E  4A08               	infsnz	atoi@s^0,f,c
 10243  00D250  2A09               	incf	(atoi@s+1)^0,f,c
 10244  00D252  EF60  F069         	goto	l4466
 10245  00D256                     l4460:
 10246  00D256  C008  FFF6         	movff	atoi@s,tblptrl
 10247  00D25A  C009  FFF7         	movff	atoi@s+1,tblptrh
 10248  00D25E                     	if	0	;tblptru may be non-zero
 10249  00D25E                     	endif
 10250  00D25E                     	if	0	;tblptru may be non-zero
 10251  00D25E                     	endif
 10252  00D25E  0008               	tblrd		*
 10253  00D260  50F5               	movf	tablat,w,c
 10254  00D262  6E0A               	movwf	??_atoi^0,c
 10255  00D264  6A0B               	clrf	(??_atoi+1)^0,c
 10256                           
 10257                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10258                           ; Switch size 1, requested type "simple"
 10259                           ; Number of cases is 1, Range of values is 0 to 0
 10260                           ; switch strategies available:
 10261                           ; Name         Instructions Cycles
 10262                           ; simple_byte            4     3 (average)
 10263                           ;	Chosen strategy is simple_byte
 10264  00D266  500B               	movf	(??_atoi+1)^0,w,c
 10265  00D268  0A00               	xorlw	0	; case 0
 10266  00D26A  B4D8               	btfsc	status,2,c
 10267  00D26C  EF3A  F069         	goto	l4916
 10268  00D270  EF60  F069         	goto	l4466
 10269  00D274                     l4916:
 10270                           
 10271                           ; Switch size 1, requested type "simple"
 10272                           ; Number of cases is 2, Range of values is 43 to 45
 10273                           ; switch strategies available:
 10274                           ; Name         Instructions Cycles
 10275                           ; simple_byte            7     4 (average)
 10276                           ;	Chosen strategy is simple_byte
 10277  00D274  500A               	movf	??_atoi^0,w,c
 10278  00D276  0A2B               	xorlw	43	; case 43
 10279  00D278  B4D8               	btfsc	status,2,c
 10280  00D27A  EF27  F069         	goto	l4458
 10281  00D27E  0A06               	xorlw	6	; case 45
 10282  00D280  B4D8               	btfsc	status,2,c
 10283  00D282  EF23  F069         	goto	l4456
 10284  00D286  EF60  F069         	goto	l4466
 10285  00D28A                     l4462:
 10286  00D28A  C015  F001         	movff	atoi@n,___wmul@multiplier
 10287  00D28E  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10288  00D292  0E00               	movlw	0
 10289  00D294  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10290  00D296  0E0A               	movlw	10
 10291  00D298  6E03               	movwf	___wmul@multiplicand^0,c
 10292  00D29A  EC59  F060         	call	___wmul	;wreg free
 10293  00D29E  C008  FFF6         	movff	atoi@s,tblptrl
 10294  00D2A2  C009  FFF7         	movff	atoi@s+1,tblptrh
 10295  00D2A6                     	if	0	;tblptru may be non-zero
 10296  00D2A6                     	endif
 10297  00D2A6                     	if	0	;tblptru may be non-zero
 10298  00D2A6                     	endif
 10299  00D2A6  0008               	tblrd		*
 10300  00D2A8  50F5               	movf	tablat,w,c
 10301  00D2AA  5E01               	subwf	?___wmul^0,f,c
 10302  00D2AC  0E00               	movlw	0
 10303  00D2AE  5A02               	subwfb	(?___wmul+1)^0,f,c
 10304  00D2B0  0E30               	movlw	48
 10305  00D2B2  2401               	addwf	?___wmul^0,w,c
 10306  00D2B4  6E15               	movwf	atoi@n^0,c
 10307  00D2B6  0E00               	movlw	0
 10308  00D2B8  2002               	addwfc	(?___wmul+1)^0,w,c
 10309  00D2BA  6E16               	movwf	(atoi@n+1)^0,c
 10310  00D2BC  EF27  F069         	goto	l4458
 10311  00D2C0                     l4466:
 10312  00D2C0  0ED0               	movlw	208
 10313  00D2C2  6E0A               	movwf	??_atoi^0,c
 10314  00D2C4  0EFF               	movlw	255
 10315  00D2C6  6E0B               	movwf	(??_atoi+1)^0,c
 10316  00D2C8  C008  FFF6         	movff	atoi@s,tblptrl
 10317  00D2CC  C009  FFF7         	movff	atoi@s+1,tblptrh
 10318  00D2D0                     	if	0	;tblptru may be non-zero
 10319  00D2D0                     	endif
 10320  00D2D0                     	if	0	;tblptru may be non-zero
 10321  00D2D0                     	endif
 10322  00D2D0  0008               	tblrd		*
 10323  00D2D2  50F5               	movf	tablat,w,c
 10324  00D2D4  6E0C               	movwf	(??_atoi+2)^0,c
 10325  00D2D6  6A0D               	clrf	(??_atoi+3)^0,c
 10326  00D2D8  500A               	movf	??_atoi^0,w,c
 10327  00D2DA  260C               	addwf	(??_atoi+2)^0,f,c
 10328  00D2DC  500B               	movf	(??_atoi+1)^0,w,c
 10329  00D2DE  220D               	addwfc	(??_atoi+3)^0,f,c
 10330  00D2E0  500D               	movf	(??_atoi+3)^0,w,c
 10331  00D2E2  E10A               	bnz	u5880
 10332  00D2E4  0E0A               	movlw	10
 10333  00D2E6  5C0C               	subwf	(??_atoi+2)^0,w,c
 10334  00D2E8  A0D8               	btfss	status,0,c
 10335  00D2EA  EF79  F069         	goto	u5881
 10336  00D2EE  EF7C  F069         	goto	u5880
 10337  00D2F2                     u5881:
 10338  00D2F2  0E01               	movlw	1
 10339  00D2F4  EF7D  F069         	goto	u5890
 10340  00D2F8                     u5880:
 10341  00D2F8  0E00               	movlw	0
 10342  00D2FA                     u5890:
 10343  00D2FA  6E12               	movwf	_atoi$1150^0,c
 10344  00D2FC  6A13               	clrf	(_atoi$1150+1)^0,c
 10345  00D2FE  5012               	movf	_atoi$1150^0,w,c
 10346  00D300  1013               	iorwf	(_atoi$1150+1)^0,w,c
 10347  00D302  A4D8               	btfss	status,2,c
 10348  00D304  EF86  F069         	goto	u5901
 10349  00D308  EF88  F069         	goto	u5900
 10350  00D30C                     u5901:
 10351  00D30C  EF45  F069         	goto	l4462
 10352  00D310                     u5900:
 10353  00D310  500E               	movf	atoi@neg^0,w,c
 10354  00D312  100F               	iorwf	(atoi@neg+1)^0,w,c
 10355  00D314  A4D8               	btfss	status,2,c
 10356  00D316  EF8F  F069         	goto	u5911
 10357  00D31A  EF91  F069         	goto	u5910
 10358  00D31E                     u5911:
 10359  00D31E  EF9F  F069         	goto	l1130
 10360  00D322                     u5910:
 10361  00D322  C015  F00A         	movff	atoi@n,??_atoi
 10362  00D326  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10363  00D32A  1E0A               	comf	??_atoi^0,f,c
 10364  00D32C  1E0B               	comf	(??_atoi+1)^0,f,c
 10365  00D32E  4A0A               	infsnz	??_atoi^0,f,c
 10366  00D330  2A0B               	incf	(??_atoi+1)^0,f,c
 10367  00D332  C00A  F008         	movff	??_atoi,?_atoi
 10368  00D336  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10369  00D33A  EFA3  F069         	goto	l1133
 10370  00D33E                     l1130:
 10371  00D33E  C015  F008         	movff	atoi@n,?_atoi
 10372  00D342  C016  F009         	movff	atoi@n+1,?_atoi+1
 10373  00D346                     l1133:
 10374  00D346  0012               	return		;funcret
 10375  00D348                     __end_of_atoi:
 10376                           	callstack 0
 10377                           
 10378 ;; *************** function _isspace *****************
 10379 ;; Defined at:
 10380 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 10381 ;; Parameters:    Size  Location     Type
 10382 ;;  c               2    0[COMRAM] int 
 10383 ;; Auto vars:     Size  Location     Type
 10384 ;;		None
 10385 ;; Return value:  Size  Location     Type
 10386 ;;                  2    0[COMRAM] int 
 10387 ;; Registers used:
 10388 ;;		wreg, status,2, status,0
 10389 ;; Tracked objects:
 10390 ;;		On entry : 0/0
 10391 ;;		On exit  : 0/0
 10392 ;;		Unchanged: 0/0
 10393 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10394 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10395 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10396 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10397 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10398 ;;Total ram usage:        7 bytes
 10399 ;; Hardware stack levels used: 1
 10400 ;; This function calls:
 10401 ;;		Nothing
 10402 ;; This function is called by:
 10403 ;;		_atoi
 10404 ;; This function uses a non-reentrant model
 10405 ;;
 10406                           
 10407                           	psect	text36
 10408  00C3A0                     __ptext36:
 10409                           	callstack 0
 10410  00C3A0                     _isspace:
 10411                           	callstack 26
 10412  00C3A0  0E01               	movlw	1
 10413  00C3A2  6E07               	movwf	_isspace$1188^0,c
 10414  00C3A4  0E20               	movlw	32
 10415  00C3A6  1801               	xorwf	isspace@c^0,w,c
 10416  00C3A8  1002               	iorwf	(isspace@c+1)^0,w,c
 10417  00C3AA  B4D8               	btfsc	status,2,c
 10418  00C3AC  EFDA  F061         	goto	u4921
 10419  00C3B0  EFDC  F061         	goto	u4920
 10420  00C3B4                     u4921:
 10421  00C3B4  EFF5  F061         	goto	l3970
 10422  00C3B8                     u4920:
 10423  00C3B8  0EF7               	movlw	247
 10424  00C3BA  6E03               	movwf	??_isspace^0,c
 10425  00C3BC  0EFF               	movlw	255
 10426  00C3BE  6E04               	movwf	(??_isspace+1)^0,c
 10427  00C3C0  C001  F005         	movff	isspace@c,??_isspace+2
 10428  00C3C4  C002  F006         	movff	isspace@c+1,??_isspace+3
 10429  00C3C8  5003               	movf	??_isspace^0,w,c
 10430  00C3CA  2605               	addwf	(??_isspace+2)^0,f,c
 10431  00C3CC  5004               	movf	(??_isspace+1)^0,w,c
 10432  00C3CE  2206               	addwfc	(??_isspace+3)^0,f,c
 10433  00C3D0  5006               	movf	(??_isspace+3)^0,w,c
 10434  00C3D2  E109               	bnz	u4930
 10435  00C3D4  0E05               	movlw	5
 10436  00C3D6  5C05               	subwf	(??_isspace+2)^0,w,c
 10437  00C3D8  A0D8               	btfss	status,0,c
 10438  00C3DA  EFF1  F061         	goto	u4931
 10439  00C3DE  EFF3  F061         	goto	u4930
 10440  00C3E2                     u4931:
 10441  00C3E2  EFF5  F061         	goto	l3970
 10442  00C3E6                     u4930:
 10443  00C3E6  0E00               	movlw	0
 10444  00C3E8  6E07               	movwf	_isspace$1188^0,c
 10445  00C3EA                     l3970:
 10446  00C3EA  C007  F001         	movff	_isspace$1188,?_isspace
 10447  00C3EE  6A02               	clrf	(?_isspace+1)^0,c
 10448  00C3F0  0012               	return		;funcret
 10449  00C3F2                     __end_of_isspace:
 10450                           	callstack 0
 10451                           
 10452 ;; *************** function _isdigit *****************
 10453 ;; Defined at:
 10454 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 10455 ;; Parameters:    Size  Location     Type
 10456 ;;  c               2    0[COMRAM] int 
 10457 ;; Auto vars:     Size  Location     Type
 10458 ;;		None
 10459 ;; Return value:  Size  Location     Type
 10460 ;;                  2    0[COMRAM] int 
 10461 ;; Registers used:
 10462 ;;		wreg, status,2, status,0
 10463 ;; Tracked objects:
 10464 ;;		On entry : 0/0
 10465 ;;		On exit  : 0/0
 10466 ;;		Unchanged: 0/0
 10467 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10470 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10471 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10472 ;;Total ram usage:        6 bytes
 10473 ;; Hardware stack levels used: 1
 10474 ;; This function calls:
 10475 ;;		Nothing
 10476 ;; This function is called by:
 10477 ;;		_vfpfcnvrt
 10478 ;;		_atoi
 10479 ;; This function uses a non-reentrant model
 10480 ;;
 10481                           
 10482                           	psect	text37
 10483  00C178                     __ptext37:
 10484                           	callstack 0
 10485  00C178                     _isdigit:
 10486                           	callstack 27
 10487  00C178  0ED0               	movlw	208
 10488  00C17A  6E03               	movwf	??_isdigit^0,c
 10489  00C17C  0EFF               	movlw	255
 10490  00C17E  6E04               	movwf	(??_isdigit+1)^0,c
 10491  00C180  C001  F005         	movff	isdigit@c,??_isdigit+2
 10492  00C184  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10493  00C188  5003               	movf	??_isdigit^0,w,c
 10494  00C18A  2605               	addwf	(??_isdigit+2)^0,f,c
 10495  00C18C  5004               	movf	(??_isdigit+1)^0,w,c
 10496  00C18E  2206               	addwfc	(??_isdigit+3)^0,f,c
 10497  00C190  5006               	movf	(??_isdigit+3)^0,w,c
 10498  00C192  E10A               	bnz	u4900
 10499  00C194  0E0A               	movlw	10
 10500  00C196  5C05               	subwf	(??_isdigit+2)^0,w,c
 10501  00C198  A0D8               	btfss	status,0,c
 10502  00C19A  EFD1  F060         	goto	u4901
 10503  00C19E  EFD4  F060         	goto	u4900
 10504  00C1A2                     u4901:
 10505  00C1A2  0E01               	movlw	1
 10506  00C1A4  EFD5  F060         	goto	u4910
 10507  00C1A8                     u4900:
 10508  00C1A8  0E00               	movlw	0
 10509  00C1AA                     u4910:
 10510  00C1AA  6E01               	movwf	?_isdigit^0,c
 10511  00C1AC  6A02               	clrf	(?_isdigit+1)^0,c
 10512  00C1AE  0012               	return		;funcret
 10513  00C1B0                     __end_of_isdigit:
 10514                           	callstack 0
 10515                           
 10516 ;; *************** function ___wmul *****************
 10517 ;; Defined at:
 10518 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 10519 ;; Parameters:    Size  Location     Type
 10520 ;;  multiplier      2    0[COMRAM] unsigned int 
 10521 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10522 ;; Auto vars:     Size  Location     Type
 10523 ;;  product         2    4[COMRAM] unsigned int 
 10524 ;; Return value:  Size  Location     Type
 10525 ;;                  2    0[COMRAM] unsigned int 
 10526 ;; Registers used:
 10527 ;;		wreg, status,2, status,0, prodl, prodh
 10528 ;; Tracked objects:
 10529 ;;		On entry : 0/0
 10530 ;;		On exit  : 0/0
 10531 ;;		Unchanged: 0/0
 10532 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10533 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10536 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10537 ;;Total ram usage:        6 bytes
 10538 ;; Hardware stack levels used: 1
 10539 ;; This function calls:
 10540 ;;		Nothing
 10541 ;; This function is called by:
 10542 ;;		_atoi
 10543 ;; This function uses a non-reentrant model
 10544 ;;
 10545                           
 10546                           	psect	text38
 10547  00C0B2                     __ptext38:
 10548                           	callstack 0
 10549  00C0B2                     ___wmul:
 10550                           	callstack 26
 10551  00C0B2  5001               	movf	___wmul@multiplier^0,w,c
 10552  00C0B4  0203               	mulwf	___wmul@multiplicand^0,c
 10553  00C0B6  CFF3 F005          	movff	prodl,___wmul@product
 10554  00C0BA  CFF4 F006          	movff	prodh,___wmul@product+1
 10555  00C0BE  5001               	movf	___wmul@multiplier^0,w,c
 10556  00C0C0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10557  00C0C2  50F3               	movf	243,w,c
 10558  00C0C4  2606               	addwf	(___wmul@product+1)^0,f,c
 10559  00C0C6  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10560  00C0C8  0203               	mulwf	___wmul@multiplicand^0,c
 10561  00C0CA  50F3               	movf	243,w,c
 10562  00C0CC  2606               	addwf	(___wmul@product+1)^0,f,c
 10563  00C0CE  C005  F001         	movff	___wmul@product,?___wmul
 10564  00C0D2  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10565  00C0D6  0012               	return		;funcret
 10566  00C0D8                     __end_of___wmul:
 10567                           	callstack 0
 10568                           
 10569 ;; *************** function _setupSerial *****************
 10570 ;; Defined at:
 10571 ;;		line 3 in file "my_ser.c"
 10572 ;; Parameters:    Size  Location     Type
 10573 ;;		None
 10574 ;; Auto vars:     Size  Location     Type
 10575 ;;  dummy           1    0        unsigned char 
 10576 ;; Return value:  Size  Location     Type
 10577 ;;                  1    wreg      void 
 10578 ;; Registers used:
 10579 ;;		wreg, status,2
 10580 ;; Tracked objects:
 10581 ;;		On entry : 0/0
 10582 ;;		On exit  : 0/0
 10583 ;;		Unchanged: 0/0
 10584 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10589 ;;Total ram usage:        0 bytes
 10590 ;; Hardware stack levels used: 1
 10591 ;; This function calls:
 10592 ;;		Nothing
 10593 ;; This function is called by:
 10594 ;;		_main
 10595 ;; This function uses a non-reentrant model
 10596 ;;
 10597                           
 10598                           	psect	text39
 10599  00C092                     __ptext39:
 10600                           	callstack 0
 10601  00C092                     _setupSerial:
 10602                           	callstack 30
 10603  00C092                     
 10604                           ;my_ser.c: 4:     unsigned char dummy;;my_ser.c: 5:     BAUDCONbits.BRG16 = 0;
 10605  00C092  96B8               	bcf	184,3,c	;volatile
 10606  00C094                     
 10607                           ;my_ser.c: 6:     SPBRG = 25;
 10608  00C094  0E19               	movlw	25
 10609  00C096  6EAF               	movwf	175,c	;volatile
 10610                           
 10611                           ;my_ser.c: 7:     SPBRGH = 0;
 10612  00C098  0E00               	movlw	0
 10613  00C09A  6EB0               	movwf	176,c	;volatile
 10614                           
 10615                           ;my_ser.c: 8:     TXSTA = 0;
 10616  00C09C  0E00               	movlw	0
 10617  00C09E  6EAC               	movwf	172,c	;volatile
 10618  00C0A0                     
 10619                           ;my_ser.c: 9:     TXSTAbits.BRGH = 1;
 10620  00C0A0  84AC               	bsf	172,2,c	;volatile
 10621  00C0A2                     
 10622                           ;my_ser.c: 10:     TXSTAbits.TXEN = 1;
 10623  00C0A2  8AAC               	bsf	172,5,c	;volatile
 10624                           
 10625                           ;my_ser.c: 12:     RCSTA = 0;
 10626  00C0A4  0E00               	movlw	0
 10627  00C0A6  6EAB               	movwf	171,c	;volatile
 10628  00C0A8                     
 10629                           ;my_ser.c: 13:     RCSTAbits.CREN = 1;
 10630  00C0A8  88AB               	bsf	171,4,c	;volatile
 10631  00C0AA                     
 10632                           ;my_ser.c: 14:     RCSTAbits.SPEN = 1;
 10633  00C0AA  8EAB               	bsf	171,7,c	;volatile
 10634  00C0AC  50AE               	movf	174,w,c	;volatile
 10635  00C0AE  50AE               	movf	174,w,c	;volatile
 10636  00C0B0  0012               	return		;funcret
 10637  00C0B2                     __end_of_setupSerial:
 10638                           	callstack 0
 10639                           
 10640 ;; *************** function _setupPorts *****************
 10641 ;; Defined at:
 10642 ;;		line 142 in file "main.c"
 10643 ;; Parameters:    Size  Location     Type
 10644 ;;		None
 10645 ;; Auto vars:     Size  Location     Type
 10646 ;;		None
 10647 ;; Return value:  Size  Location     Type
 10648 ;;                  1    wreg      void 
 10649 ;; Registers used:
 10650 ;;		wreg, status,2
 10651 ;; Tracked objects:
 10652 ;;		On entry : 0/0
 10653 ;;		On exit  : 0/0
 10654 ;;		Unchanged: 0/0
 10655 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10660 ;;Total ram usage:        0 bytes
 10661 ;; Hardware stack levels used: 1
 10662 ;; This function calls:
 10663 ;;		Nothing
 10664 ;; This function is called by:
 10665 ;;		_main
 10666 ;; This function uses a non-reentrant model
 10667 ;;
 10668                           
 10669                           	psect	text40
 10670  00C040                     __ptext40:
 10671                           	callstack 0
 10672  00C040                     _setupPorts:
 10673                           	callstack 30
 10674  00C040                     
 10675                           ;main.c: 143:     ADCON0 = 0;
 10676  00C040  0E00               	movlw	0
 10677  00C042  6EC2               	movwf	194,c	;volatile
 10678                           
 10679                           ;main.c: 144:     ADCON1 = 0b00001100;
 10680  00C044  0E0C               	movlw	12
 10681  00C046  6EC1               	movwf	193,c	;volatile
 10682  00C048                     
 10683                           ;main.c: 146:     TRISB = 0xFF;
 10684  00C048  6893               	setf	147,c	;volatile
 10685                           
 10686                           ;main.c: 147:     TRISC = 0x80;
 10687  00C04A  0E80               	movlw	128
 10688  00C04C  6E94               	movwf	148,c	;volatile
 10689  00C04E                     
 10690                           ;main.c: 148:     TRISA = 0xFF;
 10691  00C04E  6892               	setf	146,c	;volatile
 10692                           
 10693                           ;main.c: 149:     TRISD = 0x00;
 10694  00C050  0E00               	movlw	0
 10695  00C052  6E95               	movwf	149,c	;volatile
 10696                           
 10697                           ;main.c: 150:     TRISE = 0x00;
 10698  00C054  0E00               	movlw	0
 10699  00C056  6E96               	movwf	150,c	;volatile
 10700  00C058  0012               	return		;funcret
 10701  00C05A                     __end_of_setupPorts:
 10702                           	callstack 0
 10703                           
 10704 ;; *************** function _read_byte_no_lib *****************
 10705 ;; Defined at:
 10706 ;;		line 33 in file "my_ser.c"
 10707 ;; Parameters:    Size  Location     Type
 10708 ;;		None
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;  c               1    0[COMRAM] unsigned char 
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  1    wreg      unsigned char 
 10713 ;; Registers used:
 10714 ;;		wreg, status,2
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10721 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10723 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10724 ;;Total ram usage:        1 bytes
 10725 ;; Hardware stack levels used: 1
 10726 ;; This function calls:
 10727 ;;		Nothing
 10728 ;; This function is called by:
 10729 ;;		_main
 10730 ;; This function uses a non-reentrant model
 10731 ;;
 10732                           
 10733                           	psect	text41
 10734  00C076                     __ptext41:
 10735                           	callstack 0
 10736  00C076                     _read_byte_no_lib:
 10737                           	callstack 30
 10738  00C076                     
 10739                           ;my_ser.c: 34:     unsigned char c;;my_ser.c: 35:     while(!PIR1bits.RCIF) {
 10740  00C076  EF3E  F060         	goto	l115
 10741  00C07A                     l116:
 10742  00C07A  0004               	clrwdt		;# 
 10743  00C07C                     l115:
 10744                           
 10745                           ;my_ser.c: 35:     while(!PIR1bits.RCIF) {
 10746  00C07C  AA9E               	btfss	158,5,c	;volatile
 10747  00C07E  EF43  F060         	goto	u6331
 10748  00C082  EF45  F060         	goto	u6330
 10749  00C086                     u6331:
 10750  00C086  EF3D  F060         	goto	l116
 10751  00C08A                     u6330:
 10752  00C08A                     
 10753                           ;my_ser.c: 38:     c = RCREG;
 10754  00C08A  CFAE F001          	movff	4014,read_byte_no_lib@c	;volatile
 10755  00C08E                     
 10756                           ;my_ser.c: 39:     return c;
 10757  00C08E  5001               	movf	read_byte_no_lib@c^0,w,c
 10758  00C090  0012               	return		;funcret
 10759  00C092                     __end_of_read_byte_no_lib:
 10760                           	callstack 0
 10761                           
 10762 ;; *************** function _print_line *****************
 10763 ;; Defined at:
 10764 ;;		line 153 in file "main.c"
 10765 ;; Parameters:    Size  Location     Type
 10766 ;;		None
 10767 ;; Auto vars:     Size  Location     Type
 10768 ;;		None
 10769 ;; Return value:  Size  Location     Type
 10770 ;;                  1    wreg      void 
 10771 ;; Registers used:
 10772 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10773 ;; Tracked objects:
 10774 ;;		On entry : 0/0
 10775 ;;		On exit  : 0/0
 10776 ;;		Unchanged: 0/0
 10777 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10782 ;;Total ram usage:        0 bytes
 10783 ;; Hardware stack levels used: 1
 10784 ;; Hardware stack levels required when called: 2
 10785 ;; This function calls:
 10786 ;;		_send_string_no_lib
 10787 ;; This function is called by:
 10788 ;;		_main
 10789 ;;		_print_structure
 10790 ;;		_print_union
 10791 ;;		_print_byte
 10792 ;; This function uses a non-reentrant model
 10793 ;;
 10794                           
 10795                           	psect	text42
 10796  00C032                     __ptext42:
 10797                           	callstack 0
 10798  00C032                     _print_line:
 10799                           	callstack 28
 10800  00C032                     
 10801                           ;main.c: 155:     send_string_no_lib("--------------------------------------------------
      +                          -------\r\n");
 10802  00C032  0E81               	movlw	low STR_1
 10803  00C034  6E02               	movwf	send_string_no_lib@p^0,c
 10804  00C036  0EFE               	movlw	high STR_1
 10805  00C038  6E03               	movwf	(send_string_no_lib@p+1)^0,c
 10806  00C03A  ECB0  F062         	call	_send_string_no_lib	;wreg free
 10807  00C03E  0012               	return		;funcret
 10808  00C040                     __end_of_print_line:
 10809                           	callstack 0
 10810                           
 10811 ;; *************** function _send_string_no_lib *****************
 10812 ;; Defined at:
 10813 ;;		line 50 in file "my_ser.c"
 10814 ;; Parameters:    Size  Location     Type
 10815 ;;  p               2    1[COMRAM] PTR unsigned char 
 10816 ;;		 -> gotten(1), buffer(200), STR_1(60), 
 10817 ;; Auto vars:     Size  Location     Type
 10818 ;;		None
 10819 ;; Return value:  Size  Location     Type
 10820 ;;                  1    wreg      void 
 10821 ;; Registers used:
 10822 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10823 ;; Tracked objects:
 10824 ;;		On entry : 0/0
 10825 ;;		On exit  : 0/0
 10826 ;;		Unchanged: 0/0
 10827 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10831 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10832 ;;Total ram usage:        2 bytes
 10833 ;; Hardware stack levels used: 1
 10834 ;; Hardware stack levels required when called: 1
 10835 ;; This function calls:
 10836 ;;		_send_byte_no_lib
 10837 ;; This function is called by:
 10838 ;;		_print_line
 10839 ;;		_main
 10840 ;;		_print_structure
 10841 ;;		_print_union
 10842 ;;		_print_byte
 10843 ;; This function uses a non-reentrant model
 10844 ;;
 10845                           
 10846                           	psect	text43
 10847  00C560                     __ptext43:
 10848                           	callstack 0
 10849  00C560                     _send_string_no_lib:
 10850                           	callstack 29
 10851  00C560                     
 10852                           ;my_ser.c: 51:     while (*p) {
 10853  00C560  EFC7  F062         	goto	l4690
 10854  00C564                     l4686:
 10855                           
 10856                           ;my_ser.c: 52:         send_byte_no_lib(*p);
 10857  00C564  C002  FFF6         	movff	send_string_no_lib@p,tblptrl
 10858  00C568  C003  FFF7         	movff	send_string_no_lib@p+1,tblptrh
 10859  00C56C  0E00               	movlw	low (__mediumconst shr (0+16))
 10860  00C56E  6EF8               	movwf	tblptru,c
 10861  00C570  0E0F               	movlw	(high __ramtop+-1)
 10862  00C572  64F7               	cpfsgt	tblptrh,c
 10863  00C574  D003               	bra	u6257
 10864  00C576  0008               	tblrd		*
 10865  00C578  50F5               	movf	tablat,w,c
 10866  00C57A  D005               	bra	u6250
 10867  00C57C                     u6257:
 10868  00C57C  CFF6 FFE1          	movff	tblptrl,fsr1l
 10869  00C580  CFF7 FFE2          	movff	tblptrh,fsr1h
 10870  00C584  50E7               	movf	indf1,w,c
 10871  00C586                     u6250:
 10872  00C586  EC2D  F060         	call	_send_byte_no_lib
 10873  00C58A                     
 10874                           ;my_ser.c: 53:         p++;
 10875  00C58A  4A02               	infsnz	send_string_no_lib@p^0,f,c
 10876  00C58C  2A03               	incf	(send_string_no_lib@p+1)^0,f,c
 10877  00C58E                     l4690:
 10878                           
 10879                           ;my_ser.c: 51:     while (*p) {
 10880  00C58E  C002  FFF6         	movff	send_string_no_lib@p,tblptrl
 10881  00C592  C003  FFF7         	movff	send_string_no_lib@p+1,tblptrh
 10882  00C596  0E00               	movlw	low (__mediumconst shr (0+16))
 10883  00C598  6EF8               	movwf	tblptru,c
 10884  00C59A  0E0F               	movlw	(high __ramtop+-1)
 10885  00C59C  64F7               	cpfsgt	tblptrh,c
 10886  00C59E  D003               	bra	u6267
 10887  00C5A0  0008               	tblrd		*
 10888  00C5A2  50F5               	movf	tablat,w,c
 10889  00C5A4  D005               	bra	u6260
 10890  00C5A6                     u6267:
 10891  00C5A6  CFF6 FFE1          	movff	tblptrl,fsr1l
 10892  00C5AA  CFF7 FFE2          	movff	tblptrh,fsr1h
 10893  00C5AE  50E7               	movf	indf1,w,c
 10894  00C5B0                     u6260:
 10895  00C5B0  0900               	iorlw	0
 10896  00C5B2  A4D8               	btfss	status,2,c
 10897  00C5B4  EFDE  F062         	goto	u6271
 10898  00C5B8  EFE0  F062         	goto	u6270
 10899  00C5BC                     u6271:
 10900  00C5BC  EFB2  F062         	goto	l4686
 10901  00C5C0                     u6270:
 10902  00C5C0  0012               	return		;funcret
 10903  00C5C2                     __end_of_send_string_no_lib:
 10904                           	callstack 0
 10905                           
 10906 ;; *************** function _send_byte_no_lib *****************
 10907 ;; Defined at:
 10908 ;;		line 42 in file "my_ser.c"
 10909 ;; Parameters:    Size  Location     Type
 10910 ;;  c               1    wreg     unsigned char 
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;  c               1    0[COMRAM] unsigned char 
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  1    wreg      void 
 10915 ;; Registers used:
 10916 ;;		wreg
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10925 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10926 ;;Total ram usage:        1 bytes
 10927 ;; Hardware stack levels used: 1
 10928 ;; This function calls:
 10929 ;;		Nothing
 10930 ;; This function is called by:
 10931 ;;		_send_string_no_lib
 10932 ;; This function uses a non-reentrant model
 10933 ;;
 10934                           
 10935                           	psect	text44
 10936  00C05A                     __ptext44:
 10937                           	callstack 0
 10938  00C05A                     _send_byte_no_lib:
 10939                           	callstack 29
 10940                           
 10941                           ;incstack = 0
 10942                           ;send_byte_no_lib@c stored from wreg
 10943  00C05A  6E01               	movwf	send_byte_no_lib@c^0,c
 10944  00C05C                     
 10945                           ;my_ser.c: 43:     while (!TXSTAbits.TRMT)
 10946  00C05C  EF31  F060         	goto	l121
 10947  00C060                     l122:
 10948  00C060  0004               	clrwdt		;# 
 10949  00C062                     l121:
 10950                           
 10951                           ;my_ser.c: 43:     while (!TXSTAbits.TRMT)
 10952  00C062  A2AC               	btfss	172,1,c	;volatile
 10953  00C064  EF36  F060         	goto	u5991
 10954  00C068  EF38  F060         	goto	u5990
 10955  00C06C                     u5991:
 10956  00C06C  EF30  F060         	goto	l122
 10957  00C070                     u5990:
 10958  00C070                     
 10959                           ;my_ser.c: 47:     TXREG = c;
 10960  00C070  C001  FFAD         	movff	send_byte_no_lib@c,4013	;volatile
 10961  00C074  0012               	return		;funcret
 10962  00C076                     __end_of_send_byte_no_lib:
 10963                           	callstack 0
 10964                           
 10965 ;; *************** function _is_byte_available *****************
 10966 ;; Defined at:
 10967 ;;		line 22 in file "my_ser.c"
 10968 ;; Parameters:    Size  Location     Type
 10969 ;;		None
 10970 ;; Auto vars:     Size  Location     Type
 10971 ;;		None
 10972 ;; Return value:  Size  Location     Type
 10973 ;;                  1    wreg      unsigned char 
 10974 ;; Registers used:
 10975 ;;		wreg
 10976 ;; Tracked objects:
 10977 ;;		On entry : 0/0
 10978 ;;		On exit  : 0/0
 10979 ;;		Unchanged: 0/0
 10980 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10985 ;;Total ram usage:        0 bytes
 10986 ;; Hardware stack levels used: 1
 10987 ;; This function calls:
 10988 ;;		Nothing
 10989 ;; This function is called by:
 10990 ;;		_main
 10991 ;; This function uses a non-reentrant model
 10992 ;;
 10993                           
 10994                           	psect	text45
 10995  00C140                     __ptext45:
 10996                           	callstack 0
 10997  00C140                     _is_byte_available:
 10998                           	callstack 30
 10999  00C140                     
 11000                           ;my_ser.c: 24:     if (RCSTAbits.FERR || RCSTAbits.OERR)
 11001  00C140  B4AB               	btfsc	171,2,c	;volatile
 11002  00C142  EFA5  F060         	goto	u6301
 11003  00C146  EFA7  F060         	goto	u6300
 11004  00C14A                     u6301:
 11005  00C14A  EFAE  F060         	goto	l109
 11006  00C14E                     u6300:
 11007  00C14E  A2AB               	btfss	171,1,c	;volatile
 11008  00C150  EFAC  F060         	goto	u6311
 11009  00C154  EFAE  F060         	goto	u6310
 11010  00C158                     u6311:
 11011  00C158  EFB0  F060         	goto	l107
 11012  00C15C                     u6310:
 11013  00C15C                     l109:
 11014                           
 11015                           ;my_ser.c: 25:     {;my_ser.c: 26:         RCSTAbits.CREN = 0;
 11016  00C15C  98AB               	bcf	171,4,c	;volatile
 11017                           
 11018                           ;my_ser.c: 27:         RCSTAbits.CREN = 1;
 11019  00C15E  88AB               	bsf	171,4,c	;volatile
 11020  00C160                     l107:
 11021                           
 11022                           ;my_ser.c: 30:     if (PIR1bits.RCIF) return 1;
 11023  00C160  AA9E               	btfss	158,5,c	;volatile
 11024  00C162  EFB5  F060         	goto	u6321
 11025  00C166  EFB7  F060         	goto	u6320
 11026  00C16A                     u6321:
 11027  00C16A  EFBA  F060         	goto	l4754
 11028  00C16E                     u6320:
 11029  00C16E  0E01               	movlw	1
 11030  00C170  EFBB  F060         	goto	l111
 11031  00C174                     l4754:
 11032  00C174  0E00               	movlw	0
 11033  00C176                     l111:
 11034  00C176  0012               	return		;funcret
 11035  00C178                     __end_of_is_byte_available:
 11036                           	callstack 0
 11037                           
 11038 ;; *************** function _delay_ms *****************
 11039 ;; Defined at:
 11040 ;;		line 134 in file "main.c"
 11041 ;; Parameters:    Size  Location     Type
 11042 ;;  n               2    0[COMRAM] unsigned int 
 11043 ;; Auto vars:     Size  Location     Type
 11044 ;;  i               2    2[COMRAM] int 
 11045 ;; Return value:  Size  Location     Type
 11046 ;;                  1    wreg      void 
 11047 ;; Registers used:
 11048 ;;		wreg, status,2, status,0
 11049 ;; Tracked objects:
 11050 ;;		On entry : 0/0
 11051 ;;		On exit  : 0/0
 11052 ;;		Unchanged: 0/0
 11053 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 11054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 11055 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 11056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 11057 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 11058 ;;Total ram usage:        4 bytes
 11059 ;; Hardware stack levels used: 1
 11060 ;; This function calls:
 11061 ;;		Nothing
 11062 ;; This function is called by:
 11063 ;;		_main
 11064 ;; This function uses a non-reentrant model
 11065 ;;
 11066                           
 11067                           	psect	text46
 11068  00C0D8                     __ptext46:
 11069                           	callstack 0
 11070  00C0D8                     _delay_ms:
 11071                           	callstack 30
 11072  00C0D8                     
 11073                           ;main.c: 134: void delay_ms(unsigned int n);main.c: 135: {;main.c: 136:     int i;;main.
      +                          c: 137:     for (i=0; i < n; i++){
 11074  00C0D8  0E00               	movlw	0
 11075  00C0DA  6E04               	movwf	(delay_ms@i+1)^0,c
 11076  00C0DC  0E00               	movlw	0
 11077  00C0DE  6E03               	movwf	delay_ms@i^0,c
 11078  00C0E0  EF79  F060         	goto	l43
 11079  00C0E4                     l4702:
 11080                           
 11081                           ;main.c: 138:         _delaywdt((unsigned long)((1)*(4000000UL/4000.0)));
 11082  00C0E4  0EC8               	movlw	200
 11083  00C0E6                     u6517:
 11084  00C0E6  0004               	clrwdt	
 11085  00C0E8  0004               	clrwdt	
 11086  00C0EA  2EE8               	decfsz	wreg,f,c
 11087  00C0EC  D7FC               	bra	u6517
 11088  00C0EE                     
 11089                           ;main.c: 139:     }
 11090  00C0EE  4A03               	infsnz	delay_ms@i^0,f,c
 11091  00C0F0  2A04               	incf	(delay_ms@i+1)^0,f,c
 11092  00C0F2                     l43:
 11093  00C0F2  5001               	movf	delay_ms@n^0,w,c
 11094  00C0F4  5C03               	subwf	delay_ms@i^0,w,c
 11095  00C0F6  5002               	movf	(delay_ms@n+1)^0,w,c
 11096  00C0F8  5804               	subwfb	(delay_ms@i+1)^0,w,c
 11097  00C0FA  A0D8               	btfss	status,0,c
 11098  00C0FC  EF82  F060         	goto	u6291
 11099  00C100  EF84  F060         	goto	u6290
 11100  00C104                     u6291:
 11101  00C104  EF72  F060         	goto	l4702
 11102  00C108                     u6290:
 11103  00C108  0012               	return		;funcret
 11104  00C10A                     __end_of_delay_ms:
 11105                           	callstack 0
 11106                           
 11107                           	psect	rparam
 11108  0000                     
 11109                           	psect	idloc
 11110                           
 11111                           ;Config register IDLOC0 @ 0x200000
 11112                           ;	unspecified, using default values
 11113  200000                     	org	2097152
 11114  200000  FF                 	db	255
 11115                           
 11116                           ;Config register IDLOC1 @ 0x200001
 11117                           ;	unspecified, using default values
 11118  200001                     	org	2097153
 11119  200001  FF                 	db	255
 11120                           
 11121                           ;Config register IDLOC2 @ 0x200002
 11122                           ;	unspecified, using default values
 11123  200002                     	org	2097154
 11124  200002  FF                 	db	255
 11125                           
 11126                           ;Config register IDLOC3 @ 0x200003
 11127                           ;	unspecified, using default values
 11128  200003                     	org	2097155
 11129  200003  FF                 	db	255
 11130                           
 11131                           ;Config register IDLOC4 @ 0x200004
 11132                           ;	unspecified, using default values
 11133  200004                     	org	2097156
 11134  200004  FF                 	db	255
 11135                           
 11136                           ;Config register IDLOC5 @ 0x200005
 11137                           ;	unspecified, using default values
 11138  200005                     	org	2097157
 11139  200005  FF                 	db	255
 11140                           
 11141                           ;Config register IDLOC6 @ 0x200006
 11142                           ;	unspecified, using default values
 11143  200006                     	org	2097158
 11144  200006  FF                 	db	255
 11145                           
 11146                           ;Config register IDLOC7 @ 0x200007
 11147                           ;	unspecified, using default values
 11148  200007                     	org	2097159
 11149  200007  FF                 	db	255
 11150                           
 11151                           	psect	config
 11152                           
 11153                           ; Padding undefined space
 11154  300000                     	org	3145728
 11155  300000  FF                 	db	255
 11156                           
 11157                           ;Config register CONFIG1H @ 0x300001
 11158                           ;	Oscillator Selection bits
 11159                           ;	OSC = XT, XT oscillator
 11160                           ;	Fail-Safe Clock Monitor Enable bit
 11161                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11162                           ;	Internal/External Oscillator Switchover bit
 11163                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11164  300001                     	org	3145729
 11165  300001  01                 	db	1
 11166                           
 11167                           ;Config register CONFIG2L @ 0x300002
 11168                           ;	Power-up Timer Enable bit
 11169                           ;	PWRT = OFF, PWRT disabled
 11170                           ;	Brown-out Reset Enable bits
 11171                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 11172                           ;	Brown Out Reset Voltage bits
 11173                           ;	BORV = 3, Minimum setting
 11174  300002                     	org	3145730
 11175  300002  1F                 	db	31
 11176                           
 11177                           ;Config register CONFIG2H @ 0x300003
 11178                           ;	Watchdog Timer Enable bit
 11179                           ;	WDT = ON, WDT enabled
 11180                           ;	Watchdog Timer Postscale Select bits
 11181                           ;	WDTPS = 32768, 1:32768
 11182  300003                     	org	3145731
 11183  300003  1F                 	db	31
 11184                           
 11185                           ; Padding undefined space
 11186  300004                     	org	3145732
 11187  300004  FF                 	db	255
 11188                           
 11189                           ;Config register CONFIG3H @ 0x300005
 11190                           ;	CCP2 MUX bit
 11191                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 11192                           ;	PORTB A/D Enable bit
 11193                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 11194                           ;	Low-Power Timer1 Oscillator Enable bit
 11195                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 11196                           ;	MCLR Pin Enable bit
 11197                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 11198  300005                     	org	3145733
 11199  300005  83                 	db	131
 11200                           
 11201                           ;Config register CONFIG4L @ 0x300006
 11202                           ;	Stack Full/Underflow Reset Enable bit
 11203                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11204                           ;	Single-Supply ICSP Enable bit
 11205                           ;	LVP = ON, Single-Supply ICSP enabled
 11206                           ;	Extended Instruction Set Enable bit
 11207                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11208                           ;	Background Debugger Enable bit
 11209                           ;	DEBUG = 0x1, unprogrammed default
 11210  300006                     	org	3145734
 11211  300006  85                 	db	133
 11212                           
 11213                           ; Padding undefined space
 11214  300007                     	org	3145735
 11215  300007  FF                 	db	255
 11216                           
 11217                           ;Config register CONFIG5L @ 0x300008
 11218                           ;	Code Protection bit
 11219                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 11220                           ;	Code Protection bit
 11221                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 11222                           ;	Code Protection bit
 11223                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 11224                           ;	Code Protection bit
 11225                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 11226  300008                     	org	3145736
 11227  300008  0F                 	db	15
 11228                           
 11229                           ;Config register CONFIG5H @ 0x300009
 11230                           ;	Boot Block Code Protection bit
 11231                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 11232                           ;	Data EEPROM Code Protection bit
 11233                           ;	CPD = OFF, Data EEPROM not code-protected
 11234  300009                     	org	3145737
 11235  300009  C0                 	db	192
 11236                           
 11237                           ;Config register CONFIG6L @ 0x30000A
 11238                           ;	Write Protection bit
 11239                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 11240                           ;	Write Protection bit
 11241                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 11242                           ;	Write Protection bit
 11243                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 11244                           ;	Write Protection bit
 11245                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 11246  30000A                     	org	3145738
 11247  30000A  0F                 	db	15
 11248                           
 11249                           ;Config register CONFIG6H @ 0x30000B
 11250                           ;	Configuration Register Write Protection bit
 11251                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 11252                           ;	Boot Block Write Protection bit
 11253                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 11254                           ;	Data EEPROM Write Protection bit
 11255                           ;	WRTD = OFF, Data EEPROM not write-protected
 11256  30000B                     	org	3145739
 11257  30000B  E0                 	db	224
 11258                           
 11259                           ;Config register CONFIG7L @ 0x30000C
 11260                           ;	Table Read Protection bit
 11261                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 11262                           ;	Table Read Protection bit
 11263                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 11264                           ;	Table Read Protection bit
 11265                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 11266                           ;	Table Read Protection bit
 11267                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 11268  30000C                     	org	3145740
 11269  30000C  0F                 	db	15
 11270                           
 11271                           ;Config register CONFIG7H @ 0x30000D
 11272                           ;	Boot Block Table Read Protection bit
 11273                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 11274  30000D                     	org	3145741
 11275  30000D  40                 	db	64
 11276                           tosu	equ	0xFFF
 11277                           tosh	equ	0xFFE
 11278                           tosl	equ	0xFFD
 11279                           stkptr	equ	0xFFC
 11280                           pclatu	equ	0xFFB
 11281                           pclath	equ	0xFFA
 11282                           pcl	equ	0xFF9
 11283                           tblptru	equ	0xFF8
 11284                           tblptrh	equ	0xFF7
 11285                           tblptrl	equ	0xFF6
 11286                           tablat	equ	0xFF5
 11287                           prodh	equ	0xFF4
 11288                           prodl	equ	0xFF3
 11289                           indf0	equ	0xFEF
 11290                           postinc0	equ	0xFEE
 11291                           postdec0	equ	0xFED
 11292                           preinc0	equ	0xFEC
 11293                           plusw0	equ	0xFEB
 11294                           fsr0h	equ	0xFEA
 11295                           fsr0l	equ	0xFE9
 11296                           wreg	equ	0xFE8
 11297                           indf1	equ	0xFE7
 11298                           postinc1	equ	0xFE6
 11299                           postdec1	equ	0xFE5
 11300                           preinc1	equ	0xFE4
 11301                           plusw1	equ	0xFE3
 11302                           fsr1h	equ	0xFE2
 11303                           fsr1l	equ	0xFE1
 11304                           bsr	equ	0xFE0
 11305                           indf2	equ	0xFDF
 11306                           postinc2	equ	0xFDE
 11307                           postdec2	equ	0xFDD
 11308                           preinc2	equ	0xFDC
 11309                           plusw2	equ	0xFDB
 11310                           fsr2h	equ	0xFDA
 11311                           fsr2l	equ	0xFD9
 11312                           status	equ	0xFD8

Data Sizes:
    Strings     381
    Constant    0
    Data        0
    BSS         298
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAMh          95     93      95
    COMRAMl          31     30      31
    BANK0h          106     90      96
    BANK0l           21      0       9
    BANK1           256      0      80
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), STR_38(CODE[3]), STR_33(CODE[3]), STR_28(CODE[3]), 
		 -> STR_24(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), STR_38(CODE[3]), STR_33(CODE[3]), STR_28(CODE[3]), 
		 -> STR_24(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 42
		 -> vfpfcnvrt@ct(COMRAMl[3]), STR_13(CODE[3]), STR_12(CODE[20]), STR_11(CODE[27]), 
		 -> STR_10(CODE[34]), STR_9(CODE[8]), STR_8(CODE[14]), STR_7(CODE[41]), 
		 -> STR_6(CODE[42]), STR_5(CODE[33]), STR_4(CODE[41]), STR_3(CODE[38]), 
		 -> STR_2(CODE[33]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 42
		 -> vfpfcnvrt@ct(COMRAMl[3]), STR_13(CODE[3]), STR_12(CODE[20]), STR_11(CODE[27]), 
		 -> STR_10(CODE[34]), STR_9(CODE[8]), STR_8(CODE[14]), STR_7(CODE[41]), 
		 -> STR_6(CODE[42]), STR_5(CODE[33]), STR_4(CODE[41]), STR_3(CODE[38]), 
		 -> STR_2(CODE[33]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0h[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 200
		 -> buffer(BANK2[200]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0h[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_13(CODE[3]), STR_12(CODE[20]), STR_11(CODE[27]), STR_10(CODE[34]), 
		 -> STR_9(CODE[8]), STR_8(CODE[14]), STR_7(CODE[41]), STR_6(CODE[42]), 
		 -> STR_5(CODE[33]), STR_4(CODE[41]), STR_3(CODE[38]), STR_2(CODE[33]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0h[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0h[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_13(CODE[3]), STR_12(CODE[20]), STR_11(CODE[27]), STR_10(CODE[34]), 
		 -> STR_9(CODE[8]), STR_8(CODE[14]), STR_7(CODE[41]), STR_6(CODE[42]), 
		 -> STR_5(CODE[33]), STR_4(CODE[41]), STR_3(CODE[38]), STR_2(CODE[33]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 42
		 -> STR_13(CODE[3]), STR_12(CODE[20]), STR_11(CODE[27]), STR_10(CODE[34]), 
		 -> STR_9(CODE[8]), STR_8(CODE[14]), STR_7(CODE[41]), STR_6(CODE[42]), 
		 -> STR_5(CODE[33]), STR_4(CODE[41]), STR_3(CODE[38]), STR_2(CODE[33]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0h[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0h[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAMh[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0h[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0h[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0h[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0h[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0h[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 42
		 -> STR_13(CODE[3]), STR_12(CODE[20]), STR_11(CODE[27]), STR_10(CODE[34]), 
		 -> STR_9(CODE[8]), STR_8(CODE[14]), STR_7(CODE[41]), STR_6(CODE[42]), 
		 -> STR_5(CODE[33]), STR_4(CODE[41]), STR_3(CODE[38]), STR_2(CODE[33]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 200
		 -> buffer(BANK2[200]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0h[2]), 

    S896_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> buffer(BANK2[200]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 200
		 -> buffer(BANK2[200]), 

    send_string_no_lib@p	PTR unsigned char  size(2) Largest target is 200
		 -> gotten(BIGRAMl[1]), buffer(BANK2[200]), STR_1(CODE[60]), 

    main@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> gotten(BIGRAMl[1]), 


Critical Paths under _main in COMRAMh

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _atoi->_isspace
    _print_line->_send_string_no_lib
    _send_string_no_lib->_send_byte_no_lib

Critical Paths under _main in COMRAMl

    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK0h

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK0l

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   51274
                                             88 COMRAMh    5     5      0
                           _delay_ms
                  _is_byte_available
                         _print_line
                   _read_byte_no_lib
                 _send_string_no_lib
                         _setupPorts
                        _setupSerial
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             30    10     20   48616
                                             62 BANK0h    28     8     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   46577
                                             86 COMRAMh    2     2      0
                                             56 BANK0h     6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           58    52      6   46176
                                             66 COMRAMh   20    14      6
                                              0 COMRAMl   30    30      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    6695
                                             27 COMRAMh   39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAMh    8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAMh    6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAMh    6     4      2
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6    1365
                                              0 COMRAMh   11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   23608
                                             45 COMRAMh   12     5      7
                                              0 BANK0h    56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1020
                                              6 COMRAMh    8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     541
                                              0 COMRAMh    6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAMh   10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAMh   20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAMh   14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAMh   10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAMh    8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAMh   16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAMh    4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                              0 COMRAMh   25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAMh   12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAMh   12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAMh   25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAMh    6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAMh    8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6334
                                             27 COMRAMh   36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4533
                                             16 COMRAMh   11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAMh    4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1691
                                              9 COMRAMh    7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAMh    4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAMh   18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAMh   26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1645
                                              9 COMRAMh    8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1290
                                              0 COMRAMh    9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1382
                                              7 COMRAMh   15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAMh    7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAMh    6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     541
                                              0 COMRAMh    6     2      4
 ---------------------------------------------------------------------------------
 (1) _setupSerial                                          1     1      0       2
 ---------------------------------------------------------------------------------
 (1) _setupPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_byte_no_lib                                     1     1      0      23
                                              0 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (1) _print_line                                           0     0      0    1131
                 _send_string_no_lib
 ---------------------------------------------------------------------------------
 (1) _send_string_no_lib                                   2     0      2    1131
                                              1 COMRAMh    2     0      2
                   _send_byte_no_lib
 ---------------------------------------------------------------------------------
 (2) _send_byte_no_lib                                     1     1      0      22
                                              0 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (1) _is_byte_available                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             4     2      2     122
                                              0 COMRAMh    4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_ms
   _is_byte_available
   _print_line
     _send_string_no_lib
       _send_byte_no_lib
   _read_byte_no_lib
   _send_string_no_lib
   _setupPorts
   _setupSerial
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower
         _xtoa
           _isalpha
           _isupper
           _pad
           _toupper
             _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMhh           EEA      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      39        0.0%
BANK14             100      0       0      36        0.0%
BITBANK13          100      0       0      34        0.0%
BANK13             100      0       0      35        0.0%
BITBANK12          100      0       0      32        0.0%
BANK12             100      0       0      33        0.0%
BITBANK11          100      0       0      30        0.0%
BANK11             100      0       0      31        0.0%
BITBANK10          100      0       0      28        0.0%
BANK10             100      0       0      29        0.0%
BITBANK9           100      0       0      26        0.0%
BANK9              100      0       0      27        0.0%
BITBANK8           100      0       0      24        0.0%
BANK8              100      0       0      25        0.0%
BITBANK7           100      0       0      22        0.0%
BANK7              100      0       0      23        0.0%
BITBANK6           100      0       0      20        0.0%
BANK6              100      0       0      21        0.0%
BITBANK5           100      0       0      18        0.0%
BANK5              100      0       0      19        0.0%
BITBANK4           100      0       0      16        0.0%
BANK4              100      0       0      17        0.0%
BITBANK3           100      0       0      14        0.0%
BANK3              100      0       0      15        0.0%
BITBANK2           100      0       0      12        0.0%
BANK2              100      0      C8      13       78.1%
BITBANK1           100      0       0      10        0.0%
BANK1              100      0      50      11       31.2%
BITBANK15           80      0       0      40        0.0%
BANK15              80      0       0      37        0.0%
BIGRAMhl            74      0       0      42        0.0%
BANK0h              6A     5A      60       8       90.6%
BITBANK0h           6A      0       0       6        0.0%
COMRAMh             5F     5D      5F       2      100.0%
BITCOMRAMh          5F      0       0       0        0.0%
BIGRAMl             1F      0       0      43        0.0%
BITCOMRAMl          1F      0       0       1        0.0%
COMRAMl             1F     1E      1F       3      100.0%
BITBANK0l           15      0       0       7        0.0%
BANK0l              15      0       9       9       42.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       4        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FF      38        0.0%
DATA                 0      0     1FF       5        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Nov 05 18:11:12 2021

               ___fldiv@aexp 0019                 ___fldiv@bexp 0018                 ___fldiv@sign 0011  
                         l43 C0F2                           l52 C03E                           l46 C108  
                         l49 C058                           l78 D4D8                           _X1 00F8  
               ___awdiv@sign 0006          ___wmul@multiplicand 0003                          l111 C176  
                        l104 C0B0                          l121 C062                          l122 C060  
                        l130 C5C0                          l107 C160                          l115 C07C  
                        l124 C074                          l116 C07A                          l109 C15C  
                        l117 C08A                          l133 C0D6                          l118 C090  
                        l403 CCA4                          l260 D02E                          l430 CDAA  
                        l247 D1B6                          l407 C1E6                          l364 C902  
                        l703 C39E                          l720 DE66                          l392 C6CC  
                        l377 C77C                          l715 E042                          l811 C442  
                        l717 DEA2                          l661 E65C                          l726 DEE8  
                        l398 CC5E                          l670 E92C                          l662 E64A  
                        l751 E46C                          l663 E610                          l728 DF60  
                        l905 DCA8                          l729 DF4E                          l754 E2FE  
                        l747 E108                          l923 FE7E                          l764 E42E  
                        l756 E376                          l861 C804                          l757 E364  
                        l941 F612                          l678 E776                          l863 C83E  
                        l687 E846                          l688 E834                          l874 CA34  
                        l858 C7C2                          l877 CA76                          l885 DA6A  
                        l879 CAA2                          l887 DA72                          l969 FA52  
                        _abs C294                          _lcd 000F83                          _pad C77E  
               ___awmod@sign 0006                          wreg 000FE8                 ___flmul@aexp 0012  
               ___flmul@bexp 0013                 ___flmul@sign 000D                 ___flmul@temp 0018  
               ___flmul@prod 0014                 ___fltol@exp1 000A                         l1003 D72C  
                       l1012 D7CA                         l1005 D734                         l1102 C2D2  
                       l1201 C4A0                         l1130 D33E                         l1026 D966  
                       l1042 EA20                         l1211 CECA                         ?_abs 0013  
                       l1028 D9C8                         l1133 D346                         l1221 C556  
                       l1142 D636                         l1207 C13E                         l1071 EF9C  
                       l1057 F224                         l1226 C55E                         l1234 C4F6  
                       l1155 C1AE                         l1163 C3F0                         l1139 D6F2  
                       l1083 C61A                         l3100 E488                         l1084 C622  
                       l1149 C292                         l1245 C256                         l3110 E4BC  
                       l3102 E48A                         l1094 CBA0                         l1239 C4FE  
                       l1184 C9CC                         l1192 C358                         l3120 E4EE  
                       l3104 E49A                         l3112 E4C4                         l1169 C21E  
                       l4010 DA42                         l4002 D9CA                         l3210 E6C6  
                       l3202 E68E                         l3130 E524                         l3122 E4F4  
                       l3114 E4D4                         l3106 E4AA                         l1195 C030  
                       l1099 C2CA                         l3300 C322                         l4020 DA9A  
                       l4012 DA44                         l4004 D9EA                         l3212 E6CA  
                       l3204 E69E                         l3220 E6EA                         l3140 E560  
                       l3132 E534                         l3124 E502                         l3116 E4DA  
                       l3108 E4BA                         l4100 F33C                         l3302 C334  
                       l3310 C11A                         l4030 DB3A                         l4022 DAA0  
                       l4014 DA5E                         l4006 DA12                         l3222 E710  
                       l3230 E766                         l3214 E6D8                         l3206 E6AC  
                       l3150 E57E                         l3142 E56E                         l3134 E536  
                       l3126 E504                         l3118 E4EC                         l4102 F34E  
                       l3400 CFD8                         l3304 C338                         l3312 C132  
                       l4040 DBE2                         l4032 DB40                         l4024 DAA8  
                       l4016 DA7A                         l4008 DA32                         l3240 E7BA  
                       l3232 E78C                         l3224 E744                         l3216 E6DA  
                       l3208 E6BA                         l3160 E592                         l3152 E582  
                       l3144 E572                         l3128 E514                         l3136 E53E  
                       l4200 F738                         l4120 F422                         l4104 F36A  
                       l4112 F3B4                         l3320 C220                         l3090 C950  
                       l3082 C904                         l3330 D030                         l3402 CFDE  
                       l3306 C10A                         l4050 DC44                         l4042 DBFC  
                       l4034 DB46                         l4026 DAB2                         l4018 DA8C  
                       l3410 DCAA                         l3250 E7E4                         l3242 E7C8  
                       l3234 E79C                         l3226 E746                         l3218 E6E4  
                       l3170 E5A6                         l3162 E596                         l3154 E586  
                       l3146 E576                         l3138 E54E                         l4210 F84C  
                       l4202 F748                         l4122 F43E                         l4114 F3DA  
                       l4130 F45A                         l4106 F382                         l3324 C0B2  
                       l3092 C986                         l3084 C916                         l3340 D074  
                       l3332 D034                         l3404 CFEE                         l3308 C116  
                       l4052 DC4A                         l4060 DC80                         l4044 DC16  
                       l4028 DAB8                         l4036 DBAA                         l3500 DED8  
                       l3420 DCE6                         l3412 DCB6                         l3260 E816  
                       l3252 E7F4                         l3244 E7CA                         l3228 E756  
                       l3180 E5F8                         l3172 E5AA                         l3164 E59A  
                       l3156 E58A                         l3148 E57A                         l3316 C1E8  
                       l4300 FC96                         l4220 F8EC                         l4204 F75C  
                       l4212 F852                         l4140 F4E4                         l4132 F474  
                       l4108 F38C                         l3326 C0CE                         l3086 C928  
                       l3350 D0CA                         l3342 D094                         l3334 D042  
                       l3406 D00E                         l4054 DC5C                         l4038 DBC4  
                       l4046 DC24                         l3510 DF18                         l3502 DEE6  
                       l3430 DD16                         l3422 DCF6                         l3414 DCC4  
                       l3270 E870                         l3262 E82C                         l3246 E7D8  
                       l3238 E7B0                         l3254 E7F6                         l3190 E63C  
                       l3182 E608                         l3166 E59E                         l3158 E58E  
                       l3174 E5AE                         l4310 FCDA                         l4302 FCA4  
                       l4230 F9C8                         l4222 F91E                         l4214 F870  
                       l4206 F7C0                         l4150 F5BC                         l4142 F53E  
                       l4118 F410                         l4070 F24E                         l3088 C932  
                       l3360 D14C                         l3352 D0DE                         l3344 D098  
                       l3336 D062                         l4056 DC68                         l4048 DC36  
                       l3520 DF8A                         l3512 DF46                         l3504 DEF8  
                       l3440 DD4C                         l3432 DD1C                         l3424 DCF8  
                       l3416 DCC6                         l3600 E198                         l3280 E8EC  
                       l3272 E8AA                         l3248 E7E0                         l3256 E804  
                       l3192 E63E                         l3184 E61E                         l3176 E5B2  
                       l3168 E5A2                         l3096 E46E                         l4320 FD10  
                       l4312 FCE2                         l4304 FCB4                         l4240 FA2A  
                       l4232 F9CE                         l4224 F92E                         l4216 F8A4  
                       l4208 F818                         l4160 F606                         l4152 F5C0  
                       l4144 F572                         l4136 F4AA                         l4080 F29E  
                       l4072 F256                         l4064 F226                         l4400 D7FE  
                       l3370 D196                         l3362 D14E                         l3354 D0EC  
                       l3346 D0A4                         l3338 D066                         l4058 DC70  
                       l3530 E002                         l3522 DFB4                         l3506 DF06  
                       l3450 DD8C                         l3442 DD5C                         l3434 DD2A  
                       l3418 DCD6                         l3426 DD00                         l3610 E1DA  
                       l3602 E1A4                         l3290 E90C                         l3282 E8F0  
                       l3266 E856                         l3274 E8AC                         l3258 E808  
                       l3194 E648                         l3186 E62A                         l3178 E5DC  
                       l3098 E47A                         l4330 FD6C                         l4322 FD18  
                       l4314 FCF2                         l4306 FCB8                         l4250 FAE0  
                       l4242 FA3E                         l4234 FA02                         l4226 F93E  
                       l4218 F8D6                         l4170 F642                         l4154 F5D2  
                       l4162 F61E                         l4146 F57A                         l4138 F4DE  
                       l4090 F2D6                         l4082 F2AC                         l4074 F27A  
                       l4066 F230                         l4402 D810                         l4410 D870  
                       l4500 C05C                         l3364 D160                         l3356 D0FE  
                       l3348 D0C2                         l3380 CEFE                         l3700 C880  
                       l3540 E038                         l3532 E01E                         l3516 DF70  
                       l3524 DFB8                         l3508 DF0A                         l3452 DD9C  
                       l3460 DDBC                         l3444 DD5E                         l3436 DD2C  
                       l3428 DD10                         l3620 E23C                         l3612 E1EA  
                       l3604 E1B2                         l3292 E91A                         l3284 E8FE  
                       l3276 E8BC                         l3268 E862                         l3196 E66A  
                       l3188 E62E                         l4340 FDAC                         l4332 FD74  
                       l4324 FD24                         l4316 FCFA                         l4308 FCC8  
                       l4260 FB30                         l4252 FAF4                         l4244 FA4A  
                       l4236 FA16                         l4228 F972                         l4180 F6A8  
                       l4172 F65E                         l4156 F5E4                         l4148 F5AC  
                       l4092 F2DA                         l4084 F2BE                         l4076 F284  
                       l4068 F240                         l4420 D906                         l4412 D880  
                       l4502 C070                         l3358 D12C                         l3366 D166  
                       l3390 CF56                         l3382 CF02                         l3374 CECC  
                       l3710 C8B6                         l3702 C892                         l3534 E022  
                       l3526 DFD2                         l3518 DF7C                         l3470 DDFA  
                       l3462 DDCC                         l3454 DDA4                         l3438 DD3C  
                       l3446 DD66                         l3630 E2E4                         l3622 E258  
                       l3614 E204                         l3606 E1BE                         l3550 E050  
                       l3294 E91C                         l3286 E904                         l3278 E8CC  
                       l3198 E67A                         l4350 FDE8                         l4342 FDBE  
                       l4326 FD2A                         l4334 FD7A                         l4318 FD08  
                       l4270 FB64                         l4262 FB3E                         l4254 FB06  
                       l4246 FA6E                         l4238 FA1A                         l4190 F6F0  
                       l4182 F6BA                         l4174 F694                         l4158 F5EC  
                       l4086 F2CA                         l4094 F2E0                         l4078 F28C  
                       l4430 D97A                         l4422 D924                         l4414 D886  
                       l4406 D84A                         l4510 E972                         l4440 D1CC  
                       l3368 D176                         l3392 CF6A                         l3384 CF10  
                       l3376 CED0                         l3712 C8CC                         l3704 C89A  
                       l3720 C8E2                         l3536 E030                         l3528 DFE8  
                       l3480 DE42                         l3472 DE0A                         l3464 DDCC  
                       l3456 DDA8                         l3448 DD76                         l3640 E320  
                       l3632 E2EE                         l3624 E282                         l3616 E214  
                       l3608 E1CE                         l3560 E090                         l3552 E05E  
                       l3288 E906                         l4360 FE40                         l4352 FDEE  
                       l4344 FDCA                         l4336 FD8C                         l4328 FD50  
                       l4280 FB96                         l4272 FB74                         l4264 FB4E  
                       l4256 FB14                         l4248 FAD2                         l4192 F6FE  
                       l4184 F6CC                         l4176 F69C                         l4168 F630  
                       l4096 F306                         l4088 F2D2                         l4432 D98A  
                       l4424 D93E                         l4416 D88C                         l4408 D85C  
                       l4600 EDFA                         l4512 E976                         l4504 E92E  
                       l4450 D22A                         l4442 D1D0                         l3394 CF78  
                       l3386 CF30                         l3378 CEDE                         l3298 C316  
                       l3722 C8F2                         l3714 C8D4                         l3706 C8A2  
                       l3730 C6D2                         l3538 E036                         l3490 DE90  
                       l3482 DE56                         l3474 DE1A                         l3650 E392  
                       l3642 E32E                         l3634 E2FC                         l3626 E2B8  
                       l3618 E230                         l3570 E0C0                         l3562 E096  
                       l3554 E060                         l3802 C1B0                         l3810 CCA6  
                       l4362 FE48                         l4346 FDD2                         l4338 FDA6  
                       l4290 FC3E                         l4282 FBA8                         l4274 FB78  
                       l4266 FB52                         l4258 FB1C                         l4194 F716  
                       l4186 F6DA                         l4178 F6A0                         l4434 D9A0  
                       l4426 D958                         l4418 D8EA                         l4602 EE0C  
                       l4530 E9A8                         l4522 E99C                         l4514 E982  
                       l4506 E952                         l4700 C0D8                         l4460 D256  
                       l4444 D1D4                         l3396 CFA6                         l3388 CF4E  
                       l3724 C8FA                         l3716 C8D6                         l3708 C8B0  
                       l3740 C702                         l3732 C6E0                         l3492 DEA0  
                       l3484 DE64                         l3476 DE2A                         l3468 DDE0  
                       l3660 E3FC                         l3652 E3A0                         l3644 E35C  
                       l3636 E30E                         l3628 E2C6                         l3580 E0F8  
                       l3572 E0C2                         l3564 E0A6                         l3556 E070  
                       l3548 E044                         l3804 C1C6                         l3820 CCFC  
                       l3812 CCBC                         l4364 FE58                         l4356 FE22  
                       l4348 FDE2                         l4292 FC46                         l4284 FBAC  
                       l4276 FB7E                         l4268 FB58                         l4196 F728  
                       l4188 F6DE                         l4428 D974                         l4380 D74A  
                       l4372 D6F4                         l4620 EF38                         l4604 EE22  
                       l4612 EE8C                         l4516 E984                         l4540 EA0E  
                       l4508 E960                         l4702 C0E4                         l4710 C04E  
                       l4470 D2FE                         l4462 D28A                         l4454 D230  
                       l4446 D1F0                         l4438 D1B8                         l3398 CFC6  
                       l3718 C8DC                         l3750 C748                         l3742 C714  
                       l3734 C6E8                         l3494 DEB2                         l3486 DE70  
                       l3478 DE32                         l3670 E452                         l3662 E416  
                       l3654 E3CA                         l3638 E31C                         l3590 E148  
                       l3582 E118                         l3574 E0D2                         l3566 E0AC  
                       l3558 E080                         l3806 C1D6                         l3822 CD0C  
                       l3902 C444                         l3910 C536                         l4366 FE5E  
                       l4358 FE34                         l4278 FB84                         l4286 FBB2  
                       l4294 FC4A                         l4198 F730                         l4390 D78A  
                       l4382 D752                         l4374 D704                         l4630 EFD4  
                       l4622 EF6C                         l4614 EEBA                         l4606 EE30  
                       l4550 EA9A                         l4542 EA2E                         l4534 E9AE  
                       l4526 E9A2                         l4518 E996                         ?_pad 0011  
                       l4704 C0EE                         l4712 C032                         l4472 D310  
                       l4456 D246                         l4448 D226                         l3760 C774  
                       l3752 C750                         l3744 C71C                         l3736 C6EC  
                       l3728 C6CE                         l3496 DEC8                         l3488 DE8E  
                       l3664 E432                         l3672 E458                         l3648 E386  
                       l3656 E3CE                         l3592 E152                         l3584 E128  
                       l3576 E0E2                         l3568 E0B2                         l3680 C36A  
                       l3832 CD36                         l3824 CD10                         l3816 CCD0  
                       l3920 D558                         l3904 C454                         l3912 C548  
                       l4296 FC68                         l4288 FC0A                         l4480 CDAC  
                       l4392 D792                         l4384 D772                         l4376 D706  
                       l4632 EFF8                         l4608 EE60                         l4560 EB1C  
                       l4552 EAA8                         l4544 EA30                         l4720 C414  
                       l4706 C040                         l4730 C0A0                         l4474 D322  
                       l4466 D2C0                         l4458 D24E                         l3690 C85A  
                       l3754 C756                         l3746 C724                         l3738 C6FA  
                       l3498 DECE                         l3770 C690                         l3674 E45C  
                       l3666 E442                         l3658 E3E8                         l3594 E168  
                       l3578 E0F2                         l3850 CD9A                         l3842 CD5E  
                       l3834 CD40                         l3826 CD1E                         l3818 CCFA  
                       l3930 D626                         l3922 D56C                         l3906 C500  
                       l4298 FC84                         l4490 CE22                         l4482 CDD6  
                       l4394 D7AE                         l4386 D77A                         l4378 D720  
                       l4650 F136                         l4634 F00E                         l4642 F094  
                       l4618 EF26                         l4570 EB9E                         l4554 EAC8  
                       l4562 EB2E                         l4546 EA54                         l4538 E9BA  
                       l4722 C430                         l4714 C3F2                         l4708 C048  
                       l4740 C0AE                         l4732 C0A2                         l3860 C7AE  
                       l3692 C85E                         l3684 C840                         l3748 C732  
                       l3756 C75C                         l3772 C6A0                         l3764 C624  
                       l3780 CBA2                         l3668 E450                         l3596 E174  
                       l3588 E13C                         l3844 CD6A                         l3836 CD4A  
                       l3940 D6E2                         l3924 D57A                         l3932 D65A  
                       l3916 D4E2                         l4492 CE3E                         l4396 D7BE  
                       l4388 D784                         l4660 F1B4                         l4644 F0CA  
                       l4636 F01C                         l4628 EFB0                         l4580 EC40  
                       l4572 EBCE                         l4564 EB4E                         l4556 EAD6  
                       l4548 EA8A                         l4716 C404                         l4820 D372  
                       l4734 C0A8                         l4726 C092                         l3870 C812  
                       l3862 C7BA                         l3854 C77E                         l3694 C86C  
                       l3686 C844                         l3758 C76C                         l3774 C6C4  
                       l3766 C652                         l3790 CC2C                         l3782 CBD0  
                       l3598 E18C                         l3678 C35A                         l3846 CD7A  
                       l3934 D696                         l3918 D502                         l4494 CE50  
                       l4486 CDE2                         l4662 F1C8                         l4646 F100  
                       l4638 F058                         l4590 ED08                         l4582 EC64  
                       l4574 EBF2                         l4566 EB5E                         l4718 C40C  
                       l4830 D386                         l4822 D376                         l4814 D348  
                       l4744 C140                         l4760 C08E                         l4736 C0AA  
                       l4728 C094                         l3872 C826                         l3864 C7CE  
                       l3856 C78C                         l3696 C874                         l3688 C852  
                       l3776 C6CA                         l3768 C662                         l3792 CC3E  
                       l3784 CBE0                         l3848 CD8A                         l3880 CAA4  
                       l3936 D6AA                         l3928 D5EA                         l4496 CE90  
                       l4488 CDF0                         l3944 C258                         l3952 C4D8  
                       l4648 F126                         l4656 F182                         l4592 ED3E  
                       l4584 EC88                         l4576 EC24                         l4568 EB8E  
                       l4672 F1EE                         l4840 D3BC                         l4832 D392  
                       l4824 D37E                         l4816 D350                         l4754 C174  
                       l4746 C14E                         l4690 C58E                         l4738 C0AC  
                       l3970 C3EA                         l3962 C3A0                         l3866 C7E2  
                       l3858 C7A0                         l3698 C878                         l3794 CC4C  
                       l3786 CC0E                         l3882 CAC4                         l3938 D6D2  
                       l3954 C4EA                         l4674 F212                         l4658 F1A6  
                       l4666 F1D4                         l4594 ED74                         l4586 ECD0  
                       l4914 E9E0                         l4850 D424                         l4842 D3D8  
                       l4834 D3A6                         l4818 D366                         l4748 C16E  
                       l4684 C560                         l3964 C3A4                         l4916 D274  
                       l3980 C9FA                         l3876 C294                         l3868 C7E6  
                       l3796 CC9C                         l3788 CC1E                         l3884 CB02  
                       l3892 CB42                         l3948 C4A2                         l4668 F1E2  
                       l4692 C5C2                         l4860 D47C                         l4852 D43C  
                       l4844 D3E4                         l4836 D3B4                         l4686 C564  
                       l4758 C076                         l3958 C178                         l3966 C3B8  
                       l3990 CA40                         l3982 CA08                         l3974 C9CE  
                       l3878 C2AE                         l3798 CCA2                         l3894 CB54  
                       l3886 CB2A                         l4694 C5CA                         l4870 D4C8  
                       l4862 D484                         l4854 D454                         l4846 D3FC  
                       l4838 D3B8                         l4688 C58A                         l3968 C3E6  
                       l3992 CA54                         l3984 CA1A                         l3976 C9E2  
                       l3888 CB36                         l4696 C5D8                         l4872 D4D4  
                       l4864 D49A                         l4856 D460                         l4848 D414  
                       l3994 CA58                         l3978 C9EE                         l3898 CB98  
                       l4698 C5FE                         l4866 D4A6                         l4858 D464  
                       l3996 CA84                         l3988 CA2C                         l4868 D4B2  
                       l3998 CA96                         STR_1 FE81                         STR_2 FF58  
                       STR_3 FF10                         STR_4 FEE7                         STR_5 FF79  
                       STR_6 FEBD                         STR_8 FFC9                         STR_9 FFD7  
                       u4000 DEC8                         u4001 DEC4                         u4010 DEE6  
                       u4011 DEE2                         u4100 E030                         u4020 DF06  
                       u3300 E488                         u4101 E02C                         u4021 DF02  
                       u3301 E484                         u4030 DF18                         u4110 E05E  
                       u3310 E49A                         u4031 DF14                         u4111 E05A  
                       u3311 E496                         u5000 D9FC                         u4040 DF46  
                       u4200 E2FC                         u4120 E070                         u3400 E5F4  
                       u3320 E4AA                         u4041 DF42                         u4201 E2F8  
                       u4121 E06C                         u3401 E5EE                         u3321 E4A6  
                       u5010 DA12                         u4050 DF5C                         u4210 E31C  
                       u4130 E080                         u3410 E5F6                         u3330 E4EC  
                       u5011 DA0E                         u4051 DF58                         u4211 E318  
                       u4131 E07C                         u3331 E4E8                         u3260 C916  
                       u5100 DC24                         u5020 DA42                         u4300 C852  
                       u4060 DF70                         u4220 E32E                         u4140 E0C0  
                       u3500 E710                         u3420 E61E                         u3340 E502  
                       u3261 C912                         u5101 DC20                         u5021 DA3E  
                       u4301 C84E                         u4061 DF6C                         u4221 E32A  
                       u4141 E0BC                         u3501 E70C                         u3421 E61A  
                       u3341 E4FE                         u3270 C928                         u5110 DC36  
                       u5030 DA5E                         u4310 C86C                         u4070 DF8A  
                       u4230 E35C                         u4150 E0D2                         u3510 E756  
                       u3430 E63C                         u3350 E514                         u3271 C924  
                       u5111 DC32                         u5031 DA5A                         u4311 C868  
                       u4071 DF86                         u4231 E358                         u4151 E0CE  
                       u3511 E752                         u3431 E638                         u3351 E510  
                       u3280 C950                         u5120 DC44                         u5040 DA8C  
                       u4320 C892                         u4400 C748                         u4080 DFD2  
                       u4240 E372                         u4160 E0E2                         u3600 E842  
                       u3520 E78C                         u3440 E65C                         u3360 E524  
                       u5200 F336                         u6000 E952                         u3281 C94C  
                       u5121 DC40                         u5041 DA88                         u4321 C88E  
                       u4401 C744                         u4081 DFCE                         u4241 E36E  
                       u4161 E0DE                         u3601 E83E                         u3521 E788  
                       u3441 E658                         u3361 E520                         u6001 E94E  
                       u3290 C986                         u5130 DC5C                         u5050 DA9A  
                       u4330 C8B0                         u4410 C76C                         u4090 E002  
                       u4250 E386                         u4170 E118                         u3610 E856  
                       u3530 E79C                         u3450 E66A                         u3370 E560  
                       u5210 F34E                         u6010 EA20                         u3291 C982  
                       u5131 DC58                         u5051 DA96                         u4331 C8AC  
                       u4411 C768                         u4091 DFFE                         u4251 E382  
                       u4171 E114                         u3611 E852                         u3531 E798  
                       u3451 E666                         u3371 E55C                         u5211 F34A  
                       u6011 EA1C                         u3700 C132                         u5060 DBC4  
                       u4340 C8CC                         u4420 C652                         u4260 E3A0  
                       u4180 E128                         u4500 C1C6                         u3620 E870  
                       u3540 E7C8                         u3460 E67A                         u3380 E56E  
                       u5300 F5E4                         u5220 F3DA                         u5140 F24E  
                       u6100 EBF2                         u6020 EA2E                         u3701 C12E  
                       u5061 DBC0                         u4341 C8C8                         u4421 C64E  
                       u4261 E39C                         u4181 E124                         u4501 C1C2  
                       u3621 E86C                         u3541 E7C4                         u3461 E676  
                       u3381 E56A                         u5301 F5E0                         u5221 F3D6  
                       u5141 F24A                         u6101 EBEE                         u6021 EA2A  
                       u5070 DBE2                         u4350 C8F2                         u4430 C690  
                       u4270 E3E8                         u4190 E2A2                         u3630 E8AA  
                       u3550 E7D8                         u3470 E6AC                         u3390 E5DC  
                       u4510 CCBC                         u3710 C218                         u5310 F606  
                       u5230 F408                         u5150 F29E                         u6110 EC64  
                       u6030 EA54                         u5071 DBDE                         u4351 C8EE  
                       u4431 C68C                         u4271 E3E4                         u3631 E8A6  
                       u3551 E7D4                         u3471 E6A8                         u3391 E5D8  
                       u4511 CCB8                         u3711 C212                         u5311 F602  
                       u5231 F402                         u5151 F29A                         u6111 EC60  
                       u6031 EA50                         u3800 D12C                         u4600 C804  
                       u5080 DBFC                         u4360 C6E0                         u4440 C6C4  
                       u4280 E416                         u3640 E8BC                         u3560 E7F4  
                       u3480 E6BA                         u4520 CCF0                         u3720 C21A  
                       u5400 F6FE                         u5320 F62C                         u5240 F40A  
                       u5160 F2AC                         u6200 EFD4                         u6120 EC88  
                       u6040 EA9A                         u3801 D128                         u4601 C800  
                       u5081 DBF8                         u4361 C6DC                         u4441 C6C0  
                       u4281 E412                         u3641 E8B8                         u3561 E7F0  
                       u3481 E6B6                         u5401 F6FA                         u5321 F628  
                       u5161 F2A8                         u6201 EFD0                         u6121 EC84  
                       u6041 EA96                         u3810 D176                         u4610 C812  
                       u5090 DC16                         u4370 C6FA                         u4450 CBD0  
                       u4290 E450                         u3650 E8CC                         u3570 E804  
                       u3490 E6D8                         u4530 CD1E                         u5410 F728  
                       u5330 F642                         u5250 F422                         u5170 F2BE  
                       u3730 C250                         u6210 EFF8                         u6130 ED3E  
                       u6050 EB16                         u3811 D172                         u4611 C80E  
                       u5091 DC12                         u4371 C6F6                         u4451 CBCC  
                       u4291 E44C                         u4195 E298                         u3651 E8C8  
                       u3571 E800                         u3491 E6D4                         u4531 CD1A  
                       u5411 F724                         u5331 F63E                         u5251 F41E  
                       u5171 F2BA                         u3731 C24A                         u6211 EFF4  
                       u6131 ED3A                         u6051 EB10                         u6300 C14E  
                       u3820 CEDE                         u4620 C2AE                         u4380 C714  
                       u3900 DCE6                         u4460 CC0E                         u3660 E8EC  
                       u3580 E816                         u4540 CD32                         u4700 C48E  
                       u5500 FAF4                         u5420 F870                         u5340 F65E  
                       u5260 F4A6                         u5180 F306                         u3740 C252  
                       u6220 F0CA                         u6140 ED74                         u6060 EB18  
                       u6301 C14A                         u3821 CEDA                         u4621 C2AA  
                       u4381 C710                         u3901 DCE2                         u4461 CC0A  
                       u3661 E8E8                         u3581 E812                         u4541 CD2E  
                       u4525 CCE6                         u5501 FAF0                         u5421 F86C  
                       u5341 F65A                         u5261 F4A2                         u5181 F302  
                       u6221 F0C6                         u6141 ED70                         u6310 C15C  
                       u3750 D042                         u3830 CF10                         u4390 C732  
                       u3910 DD2A                         u4470 CC2C                         u3670 E8FE  
                       u3590 E82C                         u4550 CD5A                         u4630 CAE4  
                       u4710 C4A0                         u5510 FB06                         u5430 F8D6  
                       u5350 F694                         u5270 F53A                         u5190 F334  
                       u6230 F100                         u6150 EE0C                         u6070 EB2E  
                       u6311 C158                         u3751 D03E                         u3831 CF0C  
                       u4391 C72E                         u3911 DD26                         u4471 CC28  
                       u3671 E8FA                         u3591 E828                         u4551 CD56  
                       u4711 C49C                         u5511 FB02                         u5431 F8D2  
                       u5351 F690                         u5271 F536                         u5191 F32E  
                       u6231 F0FC                         u6151 EE08                         u6071 EB2A  
                       u6320 C16E                         u3760 D074                         u3840 CF4E  
                       u3920 DD3C                         u4480 CC4C                         u3680 E91A  
                       u4560 CD7A                         u4640 CB02                         u4800 D60A  
                       u4720 C530                         u5600 FCDA                         u5520 FB14  
                       u5440 F91E                         u5360 F6BA                         u5280 F5AC  
                       u6240 F1A6                         u6160 EEBA                         u6080 EB5E  
                       u6321 C16A                         u3761 D070                         u3841 CF4A  
                       u3921 DD38                         u4481 CC48                         u3681 E916  
                       u4561 CD76                         u4641 CAFE                         u4721 C52A  
                       u5601 FCD6                         u5521 FB10                         u5441 F91A  
                       u5361 F6B6                         u5281 F5A8                         u6241 F1A2  
                       u6161 EEB6                         u6081 EB5A                         u6250 C586  
                       u6330 C08A                         u3850 CF78                         u3690 C358  
                       u3930 DD4C                         u4490 CC9C                         u4570 CD8A  
                       u4650 CB2A                         u4810 D626                         u4730 C532  
                       u5610 FD08                         u5530 FB30                         u5450 F92E  
                       u5370 F6CC                         u5290 F5D2                         u6170 EF20  
                       u6090 EB9E                         u6331 C086                         u3771 D09E  
                       u3851 CF74                         u3691 C354                         u3931 DD48  
                       u4491 CC98                         u4571 CD86                         u4651 CB26  
                       u4635 CADA                         u4811 D622                         u4707 C484  
                       u5611 FD04                         u5531 FB2C                         u5451 F92A  
                       u5371 F6C8                         u5291 F5CE                         u6171 EF1A  
                       u6091 EB9A                         u6260 C5B0                         u4900 C1A8  
                       u3780 D0C2                         u3860 CFA6                         u4580 C78C  
                       u3940 DD8C                         u4660 CB54                         u4820 D67A  
                       u4740 C548                         u5620 FD8C                         u5540 FB3E  
                       u5460 F9C8                         u5380 F6DA                         u5700 D74A  
                       u6180 EF22                         u6500 D47C                         u4901 C1A2  
                       u3781 D0BE                         u3861 CFA2                         u4581 C788  
                       u3941 DD88                         u4661 CB50                         u4805 D600  
                       u4741 C544                         u5621 FD88                         u5541 FB3A  
                       u5461 F9C4                         u5381 F6D6                         u5701 D746  
                       u6501 D478                         u6270 C5C0                         u4910 C1AA  
                       u3790 D0EC                         u3870 CFEE                         u4590 C7AE  
                       u3950 DDCC                         u4830 D696                         u4750 D52A  
                       u5630 FDA6                         u5550 FB96                         u5470 FA16  
                       u5390 F6F0                         u5710 D7AE                         u6190 EF38  
                       u6271 C5BC                         u3791 D0E8                         u3871 CFEA  
                       u4591 C7AA                         u3951 DDC8                         u4831 D692  
                       u5631 FDA2                         u5551 FB92                         u5471 FA12  
                       u5391 F6EC                         u5711 D7AA                         u6191 EF34  
                       u4920 C3B8                         u3960 DE42                         u3880 DCC4  
                       u4680 CB8E                         u4840 D6D2                         u4760 D558  
                       u5640 FDBE                         u5560 FC68                         u5480 FA3E  
                       u5800 D924                         u5720 D7F8                         u6280 C61A  
                       u6440 D3A6                         u6257 C57C                         u4921 C3B4  
                       u3961 DE3E                         u3881 DCC0                         u4681 CB88  
                       u4841 D6CE                         u4825 D670                         u4761 D554  
                       u5641 FDBA                         u5561 FC64                         u5481 FA3A  
                       u5801 D920                         u5721 D7F2                         u6281 C616  
                       u6441 D3A2                         u6290 C108                         u4930 C3E6  
                       u3970 DE64                         u3890 DCD6                         u4690 CB90  
                       u4770 D57A                         u5650 FE1C                         u5570 FC84  
                       u5490 FAE0                         u4850 C28C                         u5810 D93E  
                       u5730 D7FA                         u6450 D3D8                         u6291 C104  
                       u6267 C5A6                         u4931 C3E2                         u3971 DE60  
                       u3891 DCD2                         u4675 CB66                         u4771 D576  
                       u4755 D520                         u5651 FE16                         u5571 FC80  
                       u5491 FADC                         u4851 C286                         u5811 D93A  
                       u6451 D3D4                         u5900 D310                         u4940 C9E2  
                       u3980 DE8E                         u5660 FE1E                         u5580 FC96  
                       u4860 C28E                         u5820 D958                         u5740 D810  
                       u6460 D3FC                         u6517 C0E6                         u5901 D30C  
                       u4941 C9DE                         u3981 DE8A                         u5581 FC92  
                       u5821 D954                         u5741 D80C                         u6461 D3F8  
                       u5910 D322                         u4950 CA08                         u3990 DEB2  
                       u4790 D5E6                         u5670 FE34                         u5590 FCA4  
                       u4870 C4D2                         u5830 D966                         u5750 D844  
                       u6470 D414                         u5911 D31E                         u4951 CA04  
                       u3991 DEAE                         u4791 D5E2                         u5671 FE30  
                       u5591 FCA0                         u4871 C4CC                         u5831 D962  
                       u5751 D83E                         u6471 D410                         u4960 CA28  
                       u5920 CDD6                         u4880 C4D4                         u5840 D974  
                       u5760 D846                         u5680 D704                         u6480 D43C  
                       u4961 CA24                         u4785 D58E                         u5921 CDD2  
                       u5841 D970                         u5681 D700                         u6481 D438  
                       u5850 D1F0                         u4970 CA76                         u4786 D598  
                       u5930 CE12                         u4890 C4EA                         u5770 D85C  
                       u5690 D720                         u6490 D454                         u5851 D1EC  
                       u4971 CA72                         u4787 D5A8                         u4891 C4E6  
                       u5771 D858                         u5691 D71C                         u6491 D450  
                       u5860 D226                         u4980 CA84                         u5940 CE22  
                       u5780 D8C4                         u5861 D222                         u4981 CA80  
                       u5941 CE1E                         u5870 D242                         u4990 D9FA  
                       u5950 CE3E                         u5790 D906                         u5871 D23E  
                       u4991 D9F4                         u5951 CE3A                         u5791 D902  
                       u5880 D2F8                         u5960 CE50                         u5881 D2F2  
                       u5961 CE4C                         u5937 CE08                         u5785 D8B2  
                       u5890 D2FA                         u5970 CE90                         u5971 CE8C  
                       u5980 CEB2                         u5990 C070                         u5991 C06C  
                       u5975 CE80                         u5977 CE76                         u5987 CEA8  
                       abs@a 0013                         _dbuf 0100                         _atoi D1B8  
                       _ctoa C9CE                         _main D348                         _dtoa D9CA  
           _send_byte_no_lib C05A                         _prec 00FD                         _nout 00F9  
                       pad@i 0018                         pad@p 0015                         fsr1h 000FE2  
                       fsr2h 000FDA                         indf1 000FE7                         indf2 000FDF  
                       fsr1l 000FE1                         pad@w 001A                         fsr2l 000FD9  
                       _xtoa D6F4                ___fpclassifyf CAA4                         prodh 000FF4  
                       prodl 000FF3                         start 0000              ___fldiv@new_exp 0012  
               _tolower$1252 000D                 ___param_bank 000000                        ??_abs 0015  
                      ??_pad 0017                ___fltol@sign1 0009              __end_of___aodiv D1B8  
                      ?_atoi 0008                        ?_ctoa 000A              __end_of___fladd E92E  
                      ?_main 0001                        ?_dtoa 001C              __end_of___aomod D030  
            __end_of___fldiv E044              __end_of___awdiv C904              __end_of___flneg C1E8  
                      STR_10 FF36                        STR_11 FF9A                        STR_12 FFB5  
                      STR_13 FEBA                        STR_22 FFF2                        STR_14 FFDF  
                      STR_31 FFF5                        STR_15 FFE7                        STR_24 FFF2  
                      STR_40 FFEF                        STR_33 FFF5                        STR_42 FFEF  
                      STR_26 FFF8                        STR_18 FFE3                        STR_19 FFEB  
                      STR_28 FFF8                        STR_36 FFFB              __end_of___awmod C77E  
                      STR_38 FFFB              __end_of___flmul E46E              __end_of___flsub C3A0  
            __end_of___fltol CDAC              ___awdiv@divisor 0003                        ?_xtoa 001C  
            ___awdiv@counter 0005                        _RCREG 000FAE                        _RCSTA 000FAB  
               vfpfcnvrt@fmt 0045                 vfpfcnvrt@llu 006C                        _SPBRG 000FAF  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISD 000F95                        _TRISE 000F96                        _TXREG 000FAD  
                      _TXSTA 000FAC                        _data1 007E                        _flags 007C  
                      _fputc C904              __end_of_isalpha C294                        _fputs C316  
            __end_of_isdigit C1B0                        atoi@n 0015                        pad@fp 0011  
                      atoi@s 0008                        _width 00FB                        ctoa@c 000C  
                      _putch C030                        ctoa@l 000E                        ctoa@w 0010  
                      main@i 005A                        dtoa@d 001E                        dtoa@i 003E  
                      dtoa@n 0036                        dtoa@p 0030                        dtoa@s 0034  
                      dtoa@w 0032              __end_of_islower C258              __end_of_isspace C3F2  
            __end_of_isupper C220                        tablat 000FF5                        status 000FD8  
            __end_of_sprintf C444               ?___fpclassifyf 0001              __end_of_tolower C560  
                      xtoa@c 0041                        xtoa@d 001E                        xtoa@i 003F  
                      xtoa@n 0037                        xtoa@p 0033                        xtoa@w 0035  
                      xtoa@x 0026              __end_of_strncmp CECC              __end_of_toupper C500  
               _toupper$1267 000D              __initialization C2D4                 __end_of_atoi D348  
               __end_of_ctoa CAA4                 __end_of_main D4E2                 __end_of_dtoa DCAA  
               __end_of_xtoa D9CA                       ??_atoi 000A                       ??_ctoa 000D  
                     ??_main 0059                       ??_dtoa 0026                       ??_xtoa 0027  
              __activetblptr 000002                       _ADCON0 000FC2                       _ADCON1 000FC1  
                     ?_fputc 0001                       ?_fputs 000A             ___awdiv@dividend 0001  
                     ?_putch 005E                vfpfcnvrt@done 005E                       _SPBRGH 000FB0  
           __end_of_delay_ms C10A                 vfprintf@cfmt 0057                       ___flge CBA2  
                     ___fleq C624                    ??___aodiv 0011                    ??___fladd 0009  
                  ??___aomod 0011                       ___wmul C0B2                    ??___fldiv 0009  
                  ??___awdiv 0005                    ??___flneg 0005                    ??___awmod 0005  
                  ??___flmul 0009                    ??___flsub 0022                    ??___fltol 0005  
                     _efgtoa F226                       _buffer 0200                       _floorf D4E2  
                     _gotten 000020                       clear_0 C2DA                       clear_1 C2E6  
                     clear_2 C306             ___awdiv@quotient 0007              ___awmod@divisor 0003  
                     isa$std 000001              ___awmod@counter 0005                       _port_d 000F83  
                     pad@buf 0013                       ctoa@fp 000A                       dtoa@fp 001C  
                     _strcpy C444                       _strlen C10A                       fputc@c 0001  
                     fputs@c 000E                       fputs@i 000F                       fputs@s 000A  
                  ??_isalpha 0003                    ??_isdigit 0003              ___fpclassifyf@e 0009  
            ___fpclassifyf@u 000B              ___fpclassifyf@x 0001                    ??_islower 0003  
               __mediumconst FE80                    ??_isspace 0003          send_string_no_lib@p 0002  
                     tblptrh 000FF7                    ??_isupper 0003                       tblptrl 000FF6  
                     tblptru 000FF8                       putch@c 005E           _send_string_no_lib C560  
           __end_of_vfprintf C624                 ?_setupSerial 005E                    ??_sprintf 0059  
                  ??_tolower 0009                       xtoa@fp 001C                    ??_strncmp 0007  
                  ??_toupper 0009                   ___flge@ff1 001A                   ___flge@ff2 001E  
            ??___fpclassifyf 0005                   ___fleq@ff1 0001                   ___fleq@ff2 0005  
                 __accesstop 0080      __end_of__initialization C30C                   ___flneg@f1 0001  
        ?_send_string_no_lib 0002            ?_read_byte_no_lib 005E                 __pbssCOMRAMh 007C  
              ___rparam_used 000001                 __pbssCOMRAMl 007E                   ___fltol@f1 0001  
         ??_read_byte_no_lib 0001               __pcstackBANK0h 0096                __end_of_fputc C9CE  
              __end_of_fputs C35A                __end_of_putch C032         ??_send_string_no_lib 0004  
   __end_of_send_byte_no_lib C076                      ??_fputc 0005                      ??_fputs 000E  
                    ??_putch 0001                   __pbssBANK1 0100                   __pbssBANK2 0200  
          read_byte_no_lib@c 0001                      ?___flge 001A                      ?___fleq 0001  
                    ?___wmul 0001                      ?_efgtoa 002E                      ?_floorf 001A  
                    ?_strcpy 0001                      ?_strlen 0001                    ?_delay_ms 0001  
         __size_of_vfpfcnvrt 08F8            _is_byte_available C140                      __Hparam 0000  
                    __Lparam 0000           ?_is_byte_available 005E              __size_of___flge 0104  
            __size_of___fleq 00AA                      ___aodiv D030                      ___fladd E46E  
                    ___aomod CECC                      ___fldiv DCAA                      ___awdiv C840  
                    ___flneg C1B0                      ___awmod C6CE                      ___flmul E044  
                    ___flsub C35A                      ___fltol CCA6              __size_of___wmul 0026  
                  ?_vfprintf 00CE              __size_of_efgtoa 0C5A              __size_of_floorf 0212  
                    __pcinit C2D4                      __ramtop 1000          ??_is_byte_available 0001  
                    __ptext0 D348                      __ptext1 C3F2                      __ptext2 C5C2  
                    __ptext3 E92E                      __ptext4 D6F4                      __ptext5 C4A2  
                    __ptext6 C220                      __ptext7 C258                      __ptext8 CDAC  
                    __ptext9 F226              __size_of_strcpy 005E              __size_of_strlen 0036  
               __size_of_abs 0040                 __size_of_pad 00C2                      _isalpha C258  
                    _isdigit C178             ___awmod@dividend 0001                      _islower C220  
                    _isspace C3A0                   ??_delay_ms 0003                      _isupper C1E8  
                    efgtoa@c 0034                      efgtoa@d 00AE                      efgtoa@e 00C6  
                    efgtoa@f 0030                      efgtoa@g 00C2                      efgtoa@h 00B8  
                    efgtoa@i 00C0                      efgtoa@l 00BC                      efgtoa@m 00A8  
                    efgtoa@n 00C8                      efgtoa@p 00B2                      efgtoa@t 00A2  
                    efgtoa@u 00CA                      efgtoa@w 00B4                      atoi@neg 000E  
                    _sprintf C3F2                      _tolower C500                      main@ptr 005C  
                    _strncmp CDAC                      _toupper C4A2         end_of_initialization C30C  
                    floorf@e 0028                      floorf@m 0024                      floorf@u 002A  
                    floorf@x 001A         __size_of_setupSerial 0020                      fputc@fp 0003  
              __Lmediumconst FE80    __end_of_is_byte_available C178                      fputs@fp 000C  
          __end_of_vfpfcnvrt F226                   efgtoa@mode 00B7                   efgtoa@sign 00B0  
                  _RCSTAbits 000FAB                      postdec2 000FDD                      postinc0 000FEE  
                    postinc1 000FE6                      postinc2 000FDE                   ??_vfprintf 0057  
                    strcpy@d 0009                      strlen@a 0003                      strcpy@s 0007  
                    strlen@s 0001                   _setupPorts C040                   _print_line C032  
                ___fladd@grs 0010                  ___fldiv@grs 0014                  ___fldiv@rem 000D  
                ___flmul@grs 000E                    _TXSTAbits 000FAC            send_byte_no_lib@c 0001  
            __pcstackCOMRAMh 0001              __pcstackCOMRAMl 005E               __end_of___flge CCA6  
             __end_of___fleq C6CE                  vfpfcnvrt@ap 0047                  vfpfcnvrt@ct 0078  
                vfpfcnvrt@fp 0043                  vfpfcnvrt@ll 0064               __end_of___wmul C0D8  
                _BAUDCONbits 000FB8               __end_of_efgtoa FE80               __end_of_floorf D6F4  
  __size_of_read_byte_no_lib 001C                   floorf@F527 00F0            ?_send_byte_no_lib 0001  
             __end_of_strcpy C4A2               __end_of_strlen C140          start_initialization C2D4  
         ??_send_byte_no_lib 0001                  __end_of_abs C2D4                  __end_of_pad C840  
 __size_of_is_byte_available 0038        __end_of___fpclassifyf CBA2                  vfprintf@fmt 00D0  
                   ??___flge 0022                     ??___fleq 0009                     ??___wmul 0005  
                   ??_efgtoa 0035                     ??_floorf 001E  __size_of_send_string_no_lib 0062  
                   ??_strcpy 0005                     ??_strlen 0003                  ?_setupPorts 0001  
                  ___fladd@a 0005                    ___fladd@b 0001                  __pbssBANK0h 00F9  
                __pbssBANK0l 00F0                  ?_print_line 0001                    ___fldiv@a 0005  
                  ___fldiv@b 0001                    ___flmul@a 0005                    ___flmul@b 0001  
                  ___flsub@a 001E                    ___flsub@b 001A             ___aodiv@dividend 0001  
          __size_of_delay_ms 0032                    _atoi$1150 0012                    _atoi$1148 0010  
                  _atoi$1149 0014                  _efgtoa$1051 0096                  _efgtoa$1060 009C  
                _efgtoa$1052 0098                  _efgtoa$1061 009E                  _efgtoa$1062 00A0  
                _efgtoa$1056 009A                    _dtoa$1027 002E                __pmediumconst FE80  
                   ?___aodiv 0001                     ?___fladd 0001                     ?___aomod 0001  
                   ?___fldiv 0001                     ?___awdiv 0001             ___aodiv@quotient 0013  
                   ?___flneg 0001                     ?___awmod 0001                     ?___flmul 0001  
                   ?___flsub 001A                     ?___fltol 0001            __size_of_vfprintf 0062  
                   ?_isalpha 0001                     ?_isdigit 0001                     ?_islower 0001  
                   ?_isspace 0001                     ?_isupper 0001                     ?_sprintf 00D4  
                   ?_tolower 0007               __size_of_fputc 00CA               __size_of_fputs 0044  
                   ?_strncmp 0001                     ?_toupper 0007               __size_of_putch 0002  
             ___wmul@product 0005                    delay_ms@i 0003                    delay_ms@n 0001  
        __size_of_setupPorts 001A          __size_of_print_line 000E                     _PIR1bits 000F9E  
                  _vfpfcnvrt E92E                    _xtoa$1072 002F                    _xtoa$1073 0031  
           _read_byte_no_lib C076            ___wmul@multiplier 0001                 _isspace$1188 0007  
              ??_setupSerial 0001                   vfpfcnvrt@c 007B                   vfpfcnvrt@f 0074  
                   __Hrparam 0000                   vfprintf@ap 00D2                     __Lrparam 0000  
                 vfprintf@fp 00CE             __size_of___aodiv 0188             __size_of___fladd 04C0  
           __size_of___aomod 0164             __size_of___fldiv 039A             __size_of___awdiv 00C4  
           __size_of___flneg 0038             __size_of___awmod 00B0             __size_of___flmul 042A  
           __size_of___flsub 0046             __size_of___fltol 0106                   ?_vfpfcnvrt 0043  
            ___aodiv@divisor 0009              ___aodiv@counter 0011           ___fpclassifyf@F465 00F4  
                 sprintf@fmt 00D6             __size_of_isalpha 003C             __size_of_isdigit 0038  
                   _delay_ms C0D8             __size_of_islower 0038             __size_of_isspace 0052  
                   __ptext10 C500                     __ptext11 C1E8                     __ptext20 CBA2  
                   __ptext12 C444                     __ptext21 C624                     __ptext13 D4E2  
                   __ptext30 CECC                     __ptext22 DCAA                     __ptext14 CAA4  
                   __ptext31 D030                     __ptext23 C6CE                     __ptext15 CCA6  
                   __ptext40 C040                     __ptext32 C9CE                     __ptext24 C840  
                   __ptext16 C35A                     __ptext41 C076                     __ptext33 C904  
                   __ptext25 D9CA                     __ptext17 E46E                     __ptext42 C032  
                   __ptext34 C030                     __ptext26 C77E                     __ptext18 C1B0  
                   __ptext43 C560                     __ptext35 D1B8                     __ptext27 C10A  
                   __ptext19 E044                     __ptext44 C05A                     __ptext36 C3A0  
                   __ptext28 C316                     __ptext45 C140                     __ptext37 C178  
                   __ptext29 C294                     __ptext46 C0D8                     __ptext38 C0B2  
                   __ptext39 C092             __size_of_isupper 0038                     _lcd_tris 000095  
           __size_of_sprintf 0052             __size_of_tolower 0060                   strcpy@dest 0001  
           __size_of_strncmp 0120             __size_of_toupper 005E                __size_of_atoi 0190  
              __size_of_ctoa 00D6                __size_of_main 019A                __size_of_dtoa 02E0  
  __size_of_send_byte_no_lib 001C                __size_of_xtoa 02D6          __end_of_setupSerial C0B2  
                   efgtoa@fp 002E                     efgtoa@ne 00A6                     efgtoa@pp 00A4  
                   efgtoa@ou 00AA                     isa$xinst 000000                     _vfprintf C5C2  
               ??_setupPorts 0001             ___aomod@dividend 0001                 ??_print_line 0004  
             _vfpfcnvrt$1087 0060               _vfpfcnvrt$1098 0062                     isalpha@c 0001  
                   isdigit@c 0001                    sprintf@ap 00E8                     islower@c 0001  
                   isspace@c 0001                    strcpy@src 0003                     isupper@c 0001  
                  strncmp@_l 0001                    strncmp@_r 0003           __end_of_setupPorts C05A  
         __end_of_print_line C040                  efgtoa@nmode 00B6   __end_of_send_string_no_lib C5C2  
            ___aomod@divisor 0009                  ??_vfpfcnvrt 0049              ___aomod@counter 0011  
                   sprintf@f 00EA                     tolower@c 0007                     sprintf@s 00D4  
     __size_of___fpclassifyf 00FE                     strncmp@l 0008                     strncmp@n 0005  
                   strncmp@r 000A                     toupper@c 0007                  _setupSerial C092  
              ___fladd@signs 000D                 ___aodiv@sign 0012                 ___fladd@aexp 000E  
               ___fladd@bexp 000F     __end_of_read_byte_no_lib C092                 ___aomod@sign 0012  
