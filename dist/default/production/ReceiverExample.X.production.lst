

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Nov 09 06:02:59 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAMh,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssCOMRAMl,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0h,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0l,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0h,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAMh,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAMl,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67                           	dabs	1,0x95,1,_lcd_tris
    68  0000                     
    69                           ; Version 2.20
    70                           ; Generated 12/02/2020 GMT
    71                           ; 
    72                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F4620 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     _gotten	set	32
   104  0000                     _TXREG	set	4013
   105  0000                     _PIR1bits	set	3998
   106  0000                     _RCREG	set	4014
   107  0000                     _RCSTAbits	set	4011
   108  0000                     _RCSTA	set	4011
   109  0000                     _TXSTAbits	set	4012
   110  0000                     _TXSTA	set	4012
   111  0000                     _SPBRGH	set	4016
   112  0000                     _SPBRG	set	4015
   113  0000                     _BAUDCONbits	set	4024
   114                           
   115 ;;
   116 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   117 ;;
   118 ;; *************** function _main *****************
   119 ;; Defined at:
   120 ;;		line 207 in file "main.c"
   121 ;; Parameters:    Size  Location     Type
   122 ;;		None
   123 ;; Auto vars:     Size  Location     Type
   124 ;;  i               2   89[COMRAM] short 
   125 ;;  ptr             2   91[COMRAM] PTR unsigned char 
   126 ;;		 -> gotten(1), 
   127 ;; Return value:  Size  Location     Type
   128 ;;                  2   65[None  ] int 
   129 ;; Registers used:
   130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   131 ;; Tracked objects:
   132 ;;		On entry : 0/0
   133 ;;		On exit  : 0/0
   134 ;;		Unchanged: 0/0
   135 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
   136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   137 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   138 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   139 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
   140 ;;Total ram usage:        5 bytes
   141 ;; Hardware stack levels required when called: 8
   142 ;; This function calls:
   143 ;;		_delay_ms
   144 ;;		_is_byte_available
   145 ;;		_print_line
   146 ;;		_read_byte_no_lib
   147 ;;		_send_string_no_lib
   148 ;;		_setupPorts
   149 ;;		_setupSerial
   150 ;;		_sprintf
   151 ;; This function is called by:
   152 ;;		Startup code after reset
   153 ;; This function uses a non-reentrant model
   154 ;;
   155                           
   156                           	psect	text0
   157  00D338                     __ptext0:
   158                           	callstack 0
   159  0000                     _TRISE	set	3990
   160  0000                     _TRISD	set	3989
   161  0000                     _TRISA	set	3986
   162  0000                     _TRISC	set	3988
   163  0000                     _TRISB	set	3987
   164  0000                     _ADCON1	set	4033
   165  0000                     _ADCON0	set	4034
   166  00D338                     _main:
   167                           	callstack 23
   168  00D338                     
   169                           ;main.c: 209:     setupPorts();
   170  00D338  EC18  F060         	call	_setupPorts	;wreg free
   171                           
   172                           ;main.c: 210:     setupSerial();
   173  00D33C  EC41  F060         	call	_setupSerial	;wreg free
   174  00D340                     l4816:
   175                           
   176                           ;main.c: 213:         sprintf(buffer, "Enter a statement below (15 characters):\n\r");
   177  00D340  0E00               	movlw	low _buffer
   178  00D342  0100               	movlb	0	; () banked
   179  00D344  6FD4               	movwf	sprintf@s& (0+255),b
   180  00D346  0E02               	movlw	high _buffer
   181  00D348  6FD5               	movwf	(sprintf@s+1)& (0+255),b
   182  00D34A  0EAD               	movlw	low STR_11
   183  00D34C  6FD6               	movwf	sprintf@fmt& (0+255),b
   184  00D34E  0EFE               	movlw	high STR_11
   185  00D350  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
   186  00D352  ECF1  F061         	call	_sprintf	;wreg free
   187  00D356                     
   188                           ;main.c: 214:         send_string_no_lib(buffer);
   189  00D356  0E00               	movlw	low _buffer
   190  00D358  6E02               	movwf	send_string_no_lib@p^0,c
   191  00D35A  0E02               	movlw	high _buffer
   192  00D35C  6E03               	movwf	(send_string_no_lib@p+1)^0,c
   193  00D35E  ECA8  F062         	call	_send_string_no_lib	;wreg free
   194  00D362                     
   195                           ;main.c: 217:         gotten = 'a';
   196  00D362  0E61               	movlw	97
   197  00D364  6E20               	movwf	32,c	;volatile
   198  00D366                     
   199                           ;main.c: 218:         char * ptr = &gotten;
   200  00D366  0E20               	movlw	32
   201  00D368  6E5C               	movwf	main@ptr^0,c
   202  00D36A  0E00               	movlw	0
   203  00D36C  6E5D               	movwf	(main@ptr+1)^0,c
   204  00D36E                     
   205                           ;main.c: 220:         for(short i=0; i<15; i++) {
   206  00D36E  0E00               	movlw	0
   207  00D370  6E5B               	movwf	(main@i+1)^0,c
   208  00D372  0E00               	movlw	0
   209  00D374  6E5A               	movwf	main@i^0,c
   210  00D376                     l4830:
   211                           
   212                           ;main.c: 222:                 delay_ms(10);
   213  00D376  0E00               	movlw	0
   214  00D378  6E02               	movwf	(delay_ms@n+1)^0,c
   215  00D37A  0E0A               	movlw	10
   216  00D37C  6E01               	movwf	delay_ms@n^0,c
   217  00D37E  EC64  F060         	call	_delay_ms	;wreg free
   218  00D382                     
   219                           ;main.c: 223:                 if(is_byte_available()) {
   220  00D382  EC98  F060         	call	_is_byte_available	;wreg free
   221  00D386  0900               	iorlw	0
   222  00D388  B4D8               	btfsc	status,2,c
   223  00D38A  EFC9  F069         	goto	u6441
   224  00D38E  EFCB  F069         	goto	u6440
   225  00D392                     u6441:
   226  00D392  EFBB  F069         	goto	l4830
   227  00D396                     u6440:
   228  00D396                     
   229                           ;main.c: 224:                     *ptr = read_byte_no_lib();
   230  00D396  EC33  F060         	call	_read_byte_no_lib	;wreg free
   231  00D39A  C05C  FFD9         	movff	main@ptr,fsr2l
   232  00D39E  C05D  FFDA         	movff	main@ptr+1,fsr2h
   233  00D3A2  6EDF               	movwf	indf2,c
   234  00D3A4                     
   235                           ;main.c: 225:                     ptr++;
   236  00D3A4  4A5C               	infsnz	main@ptr^0,f,c
   237  00D3A6  2A5D               	incf	(main@ptr+1)^0,f,c
   238  00D3A8                     
   239                           ;main.c: 229:         }
   240  00D3A8  4A5A               	infsnz	main@i^0,f,c
   241  00D3AA  2A5B               	incf	(main@i+1)^0,f,c
   242  00D3AC  BE5B               	btfsc	(main@i+1)^0,7,c
   243  00D3AE  EFE2  F069         	goto	u6451
   244  00D3B2  505B               	movf	(main@i+1)^0,w,c
   245  00D3B4  E109               	bnz	u6450
   246  00D3B6  0E0F               	movlw	15
   247  00D3B8  5C5A               	subwf	main@i^0,w,c
   248  00D3BA  A0D8               	btfss	status,0,c
   249  00D3BC  EFE2  F069         	goto	u6451
   250  00D3C0  EFE4  F069         	goto	u6450
   251  00D3C4                     u6451:
   252  00D3C4  EFBB  F069         	goto	l4830
   253  00D3C8                     u6450:
   254  00D3C8                     
   255                           ;main.c: 231:         for(ptr = &gotten; *ptr; ++ptr)
   256  00D3C8  0E20               	movlw	32
   257  00D3CA  6E5C               	movwf	main@ptr^0,c
   258  00D3CC  0E00               	movlw	0
   259  00D3CE  6E5D               	movwf	(main@ptr+1)^0,c
   260  00D3D0  EF2A  F06A         	goto	l4858
   261  00D3D4                     l4844:
   262                           
   263                           ;main.c: 232:             if(*ptr >= 'A' && *ptr <= 'Z')
   264  00D3D4  C05C  FFD9         	movff	main@ptr,fsr2l
   265  00D3D8  C05D  FFDA         	movff	main@ptr+1,fsr2h
   266  00D3DC  0E40               	movlw	64
   267  00D3DE  64DF               	cpfsgt	indf2,c
   268  00D3E0  EFF4  F069         	goto	u6461
   269  00D3E4  EFF6  F069         	goto	u6460
   270  00D3E8                     u6461:
   271  00D3E8  EF0A  F06A         	goto	l4850
   272  00D3EC                     u6460:
   273  00D3EC  C05C  FFD9         	movff	main@ptr,fsr2l
   274  00D3F0  C05D  FFDA         	movff	main@ptr+1,fsr2h
   275  00D3F4  0E5B               	movlw	91
   276  00D3F6  60DF               	cpfslt	indf2,c
   277  00D3F8  EF00  F06A         	goto	u6471
   278  00D3FC  EF02  F06A         	goto	u6470
   279  00D400                     u6471:
   280  00D400  EF0A  F06A         	goto	l4850
   281  00D404                     u6470:
   282  00D404                     
   283                           ;main.c: 233:                 *ptr += 32;
   284  00D404  C05C  FFD9         	movff	main@ptr,fsr2l
   285  00D408  C05D  FFDA         	movff	main@ptr+1,fsr2h
   286  00D40C  0E20               	movlw	32
   287  00D40E  26DF               	addwf	indf2,f,c
   288  00D410  EF28  F06A         	goto	l4856
   289  00D414                     l4850:
   290  00D414  C05C  FFD9         	movff	main@ptr,fsr2l
   291  00D418  C05D  FFDA         	movff	main@ptr+1,fsr2h
   292  00D41C  0E60               	movlw	96
   293  00D41E  64DF               	cpfsgt	indf2,c
   294  00D420  EF14  F06A         	goto	u6481
   295  00D424  EF16  F06A         	goto	u6480
   296  00D428                     u6481:
   297  00D428  EF28  F06A         	goto	l4856
   298  00D42C                     u6480:
   299  00D42C  C05C  FFD9         	movff	main@ptr,fsr2l
   300  00D430  C05D  FFDA         	movff	main@ptr+1,fsr2h
   301  00D434  0E7B               	movlw	123
   302  00D436  60DF               	cpfslt	indf2,c
   303  00D438  EF20  F06A         	goto	u6491
   304  00D43C  EF22  F06A         	goto	u6490
   305  00D440                     u6491:
   306  00D440  EF28  F06A         	goto	l4856
   307  00D444                     u6490:
   308  00D444                     
   309                           ;main.c: 235:                 *ptr -= 32;
   310  00D444  C05C  FFD9         	movff	main@ptr,fsr2l
   311  00D448  C05D  FFDA         	movff	main@ptr+1,fsr2h
   312  00D44C  0E20               	movlw	32
   313  00D44E  5EDF               	subwf	indf2,f,c
   314  00D450                     l4856:
   315  00D450  4A5C               	infsnz	main@ptr^0,f,c
   316  00D452  2A5D               	incf	(main@ptr+1)^0,f,c
   317  00D454                     l4858:
   318  00D454  C05C  FFD9         	movff	main@ptr,fsr2l
   319  00D458  C05D  FFDA         	movff	main@ptr+1,fsr2h
   320  00D45C  50DF               	movf	indf2,w,c
   321  00D45E  A4D8               	btfss	status,2,c
   322  00D460  EF34  F06A         	goto	u6501
   323  00D464  EF36  F06A         	goto	u6500
   324  00D468                     u6501:
   325  00D468  EFEA  F069         	goto	l4844
   326  00D46C                     u6500:
   327  00D46C                     
   328                           ;main.c: 237:         ptr = &gotten;
   329  00D46C  0E20               	movlw	32
   330  00D46E  6E5C               	movwf	main@ptr^0,c
   331  00D470  0E00               	movlw	0
   332  00D472  6E5D               	movwf	(main@ptr+1)^0,c
   333  00D474                     
   334                           ;main.c: 238:         sprintf(buffer, "\n\rReceived string: ");
   335  00D474  0E00               	movlw	low _buffer
   336  00D476  0100               	movlb	0	; () banked
   337  00D478  6FD4               	movwf	sprintf@s& (0+255),b
   338  00D47A  0E02               	movlw	high _buffer
   339  00D47C  6FD5               	movwf	(sprintf@s+1)& (0+255),b
   340  00D47E  0EB5               	movlw	low STR_12
   341  00D480  6FD6               	movwf	sprintf@fmt& (0+255),b
   342  00D482  0EFF               	movlw	high STR_12
   343  00D484  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
   344  00D486  ECF1  F061         	call	_sprintf	;wreg free
   345  00D48A                     
   346                           ;main.c: 239:         send_string_no_lib(buffer);
   347  00D48A  0E00               	movlw	low _buffer
   348  00D48C  6E02               	movwf	send_string_no_lib@p^0,c
   349  00D48E  0E02               	movlw	high _buffer
   350  00D490  6E03               	movwf	(send_string_no_lib@p+1)^0,c
   351  00D492  ECA8  F062         	call	_send_string_no_lib	;wreg free
   352  00D496                     
   353                           ;main.c: 240:         send_string_no_lib(ptr);
   354  00D496  C05C  F002         	movff	main@ptr,send_string_no_lib@p
   355  00D49A  C05D  F003         	movff	main@ptr+1,send_string_no_lib@p+1
   356  00D49E  ECA8  F062         	call	_send_string_no_lib	;wreg free
   357  00D4A2                     
   358                           ;main.c: 241:         sprintf(buffer, "\r\n");
   359  00D4A2  0E00               	movlw	low _buffer
   360  00D4A4  0100               	movlb	0	; () banked
   361  00D4A6  6FD4               	movwf	sprintf@s& (0+255),b
   362  00D4A8  0E02               	movlw	high _buffer
   363  00D4AA  6FD5               	movwf	(sprintf@s+1)& (0+255),b
   364  00D4AC  0EAA               	movlw	low (STR_1+57)
   365  00D4AE  6FD6               	movwf	sprintf@fmt& (0+255),b
   366  00D4B0  0EFE               	movlw	high (STR_1+57)
   367  00D4B2  6FD7               	movwf	(sprintf@fmt+1)& (0+255),b
   368  00D4B4  ECF1  F061         	call	_sprintf	;wreg free
   369  00D4B8                     
   370                           ;main.c: 242:         send_string_no_lib(buffer);
   371  00D4B8  0E00               	movlw	low _buffer
   372  00D4BA  6E02               	movwf	send_string_no_lib@p^0,c
   373  00D4BC  0E02               	movlw	high _buffer
   374  00D4BE  6E03               	movwf	(send_string_no_lib@p+1)^0,c
   375  00D4C0  ECA8  F062         	call	_send_string_no_lib	;wreg free
   376  00D4C4                     
   377                           ;main.c: 243:         print_line();
   378  00D4C4  EC11  F060         	call	_print_line	;wreg free
   379  00D4C8  0004               	clrwdt		;# 
   380  00D4CA  EFA0  F069         	goto	l4816
   381  00D4CE  EF00  F000         	goto	start
   382  00D4D2                     __end_of_main:
   383                           	callstack 0
   384                           
   385                           	psect	mediumconst
   386  00FE70                     __pmediumconst:
   387                           	callstack 0
   388  00FE70  00                 	db	0
   389  00FE71                     STR_1:
   390  00FE71  2D                 	db	45
   391  00FE72  2D                 	db	45
   392  00FE73  2D                 	db	45
   393  00FE74  2D                 	db	45
   394  00FE75  2D                 	db	45
   395  00FE76  2D                 	db	45
   396  00FE77  2D                 	db	45
   397  00FE78  2D                 	db	45
   398  00FE79  2D                 	db	45
   399  00FE7A  2D                 	db	45
   400  00FE7B  2D                 	db	45
   401  00FE7C  2D                 	db	45
   402  00FE7D  2D                 	db	45
   403  00FE7E  2D                 	db	45
   404  00FE7F  2D                 	db	45
   405  00FE80  2D                 	db	45
   406  00FE81  2D                 	db	45
   407  00FE82  2D                 	db	45
   408  00FE83  2D                 	db	45
   409  00FE84  2D                 	db	45
   410  00FE85  2D                 	db	45
   411  00FE86  2D                 	db	45
   412  00FE87  2D                 	db	45
   413  00FE88  2D                 	db	45
   414  00FE89  2D                 	db	45
   415  00FE8A  2D                 	db	45
   416  00FE8B  2D                 	db	45
   417  00FE8C  2D                 	db	45
   418  00FE8D  2D                 	db	45
   419  00FE8E  2D                 	db	45
   420  00FE8F  2D                 	db	45
   421  00FE90  2D                 	db	45
   422  00FE91  2D                 	db	45
   423  00FE92  2D                 	db	45
   424  00FE93  2D                 	db	45
   425  00FE94  2D                 	db	45
   426  00FE95  2D                 	db	45
   427  00FE96  2D                 	db	45
   428  00FE97  2D                 	db	45
   429  00FE98  2D                 	db	45
   430  00FE99  2D                 	db	45
   431  00FE9A  2D                 	db	45
   432  00FE9B  2D                 	db	45
   433  00FE9C  2D                 	db	45
   434  00FE9D  2D                 	db	45
   435  00FE9E  2D                 	db	45
   436  00FE9F  2D                 	db	45
   437  00FEA0  2D                 	db	45
   438  00FEA1  2D                 	db	45
   439  00FEA2  2D                 	db	45
   440  00FEA3  2D                 	db	45
   441  00FEA4  2D                 	db	45
   442  00FEA5  2D                 	db	45
   443  00FEA6  2D                 	db	45
   444  00FEA7  2D                 	db	45
   445  00FEA8  2D                 	db	45
   446  00FEA9  2D                 	db	45
   447  00FEAA  0D                 	db	13
   448  00FEAB  0A                 	db	10
   449  00FEAC  00                 	db	0
   450  00FEAD                     STR_11:
   451  00FEAD  45                 	db	69	;'E'
   452  00FEAE  6E                 	db	110	;'n'
   453  00FEAF  74                 	db	116	;'t'
   454  00FEB0  65                 	db	101	;'e'
   455  00FEB1  72                 	db	114	;'r'
   456  00FEB2  20                 	db	32
   457  00FEB3  61                 	db	97	;'a'
   458  00FEB4  20                 	db	32
   459  00FEB5  73                 	db	115	;'s'
   460  00FEB6  74                 	db	116	;'t'
   461  00FEB7  61                 	db	97	;'a'
   462  00FEB8  74                 	db	116	;'t'
   463  00FEB9  65                 	db	101	;'e'
   464  00FEBA  6D                 	db	109	;'m'
   465  00FEBB  65                 	db	101	;'e'
   466  00FEBC  6E                 	db	110	;'n'
   467  00FEBD  74                 	db	116	;'t'
   468  00FEBE  20                 	db	32
   469  00FEBF  62                 	db	98	;'b'
   470  00FEC0  65                 	db	101	;'e'
   471  00FEC1  6C                 	db	108	;'l'
   472  00FEC2  6F                 	db	111	;'o'
   473  00FEC3  77                 	db	119	;'w'
   474  00FEC4  20                 	db	32
   475  00FEC5  28                 	db	40
   476  00FEC6  31                 	db	49	;'1'
   477  00FEC7  35                 	db	53	;'5'
   478  00FEC8  20                 	db	32
   479  00FEC9  63                 	db	99	;'c'
   480  00FECA  68                 	db	104	;'h'
   481  00FECB  61                 	db	97	;'a'
   482  00FECC  72                 	db	114	;'r'
   483  00FECD  61                 	db	97	;'a'
   484  00FECE  63                 	db	99	;'c'
   485  00FECF  74                 	db	116	;'t'
   486  00FED0  65                 	db	101	;'e'
   487  00FED1  72                 	db	114	;'r'
   488  00FED2  73                 	db	115	;'s'
   489  00FED3  29                 	db	41
   490  00FED4  3A                 	db	58	;':'
   491  00FED5  0A                 	db	10
   492  00FED6  0D                 	db	13
   493  00FED7  00                 	db	0
   494  00FED8  63                 	db	99	;'c'
   495  00FED9  68                 	db	104	;'h'
   496  00FEDA  72                 	db	114	;'r'
   497  00FEDB  20                 	db	32
   498  00FEDC  3D                 	db	61	;'='
   499  00FEDD  20                 	db	32
   500  00FEDE  25                 	db	37
   501  00FEDF  30                 	db	48	;'0'
   502  00FEE0  32                 	db	50	;'2'
   503  00FEE1  58                 	db	88	;'X'
   504  00FEE2  2C                 	db	44
   505  00FEE3  20                 	db	32
   506  00FEE4  73                 	db	115	;'s'
   507  00FEE5  68                 	db	104	;'h'
   508  00FEE6  72                 	db	114	;'r'
   509  00FEE7  74                 	db	116	;'t'
   510  00FEE8  20                 	db	32
   511  00FEE9  3D                 	db	61	;'='
   512  00FEEA  20                 	db	32
   513  00FEEB  25                 	db	37
   514  00FEEC  30                 	db	48	;'0'
   515  00FEED  34                 	db	52	;'4'
   516  00FEEE  58                 	db	88	;'X'
   517  00FEEF  2C                 	db	44
   518  00FEF0  20                 	db	32
   519  00FEF1  6C                 	db	108	;'l'
   520  00FEF2  6E                 	db	110	;'n'
   521  00FEF3  67                 	db	103	;'g'
   522  00FEF4  20                 	db	32
   523  00FEF5  3D                 	db	61	;'='
   524  00FEF6  20                 	db	32
   525  00FEF7  25                 	db	37
   526  00FEF8  30                 	db	48	;'0'
   527  00FEF9  34                 	db	52	;'4'
   528  00FEFA  58                 	db	88	;'X'
   529  00FEFB  25                 	db	37
   530  00FEFC  30                 	db	48	;'0'
   531  00FEFD  34                 	db	52	;'4'
   532  00FEFE  58                 	db	88	;'X'
   533  00FEFF  0D                 	db	13
   534  00FF00  0A                 	db	10
   535  00FF01  00                 	db	0
   536  00FF02                     STR_4:
   537  00FF02  63                 	db	99	;'c'
   538  00FF03  68                 	db	104	;'h'
   539  00FF04  72                 	db	114	;'r'
   540  00FF05  20                 	db	32
   541  00FF06  3D                 	db	61	;'='
   542  00FF07  20                 	db	32
   543  00FF08  25                 	db	37
   544  00FF09  63                 	db	99	;'c'
   545  00FF0A  2C                 	db	44
   546  00FF0B  20                 	db	32
   547  00FF0C  73                 	db	115	;'s'
   548  00FF0D  68                 	db	104	;'h'
   549  00FF0E  72                 	db	114	;'r'
   550  00FF0F  74                 	db	116	;'t'
   551  00FF10  20                 	db	32
   552  00FF11  3D                 	db	61	;'='
   553  00FF12  20                 	db	32
   554  00FF13  25                 	db	37
   555  00FF14  64                 	db	100	;'d'
   556  00FF15  2C                 	db	44
   557  00FF16  20                 	db	32
   558  00FF17  6C                 	db	108	;'l'
   559  00FF18  6E                 	db	110	;'n'
   560  00FF19  67                 	db	103	;'g'
   561  00FF1A  20                 	db	32
   562  00FF1B  3D                 	db	61	;'='
   563  00FF1C  20                 	db	32
   564  00FF1D  25                 	db	37
   565  00FF1E  6C                 	db	108	;'l'
   566  00FF1F  64                 	db	100	;'d'
   567  00FF20  2C                 	db	44
   568  00FF21  20                 	db	32
   569  00FF22  66                 	db	102	;'f'
   570  00FF23  6C                 	db	108	;'l'
   571  00FF24  74                 	db	116	;'t'
   572  00FF25  3D                 	db	61	;'='
   573  00FF26  25                 	db	37
   574  00FF27  66                 	db	102	;'f'
   575  00FF28  0D                 	db	13
   576  00FF29  0A                 	db	10
   577  00FF2A  00                 	db	0
   578  00FF2B  63                 	db	99	;'c'
   579  00FF2C  68                 	db	104	;'h'
   580  00FF2D  72                 	db	114	;'r'
   581  00FF2E  20                 	db	32
   582  00FF2F  3D                 	db	61	;'='
   583  00FF30  20                 	db	32
   584  00FF31  25                 	db	37
   585  00FF32  30                 	db	48	;'0'
   586  00FF33  32                 	db	50	;'2'
   587  00FF34  58                 	db	88	;'X'
   588  00FF35  2C                 	db	44
   589  00FF36  20                 	db	32
   590  00FF37  73                 	db	115	;'s'
   591  00FF38  68                 	db	104	;'h'
   592  00FF39  72                 	db	114	;'r'
   593  00FF3A  74                 	db	116	;'t'
   594  00FF3B  20                 	db	32
   595  00FF3C  3D                 	db	61	;'='
   596  00FF3D  20                 	db	32
   597  00FF3E  25                 	db	37
   598  00FF3F  30                 	db	48	;'0'
   599  00FF40  34                 	db	52	;'4'
   600  00FF41  58                 	db	88	;'X'
   601  00FF42  2C                 	db	44
   602  00FF43  20                 	db	32
   603  00FF44  6C                 	db	108	;'l'
   604  00FF45  6E                 	db	110	;'n'
   605  00FF46  67                 	db	103	;'g'
   606  00FF47  20                 	db	32
   607  00FF48  3D                 	db	61	;'='
   608  00FF49  20                 	db	32
   609  00FF4A  25                 	db	37
   610  00FF4B  30                 	db	48	;'0'
   611  00FF4C  38                 	db	56	;'8'
   612  00FF4D  58                 	db	88	;'X'
   613  00FF4E  0D                 	db	13
   614  00FF4F  0A                 	db	10
   615  00FF50  00                 	db	0
   616  00FF51  25                 	db	37
   617  00FF52  30                 	db	48	;'0'
   618  00FF53  78                 	db	120	;'x'
   619  00FF54  20                 	db	32
   620  00FF55  25                 	db	37
   621  00FF56  30                 	db	48	;'0'
   622  00FF57  78                 	db	120	;'x'
   623  00FF58  20                 	db	32
   624  00FF59  25                 	db	37
   625  00FF5A  30                 	db	48	;'0'
   626  00FF5B  78                 	db	120	;'x'
   627  00FF5C  20                 	db	32
   628  00FF5D  25                 	db	37
   629  00FF5E  30                 	db	48	;'0'
   630  00FF5F  78                 	db	120	;'x'
   631  00FF60  20                 	db	32
   632  00FF61  25                 	db	37
   633  00FF62  30                 	db	48	;'0'
   634  00FF63  78                 	db	120	;'x'
   635  00FF64  20                 	db	32
   636  00FF65  25                 	db	37
   637  00FF66  30                 	db	48	;'0'
   638  00FF67  78                 	db	120	;'x'
   639  00FF68  20                 	db	32
   640  00FF69  25                 	db	37
   641  00FF6A  30                 	db	48	;'0'
   642  00FF6B  78                 	db	120	;'x'
   643  00FF6C  20                 	db	32
   644  00FF6D  25                 	db	37
   645  00FF6E  30                 	db	48	;'0'
   646  00FF6F  78                 	db	120	;'x'
   647  00FF70  0D                 	db	13
   648  00FF71  0A                 	db	10
   649  00FF72  00                 	db	0
   650  00FF73  50                 	db	80	;'P'
   651  00FF74  72                 	db	114	;'r'
   652  00FF75  69                 	db	105	;'i'
   653  00FF76  6E                 	db	110	;'n'
   654  00FF77  74                 	db	116	;'t'
   655  00FF78  69                 	db	105	;'i'
   656  00FF79  6E                 	db	110	;'n'
   657  00FF7A  67                 	db	103	;'g'
   658  00FF7B  20                 	db	32
   659  00FF7C  53                 	db	83	;'S'
   660  00FF7D  54                 	db	84	;'T'
   661  00FF7E  79                 	db	121	;'y'
   662  00FF7F  70                 	db	112	;'p'
   663  00FF80  65                 	db	101	;'e'
   664  00FF81  20                 	db	32
   665  00FF82  66                 	db	102	;'f'
   666  00FF83  69                 	db	105	;'i'
   667  00FF84  65                 	db	101	;'e'
   668  00FF85  6C                 	db	108	;'l'
   669  00FF86  64                 	db	100	;'d'
   670  00FF87  73                 	db	115	;'s'
   671  00FF88  20                 	db	32
   672  00FF89  61                 	db	97	;'a'
   673  00FF8A  74                 	db	116	;'t'
   674  00FF8B  20                 	db	32
   675  00FF8C  28                 	db	40
   676  00FF8D  25                 	db	37
   677  00FF8E  64                 	db	100	;'d'
   678  00FF8F  29                 	db	41
   679  00FF90  3A                 	db	58	;':'
   680  00FF91  0D                 	db	13
   681  00FF92  0A                 	db	10
   682  00FF93  00                 	db	0
   683  00FF94  50                 	db	80	;'P'
   684  00FF95  72                 	db	114	;'r'
   685  00FF96  69                 	db	105	;'i'
   686  00FF97  6E                 	db	110	;'n'
   687  00FF98  74                 	db	116	;'t'
   688  00FF99  69                 	db	105	;'i'
   689  00FF9A  6E                 	db	110	;'n'
   690  00FF9B  67                 	db	103	;'g'
   691  00FF9C  20                 	db	32
   692  00FF9D  55                 	db	85	;'U'
   693  00FF9E  54                 	db	84	;'T'
   694  00FF9F  79                 	db	121	;'y'
   695  00FFA0  70                 	db	112	;'p'
   696  00FFA1  65                 	db	101	;'e'
   697  00FFA2  20                 	db	32
   698  00FFA3  66                 	db	102	;'f'
   699  00FFA4  69                 	db	105	;'i'
   700  00FFA5  65                 	db	101	;'e'
   701  00FFA6  6C                 	db	108	;'l'
   702  00FFA7  64                 	db	100	;'d'
   703  00FFA8  73                 	db	115	;'s'
   704  00FFA9  20                 	db	32
   705  00FFAA  61                 	db	97	;'a'
   706  00FFAB  74                 	db	116	;'t'
   707  00FFAC  20                 	db	32
   708  00FFAD  28                 	db	40
   709  00FFAE  25                 	db	37
   710  00FFAF  64                 	db	100	;'d'
   711  00FFB0  29                 	db	41
   712  00FFB1  3A                 	db	58	;':'
   713  00FFB2  0D                 	db	13
   714  00FFB3  0A                 	db	10
   715  00FFB4  00                 	db	0
   716  00FFB5                     STR_12:
   717  00FFB5  0A                 	db	10
   718  00FFB6  0D                 	db	13
   719  00FFB7  52                 	db	82	;'R'
   720  00FFB8  65                 	db	101	;'e'
   721  00FFB9  63                 	db	99	;'c'
   722  00FFBA  65                 	db	101	;'e'
   723  00FFBB  69                 	db	105	;'i'
   724  00FFBC  76                 	db	118	;'v'
   725  00FFBD  65                 	db	101	;'e'
   726  00FFBE  64                 	db	100	;'d'
   727  00FFBF  20                 	db	32
   728  00FFC0  73                 	db	115	;'s'
   729  00FFC1  74                 	db	116	;'t'
   730  00FFC2  72                 	db	114	;'r'
   731  00FFC3  69                 	db	105	;'i'
   732  00FFC4  6E                 	db	110	;'n'
   733  00FFC5  67                 	db	103	;'g'
   734  00FFC6  3A                 	db	58	;':'
   735  00FFC7  20                 	db	32
   736  00FFC8  00                 	db	0
   737  00FFC9  42                 	db	66	;'B'
   738  00FFCA  79                 	db	121	;'y'
   739  00FFCB  74                 	db	116	;'t'
   740  00FFCC  65                 	db	101	;'e'
   741  00FFCD  20                 	db	32
   742  00FFCE  61                 	db	97	;'a'
   743  00FFCF  74                 	db	116	;'t'
   744  00FFD0  20                 	db	32
   745  00FFD1  28                 	db	40
   746  00FFD2  25                 	db	37
   747  00FFD3  64                 	db	100	;'d'
   748  00FFD4  29                 	db	41
   749  00FFD5  3A                 	db	58	;':'
   750  00FFD6  00                 	db	0
   751  00FFD7  25                 	db	37
   752  00FFD8  30                 	db	48	;'0'
   753  00FFD9  32                 	db	50	;'2'
   754  00FFDA  58                 	db	88	;'X'
   755  00FFDB  48                 	db	72	;'H'
   756  00FFDC  3A                 	db	58	;':'
   757  00FFDD  20                 	db	32
   758  00FFDE  00                 	db	0
   759  00FFDF                     STR_14:
   760  00FFDF  49                 	db	73	;'I'
   761  00FFE0  4E                 	db	78	;'N'
   762  00FFE1  46                 	db	70	;'F'
   763  00FFE2  00                 	db	0
   764  00FFE3                     STR_18:
   765  00FFE3  4E                 	db	78	;'N'
   766  00FFE4  41                 	db	65	;'A'
   767  00FFE5  4E                 	db	78	;'N'
   768  00FFE6  00                 	db	0
   769  00FFE7                     STR_15:
   770  00FFE7  69                 	db	105	;'i'
   771  00FFE8  6E                 	db	110	;'n'
   772  00FFE9  66                 	db	102	;'f'
   773  00FFEA  00                 	db	0
   774  00FFEB                     STR_19:
   775  00FFEB  6E                 	db	110	;'n'
   776  00FFEC  61                 	db	97	;'a'
   777  00FFED  6E                 	db	110	;'n'
   778  00FFEE  00                 	db	0
   779  00FFEF                     STR_40:
   780  00FFEF  6C                 	db	108	;'l'
   781  00FFF0  58                 	db	88	;'X'
   782  00FFF1  00                 	db	0
   783  00FFF2                     STR_22:
   784  00FFF2  6C                 	db	108	;'l'
   785  00FFF3  64                 	db	100	;'d'
   786  00FFF4  00                 	db	0
   787  00FFF5                     STR_31:
   788  00FFF5  6C                 	db	108	;'l'
   789  00FFF6  66                 	db	102	;'f'
   790  00FFF7  00                 	db	0
   791  00FFF8                     STR_26:
   792  00FFF8  6C                 	db	108	;'l'
   793  00FFF9  69                 	db	105	;'i'
   794  00FFFA  00                 	db	0
   795  00FFFB                     STR_36:
   796  00FFFB  6C                 	db	108	;'l'
   797  00FFFC  78                 	db	120	;'x'
   798  00FFFD  00                 	db	0
   799  00FFFE  00                 	db	0	; dummy byte at the end
   800  0000                     
   801                           ; #config settings
   802                           
   803                           	psect	cinit
   804  00C2C4                     __pcinit:
   805                           	callstack 0
   806  00C2C4                     start_initialization:
   807                           	callstack 0
   808  00C2C4                     __initialization:
   809                           	callstack 0
   810                           
   811                           ; Clear objects allocated to BANK2 (200 bytes)
   812  00C2C4  EE02  F000         	lfsr	0,__pbssBANK2
   813  00C2C8  0EC8               	movlw	200
   814  00C2CA                     clear_0:
   815  00C2CA  6AEE               	clrf	postinc0,c
   816  00C2CC  06E8               	decf	wreg,f,c
   817  00C2CE  E1FD               	bnz	clear_0
   818                           
   819                           ; Clear objects allocated to BANK1 (80 bytes)
   820  00C2D0  EE01  F000         	lfsr	0,__pbssBANK1
   821  00C2D4  0E50               	movlw	80
   822  00C2D6                     clear_1:
   823  00C2D6  6AEE               	clrf	postinc0,c
   824  00C2D8  06E8               	decf	wreg,f,c
   825  00C2DA  E1FD               	bnz	clear_1
   826                           
   827                           ; Clear objects allocated to BANK0h (6 bytes)
   828  00C2DC  0100               	movlb	0
   829  00C2DE  6BFE               	clrf	(__pbssBANK0h+5)& (0+255),b
   830  00C2E0  6BFD               	clrf	(__pbssBANK0h+4)& (0+255),b
   831  00C2E2  6BFC               	clrf	(__pbssBANK0h+3)& (0+255),b
   832  00C2E4  6BFB               	clrf	(__pbssBANK0h+2)& (0+255),b
   833  00C2E6  6BFA               	clrf	(__pbssBANK0h+1)& (0+255),b
   834  00C2E8  6BF9               	clrf	__pbssBANK0h& (0+255),b
   835                           
   836                           ; Clear objects allocated to COMRAMh (2 bytes)
   837  00C2EA  6A7D               	clrf	(__pbssCOMRAMh+1)& (0+255),c
   838  00C2EC  6A7C               	clrf	__pbssCOMRAMh& (0+255),c
   839                           
   840                           ; Clear objects allocated to COMRAMl (1 bytes)
   841  00C2EE  6A7E               	clrf	__pbssCOMRAMl& (0+255),c
   842                           
   843                           ; Clear objects allocated to BANK0l (9 bytes)
   844  00C2F0  EE00  F0F0         	lfsr	0,__pbssBANK0l
   845  00C2F4  0E09               	movlw	9
   846  00C2F6                     clear_2:
   847  00C2F6  6AEE               	clrf	postinc0,c
   848  00C2F8  06E8               	decf	wreg,f,c
   849  00C2FA  E1FD               	bnz	clear_2
   850  00C2FC                     end_of_initialization:
   851                           	callstack 0
   852  00C2FC                     __end_of__initialization:
   853                           	callstack 0
   854  00C2FC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   855  00C2FE  6EF8               	movwf	tblptru,c
   856  00C300  0100               	movlb	0
   857  00C302  EF9C  F069         	goto	_main	;jump to C main() function
   858                           
   859                           	psect	bssCOMRAMh
   860  00007C                     __pbssCOMRAMh:
   861                           	callstack 0
   862  00007C                     _flags:
   863                           	callstack 0
   864  00007C                     	ds	2
   865                           
   866                           	psect	bssCOMRAMl
   867  00007E                     __pbssCOMRAMl:
   868                           	callstack 0
   869  00007E                     _data1:
   870                           	callstack 0
   871  00007E                     	ds	1
   872                           
   873                           	psect	bssBANK0h
   874  0000F9                     __pbssBANK0h:
   875                           	callstack 0
   876  0000F9                     _nout:
   877                           	callstack 0
   878  0000F9                     	ds	2
   879  0000FB                     _width:
   880                           	callstack 0
   881  0000FB                     	ds	2
   882  0000FD                     _prec:
   883                           	callstack 0
   884  0000FD                     	ds	2
   885                           
   886                           	psect	bssBANK0l
   887  0000F0                     __pbssBANK0l:
   888                           	callstack 0
   889  0000F0                     floorf@F527:
   890                           	callstack 0
   891  0000F0                     	ds	4
   892  0000F4                     ___fpclassifyf@F465:
   893                           	callstack 0
   894  0000F4                     	ds	4
   895  0000F8                     _X1:
   896                           	callstack 0
   897  0000F8                     	ds	1
   898                           
   899                           	psect	bssBANK1
   900  000100                     __pbssBANK1:
   901                           	callstack 0
   902  000100                     _dbuf:
   903                           	callstack 0
   904  000100                     	ds	80
   905                           
   906                           	psect	bssBANK2
   907  000200                     __pbssBANK2:
   908                           	callstack 0
   909  000200                     _buffer:
   910                           	callstack 0
   911  000200                     	ds	200
   912                           
   913                           	psect	cstackBANK0h
   914  000096                     __pcstackBANK0h:
   915                           	callstack 0
   916  000096                     _efgtoa$1051:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x0
   920  000096                     	ds	2
   921  000098                     _efgtoa$1052:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x2
   925  000098                     	ds	2
   926  00009A                     _efgtoa$1056:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x4
   930  00009A                     	ds	2
   931  00009C                     _efgtoa$1060:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x6
   935  00009C                     	ds	2
   936  00009E                     _efgtoa$1061:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x8
   940  00009E                     	ds	2
   941  0000A0                     _efgtoa$1062:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0xA
   945  0000A0                     	ds	2
   946  0000A2                     efgtoa@t:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0xC
   950  0000A2                     	ds	2
   951  0000A4                     efgtoa@pp:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0xE
   955  0000A4                     	ds	2
   956  0000A6                     efgtoa@ne:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x10
   960  0000A6                     	ds	2
   961  0000A8                     efgtoa@m:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x12
   965  0000A8                     	ds	2
   966  0000AA                     efgtoa@ou:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0x14
   970  0000AA                     	ds	4
   971  0000AE                     efgtoa@d:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x18
   975  0000AE                     	ds	2
   976  0000B0                     efgtoa@sign:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x1A
   980  0000B0                     	ds	2
   981  0000B2                     efgtoa@p:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x1C
   985  0000B2                     	ds	2
   986  0000B4                     efgtoa@w:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x1E
   990  0000B4                     	ds	2
   991  0000B6                     efgtoa@nmode:
   992                           	callstack 0
   993                           
   994                           ; 1 bytes @ 0x20
   995  0000B6                     	ds	1
   996  0000B7                     efgtoa@mode:
   997                           	callstack 0
   998                           
   999                           ; 1 bytes @ 0x21
  1000  0000B7                     	ds	1
  1001  0000B8                     efgtoa@h:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x22
  1005  0000B8                     	ds	4
  1006  0000BC                     efgtoa@l:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x26
  1010  0000BC                     	ds	4
  1011  0000C0                     efgtoa@i:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x2A
  1015  0000C0                     	ds	2
  1016  0000C2                     efgtoa@g:
  1017                           	callstack 0
  1018                           
  1019                           ; 4 bytes @ 0x2C
  1020  0000C2                     	ds	4
  1021  0000C6                     efgtoa@e:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x30
  1025  0000C6                     	ds	2
  1026  0000C8                     efgtoa@n:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x32
  1030  0000C8                     	ds	2
  1031  0000CA                     efgtoa@u:
  1032                           	callstack 0
  1033                           
  1034                           ; 4 bytes @ 0x34
  1035  0000CA                     	ds	4
  1036  0000CE                     ?_vfprintf:
  1037                           	callstack 0
  1038  0000CE                     vfprintf@fp:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x38
  1042  0000CE                     	ds	2
  1043  0000D0                     vfprintf@fmt:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x3A
  1047  0000D0                     	ds	2
  1048  0000D2                     vfprintf@ap:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x3C
  1052  0000D2                     	ds	2
  1053  0000D4                     ?_sprintf:
  1054                           	callstack 0
  1055  0000D4                     sprintf@s:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x3E
  1059  0000D4                     	ds	2
  1060  0000D6                     sprintf@fmt:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x40
  1064  0000D6                     	ds	18
  1065  0000E8                     sprintf@ap:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x52
  1069  0000E8                     	ds	2
  1070  0000EA                     sprintf@f:
  1071                           	callstack 0
  1072                           
  1073                           ; 6 bytes @ 0x54
  1074  0000EA                     	ds	6
  1075                           
  1076                           	psect	cstackCOMRAMh
  1077  000001                     __pcstackCOMRAMh:
  1078                           	callstack 0
  1079  000001                     ?_strlen:
  1080                           	callstack 0
  1081  000001                     ?___fpclassifyf:
  1082                           	callstack 0
  1083  000001                     ?_isupper:
  1084                           	callstack 0
  1085  000001                     ?_isalpha:
  1086                           	callstack 0
  1087  000001                     ?_isdigit:
  1088                           	callstack 0
  1089  000001                     ?_strncmp:
  1090                           	callstack 0
  1091  000001                     ?_isspace:
  1092                           	callstack 0
  1093  000001                     ?_islower:
  1094                           	callstack 0
  1095  000001                     ?___wmul:
  1096                           	callstack 0
  1097  000001                     ?___awdiv:
  1098                           	callstack 0
  1099  000001                     ?___awmod:
  1100                           	callstack 0
  1101  000001                     ?___fladd:
  1102                           	callstack 0
  1103  000001                     ?___fldiv:
  1104                           	callstack 0
  1105  000001                     ?___flmul:
  1106                           	callstack 0
  1107  000001                     ?___flneg:
  1108                           	callstack 0
  1109  000001                     ?___fltol:
  1110                           	callstack 0
  1111  000001                     ?___aodiv:
  1112                           	callstack 0
  1113  000001                     ?___aomod:
  1114                           	callstack 0
  1115  000001                     read_byte_no_lib@c:
  1116                           	callstack 0
  1117  000001                     send_byte_no_lib@c:
  1118                           	callstack 0
  1119  000001                     delay_ms@n:
  1120                           	callstack 0
  1121  000001                     ___wmul@multiplier:
  1122                           	callstack 0
  1123  000001                     ___awdiv@dividend:
  1124                           	callstack 0
  1125  000001                     ___awmod@dividend:
  1126                           	callstack 0
  1127  000001                     isalpha@c:
  1128                           	callstack 0
  1129  000001                     isdigit@c:
  1130                           	callstack 0
  1131  000001                     isspace@c:
  1132                           	callstack 0
  1133  000001                     isupper@c:
  1134                           	callstack 0
  1135  000001                     fputc@c:
  1136                           	callstack 0
  1137  000001                     strcpy@dest:
  1138                           	callstack 0
  1139  000001                     strlen@s:
  1140                           	callstack 0
  1141  000001                     strncmp@_l:
  1142                           	callstack 0
  1143  000001                     islower@c:
  1144                           	callstack 0
  1145  000001                     ___fleq@ff1:
  1146                           	callstack 0
  1147  000001                     ___flneg@f1:
  1148                           	callstack 0
  1149  000001                     ___fltol@f1:
  1150                           	callstack 0
  1151  000001                     ___fladd@b:
  1152                           	callstack 0
  1153  000001                     ___fldiv@b:
  1154                           	callstack 0
  1155  000001                     ___flmul@b:
  1156                           	callstack 0
  1157  000001                     ___fpclassifyf@x:
  1158                           	callstack 0
  1159  000001                     ___aodiv@dividend:
  1160                           	callstack 0
  1161  000001                     ___aomod@dividend:
  1162                           	callstack 0
  1163                           
  1164                           ; 8 bytes @ 0x0
  1165  000001                     	ds	1
  1166  000002                     send_string_no_lib@p:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x1
  1170  000002                     	ds	1
  1171  000003                     ??_isupper:
  1172  000003                     ??_isalpha:
  1173  000003                     ??_isdigit:
  1174  000003                     ??_isspace:
  1175  000003                     ??_islower:
  1176  000003                     delay_ms@i:
  1177                           	callstack 0
  1178  000003                     ___wmul@multiplicand:
  1179                           	callstack 0
  1180  000003                     ___awdiv@divisor:
  1181                           	callstack 0
  1182  000003                     ___awmod@divisor:
  1183                           	callstack 0
  1184  000003                     fputc@fp:
  1185                           	callstack 0
  1186  000003                     strcpy@src:
  1187                           	callstack 0
  1188  000003                     strlen@a:
  1189                           	callstack 0
  1190  000003                     strncmp@_r:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x2
  1194  000003                     	ds	1
  1195  000004                     
  1196                           ; 1 bytes @ 0x3
  1197  000004                     	ds	1
  1198  000005                     ??_fputc:
  1199  000005                     ??___fpclassifyf:
  1200  000005                     ??_strcpy:
  1201  000005                     ??___fltol:
  1202  000005                     ___awdiv@counter:
  1203                           	callstack 0
  1204  000005                     ___awmod@counter:
  1205                           	callstack 0
  1206  000005                     ___wmul@product:
  1207                           	callstack 0
  1208  000005                     strncmp@n:
  1209                           	callstack 0
  1210  000005                     ___fleq@ff2:
  1211                           	callstack 0
  1212  000005                     ___fladd@a:
  1213                           	callstack 0
  1214  000005                     ___fldiv@a:
  1215                           	callstack 0
  1216  000005                     ___flmul@a:
  1217                           	callstack 0
  1218                           
  1219                           ; 4 bytes @ 0x4
  1220  000005                     	ds	1
  1221  000006                     ___awdiv@sign:
  1222                           	callstack 0
  1223  000006                     ___awmod@sign:
  1224                           	callstack 0
  1225                           
  1226                           ; 1 bytes @ 0x5
  1227  000006                     	ds	1
  1228  000007                     ??_strncmp:
  1229  000007                     ?_tolower:
  1230                           	callstack 0
  1231  000007                     ?_toupper:
  1232                           	callstack 0
  1233  000007                     _isspace$1188:
  1234                           	callstack 0
  1235  000007                     ___awdiv@quotient:
  1236                           	callstack 0
  1237  000007                     strcpy@s:
  1238                           	callstack 0
  1239  000007                     tolower@c:
  1240                           	callstack 0
  1241  000007                     toupper@c:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x6
  1245  000007                     	ds	1
  1246  000008                     ?_atoi:
  1247                           	callstack 0
  1248  000008                     atoi@s:
  1249                           	callstack 0
  1250  000008                     strncmp@l:
  1251                           	callstack 0
  1252                           
  1253                           ; 2 bytes @ 0x7
  1254  000008                     	ds	1
  1255  000009                     ??___fladd:
  1256  000009                     ??___fldiv:
  1257  000009                     ??___flmul:
  1258  000009                     ??_tolower:
  1259  000009                     ??_toupper:
  1260  000009                     ??___fleq:
  1261  000009                     ___fltol@sign1:
  1262                           	callstack 0
  1263  000009                     ___fpclassifyf@e:
  1264                           	callstack 0
  1265  000009                     strcpy@d:
  1266                           	callstack 0
  1267  000009                     ___aodiv@divisor:
  1268                           	callstack 0
  1269  000009                     ___aomod@divisor:
  1270                           	callstack 0
  1271                           
  1272                           ; 8 bytes @ 0x8
  1273  000009                     	ds	1
  1274  00000A                     ??_atoi:
  1275  00000A                     ?_ctoa:
  1276                           	callstack 0
  1277  00000A                     ___fltol@exp1:
  1278                           	callstack 0
  1279  00000A                     ctoa@fp:
  1280                           	callstack 0
  1281  00000A                     fputs@s:
  1282                           	callstack 0
  1283  00000A                     strncmp@r:
  1284                           	callstack 0
  1285                           
  1286                           ; 2 bytes @ 0x9
  1287  00000A                     	ds	1
  1288  00000B                     ___fpclassifyf@u:
  1289                           	callstack 0
  1290                           
  1291                           ; 4 bytes @ 0xA
  1292  00000B                     	ds	1
  1293  00000C                     ctoa@c:
  1294                           	callstack 0
  1295  00000C                     fputs@fp:
  1296                           	callstack 0
  1297                           
  1298                           ; 2 bytes @ 0xB
  1299  00000C                     	ds	1
  1300  00000D                     ??_ctoa:
  1301  00000D                     ___fladd@signs:
  1302                           	callstack 0
  1303  00000D                     ___flmul@sign:
  1304                           	callstack 0
  1305  00000D                     _tolower$1252:
  1306                           	callstack 0
  1307  00000D                     _toupper$1267:
  1308                           	callstack 0
  1309  00000D                     ___fldiv@rem:
  1310                           	callstack 0
  1311                           
  1312                           ; 4 bytes @ 0xC
  1313  00000D                     	ds	1
  1314  00000E                     ___fladd@aexp:
  1315                           	callstack 0
  1316  00000E                     fputs@c:
  1317                           	callstack 0
  1318  00000E                     ctoa@l:
  1319                           	callstack 0
  1320  00000E                     atoi@neg:
  1321                           	callstack 0
  1322  00000E                     ___flmul@grs:
  1323                           	callstack 0
  1324                           
  1325                           ; 4 bytes @ 0xD
  1326  00000E                     	ds	1
  1327  00000F                     ___fladd@bexp:
  1328                           	callstack 0
  1329  00000F                     fputs@i:
  1330                           	callstack 0
  1331                           
  1332                           ; 2 bytes @ 0xE
  1333  00000F                     	ds	1
  1334  000010                     ___fladd@grs:
  1335                           	callstack 0
  1336  000010                     ctoa@w:
  1337                           	callstack 0
  1338  000010                     _atoi$1148:
  1339                           	callstack 0
  1340                           
  1341                           ; 2 bytes @ 0xF
  1342  000010                     	ds	1
  1343  000011                     ?_pad:
  1344                           	callstack 0
  1345  000011                     ___aodiv@counter:
  1346                           	callstack 0
  1347  000011                     ___aomod@counter:
  1348                           	callstack 0
  1349  000011                     ___fldiv@sign:
  1350                           	callstack 0
  1351  000011                     pad@fp:
  1352                           	callstack 0
  1353                           
  1354                           ; 2 bytes @ 0x10
  1355  000011                     	ds	1
  1356  000012                     ___aodiv@sign:
  1357                           	callstack 0
  1358  000012                     ___aomod@sign:
  1359                           	callstack 0
  1360  000012                     ___flmul@aexp:
  1361                           	callstack 0
  1362  000012                     ___fldiv@new_exp:
  1363                           	callstack 0
  1364  000012                     _atoi$1150:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x11
  1368  000012                     	ds	1
  1369  000013                     ?_abs:
  1370                           	callstack 0
  1371  000013                     ___flmul@bexp:
  1372                           	callstack 0
  1373  000013                     pad@buf:
  1374                           	callstack 0
  1375  000013                     abs@a:
  1376                           	callstack 0
  1377  000013                     ___aodiv@quotient:
  1378                           	callstack 0
  1379                           
  1380                           ; 8 bytes @ 0x12
  1381  000013                     	ds	1
  1382  000014                     _atoi$1149:
  1383                           	callstack 0
  1384  000014                     ___fldiv@grs:
  1385                           	callstack 0
  1386  000014                     ___flmul@prod:
  1387                           	callstack 0
  1388                           
  1389                           ; 4 bytes @ 0x13
  1390  000014                     	ds	1
  1391  000015                     ??_abs:
  1392  000015                     pad@p:
  1393                           	callstack 0
  1394  000015                     atoi@n:
  1395                           	callstack 0
  1396                           
  1397                           ; 2 bytes @ 0x14
  1398  000015                     	ds	2
  1399  000017                     ??_pad:
  1400                           
  1401                           ; 1 bytes @ 0x16
  1402  000017                     	ds	1
  1403  000018                     ___fldiv@bexp:
  1404                           	callstack 0
  1405  000018                     ___flmul@temp:
  1406                           	callstack 0
  1407  000018                     pad@i:
  1408                           	callstack 0
  1409                           
  1410                           ; 2 bytes @ 0x17
  1411  000018                     	ds	1
  1412  000019                     ___fldiv@aexp:
  1413                           	callstack 0
  1414                           
  1415                           ; 1 bytes @ 0x18
  1416  000019                     	ds	1
  1417  00001A                     ?___flsub:
  1418                           	callstack 0
  1419  00001A                     ?_floorf:
  1420                           	callstack 0
  1421  00001A                     pad@w:
  1422                           	callstack 0
  1423  00001A                     ___flge@ff1:
  1424                           	callstack 0
  1425  00001A                     ___flsub@b:
  1426                           	callstack 0
  1427  00001A                     floorf@x:
  1428                           	callstack 0
  1429                           
  1430                           ; 4 bytes @ 0x19
  1431  00001A                     	ds	2
  1432  00001C                     ?_dtoa:
  1433                           	callstack 0
  1434  00001C                     ?_xtoa:
  1435                           	callstack 0
  1436  00001C                     dtoa@fp:
  1437                           	callstack 0
  1438  00001C                     xtoa@fp:
  1439                           	callstack 0
  1440                           
  1441                           ; 2 bytes @ 0x1B
  1442  00001C                     	ds	2
  1443  00001E                     ??_floorf:
  1444  00001E                     ___flge@ff2:
  1445                           	callstack 0
  1446  00001E                     ___flsub@a:
  1447                           	callstack 0
  1448  00001E                     dtoa@d:
  1449                           	callstack 0
  1450  00001E                     xtoa@d:
  1451                           	callstack 0
  1452                           
  1453                           ; 8 bytes @ 0x1D
  1454  00001E                     	ds	4
  1455  000022                     ??___flge:
  1456                           
  1457                           ; 1 bytes @ 0x21
  1458  000022                     	ds	2
  1459  000024                     floorf@m:
  1460                           	callstack 0
  1461                           
  1462                           ; 4 bytes @ 0x23
  1463  000024                     	ds	2
  1464  000026                     ??_dtoa:
  1465  000026                     xtoa@x:
  1466                           	callstack 0
  1467                           
  1468                           ; 1 bytes @ 0x25
  1469  000026                     	ds	1
  1470  000027                     ??_xtoa:
  1471                           
  1472                           ; 1 bytes @ 0x26
  1473  000027                     	ds	1
  1474  000028                     floorf@e:
  1475                           	callstack 0
  1476                           
  1477                           ; 2 bytes @ 0x27
  1478  000028                     	ds	2
  1479  00002A                     floorf@u:
  1480                           	callstack 0
  1481                           
  1482                           ; 4 bytes @ 0x29
  1483  00002A                     	ds	4
  1484  00002E                     ?_efgtoa:
  1485                           	callstack 0
  1486  00002E                     _dtoa$1027:
  1487                           	callstack 0
  1488  00002E                     efgtoa@fp:
  1489                           	callstack 0
  1490                           
  1491                           ; 2 bytes @ 0x2D
  1492  00002E                     	ds	1
  1493  00002F                     _xtoa$1072:
  1494                           	callstack 0
  1495                           
  1496                           ; 2 bytes @ 0x2E
  1497  00002F                     	ds	1
  1498  000030                     dtoa@p:
  1499                           	callstack 0
  1500  000030                     efgtoa@f:
  1501                           	callstack 0
  1502                           
  1503                           ; 4 bytes @ 0x2F
  1504  000030                     	ds	1
  1505  000031                     _xtoa$1073:
  1506                           	callstack 0
  1507                           
  1508                           ; 2 bytes @ 0x30
  1509  000031                     	ds	1
  1510  000032                     dtoa@w:
  1511                           	callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x31
  1514  000032                     	ds	1
  1515  000033                     xtoa@p:
  1516                           	callstack 0
  1517                           
  1518                           ; 2 bytes @ 0x32
  1519  000033                     	ds	1
  1520  000034                     efgtoa@c:
  1521                           	callstack 0
  1522  000034                     dtoa@s:
  1523                           	callstack 0
  1524                           
  1525                           ; 2 bytes @ 0x33
  1526  000034                     	ds	1
  1527  000035                     ??_efgtoa:
  1528  000035                     xtoa@w:
  1529                           	callstack 0
  1530                           
  1531                           ; 2 bytes @ 0x34
  1532  000035                     	ds	1
  1533  000036                     dtoa@n:
  1534                           	callstack 0
  1535                           
  1536                           ; 8 bytes @ 0x35
  1537  000036                     	ds	1
  1538  000037                     xtoa@n:
  1539                           	callstack 0
  1540                           
  1541                           ; 8 bytes @ 0x36
  1542  000037                     	ds	7
  1543  00003E                     dtoa@i:
  1544                           	callstack 0
  1545                           
  1546                           ; 2 bytes @ 0x3D
  1547  00003E                     	ds	1
  1548  00003F                     xtoa@i:
  1549                           	callstack 0
  1550                           
  1551                           ; 2 bytes @ 0x3E
  1552  00003F                     	ds	2
  1553  000041                     xtoa@c:
  1554                           	callstack 0
  1555                           
  1556                           ; 2 bytes @ 0x40
  1557  000041                     	ds	2
  1558  000043                     ?_vfpfcnvrt:
  1559                           	callstack 0
  1560  000043                     vfpfcnvrt@fp:
  1561                           	callstack 0
  1562                           
  1563                           ; 2 bytes @ 0x42
  1564  000043                     	ds	2
  1565  000045                     vfpfcnvrt@fmt:
  1566                           	callstack 0
  1567                           
  1568                           ; 2 bytes @ 0x44
  1569  000045                     	ds	2
  1570  000047                     vfpfcnvrt@ap:
  1571                           	callstack 0
  1572                           
  1573                           ; 2 bytes @ 0x46
  1574  000047                     	ds	2
  1575  000049                     ??_vfpfcnvrt:
  1576                           
  1577                           ; 1 bytes @ 0x48
  1578  000049                     	ds	14
  1579  000057                     vfprintf@cfmt:
  1580                           	callstack 0
  1581                           
  1582                           ; 2 bytes @ 0x56
  1583  000057                     	ds	2
  1584  000059                     
  1585                           ; 1 bytes @ 0x58
  1586  000059                     	ds	1
  1587  00005A                     main@i:
  1588                           	callstack 0
  1589                           
  1590                           ; 2 bytes @ 0x59
  1591  00005A                     	ds	2
  1592  00005C                     main@ptr:
  1593                           	callstack 0
  1594                           
  1595                           ; 2 bytes @ 0x5B
  1596  00005C                     	ds	2
  1597                           
  1598                           	psect	cstackCOMRAMl
  1599  00005E                     __pcstackCOMRAMl:
  1600                           	callstack 0
  1601  00005E                     vfpfcnvrt@done:
  1602                           	callstack 0
  1603                           
  1604                           ; 2 bytes @ 0x0
  1605  00005E                     	ds	2
  1606  000060                     _vfpfcnvrt$1087:
  1607                           	callstack 0
  1608                           
  1609                           ; 2 bytes @ 0x2
  1610  000060                     	ds	2
  1611  000062                     _vfpfcnvrt$1098:
  1612                           	callstack 0
  1613                           
  1614                           ; 2 bytes @ 0x4
  1615  000062                     	ds	2
  1616  000064                     vfpfcnvrt@ll:
  1617                           	callstack 0
  1618                           
  1619                           ; 8 bytes @ 0x6
  1620  000064                     	ds	8
  1621  00006C                     vfpfcnvrt@llu:
  1622                           	callstack 0
  1623                           
  1624                           ; 8 bytes @ 0xE
  1625  00006C                     	ds	8
  1626  000074                     vfpfcnvrt@f:
  1627                           	callstack 0
  1628                           
  1629                           ; 4 bytes @ 0x16
  1630  000074                     	ds	4
  1631  000078                     vfpfcnvrt@ct:
  1632                           	callstack 0
  1633                           
  1634                           ; 3 bytes @ 0x1A
  1635  000078                     	ds	3
  1636  00007B                     vfpfcnvrt@c:
  1637                           	callstack 0
  1638                           
  1639                           ; 1 bytes @ 0x1D
  1640  00007B                     	ds	1
  1641                           
  1642 ;; *************** function _sprintf *****************
  1643 ;; Defined at:
  1644 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  s               2   62[BANK0h] PTR unsigned char 
  1647 ;;		 -> buffer(200), 
  1648 ;;  fmt             2   64[BANK0h] PTR const unsigned char 
  1649 ;;		 -> STR_13(3), STR_12(20), STR_11(43), STR_10(34), 
  1650 ;;		 -> STR_9(8), STR_8(14), STR_7(41), STR_6(42), 
  1651 ;;		 -> STR_5(33), STR_4(41), STR_3(38), STR_2(33), 
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;  f               6   84[BANK0h] struct _IO_FILE
  1654 ;;  ap              2   82[BANK0h] PTR void [1]
  1655 ;;		 -> ?_sprintf(2), 
  1656 ;;  ret             2    0        int 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  2   62[BANK0h] int 
  1659 ;; Registers used:
  1660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  1666 ;;      Params:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1667 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1669 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1670 ;;Total ram usage:       28 bytes
  1671 ;; Hardware stack levels used: 1
  1672 ;; Hardware stack levels required when called: 7
  1673 ;; This function calls:
  1674 ;;		_vfprintf
  1675 ;; This function is called by:
  1676 ;;		_main
  1677 ;;		_print_structure
  1678 ;;		_print_union
  1679 ;;		_print_byte
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text1
  1684  00C3E2                     __ptext1:
  1685                           	callstack 0
  1686  00C3E2                     _sprintf:
  1687                           	callstack 23
  1688  00C3E2  0ED8               	movlw	low (?_sprintf+4)
  1689  00C3E4  0100               	movlb	0	; () banked
  1690  00C3E6  6FE8               	movwf	sprintf@ap& (0+255),b
  1691  00C3E8  0E00               	movlw	high (?_sprintf+4)
  1692  00C3EA  6FE9               	movwf	(sprintf@ap+1)& (0+255),b
  1693  00C3EC  C0D4  F0EA         	movff	sprintf@s,sprintf@f
  1694  00C3F0  C0D5  F0EB         	movff	sprintf@s+1,sprintf@f+1
  1695  00C3F4                     
  1696                           ; BSR set to: 0
  1697  00C3F4  0E00               	movlw	0
  1698  00C3F6  6FED               	movwf	(sprintf@f+3)& (0+255),b
  1699  00C3F8  0E00               	movlw	0
  1700  00C3FA  6FEC               	movwf	(sprintf@f+2)& (0+255),b
  1701  00C3FC                     
  1702                           ; BSR set to: 0
  1703  00C3FC  0E00               	movlw	0
  1704  00C3FE  6FEF               	movwf	(sprintf@f+5)& (0+255),b
  1705  00C400  0E00               	movlw	0
  1706  00C402  6FEE               	movwf	(sprintf@f+4)& (0+255),b
  1707  00C404                     
  1708                           ; BSR set to: 0
  1709  00C404  0EEA               	movlw	low sprintf@f
  1710  00C406  6FCE               	movwf	vfprintf@fp& (0+255),b
  1711  00C408  0E00               	movlw	high sprintf@f
  1712  00C40A  6FCF               	movwf	(vfprintf@fp+1)& (0+255),b
  1713  00C40C  C0D6  F0D0         	movff	sprintf@fmt,vfprintf@fmt
  1714  00C410  C0D7  F0D1         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1715  00C414  0EE8               	movlw	low sprintf@ap
  1716  00C416  6FD2               	movwf	vfprintf@ap& (0+255),b
  1717  00C418  0E00               	movlw	high sprintf@ap
  1718  00C41A  6FD3               	movwf	(vfprintf@ap+1)& (0+255),b
  1719  00C41C  ECD9  F062         	call	_vfprintf	;wreg free
  1720  00C420  0100               	movlb	0	; () banked
  1721  00C422  51EC               	movf	(sprintf@f+2)& (0+255),w,b
  1722  00C424  25D4               	addwf	sprintf@s& (0+255),w,b
  1723  00C426  6ED9               	movwf	fsr2l,c
  1724  00C428  51ED               	movf	(sprintf@f+3)& (0+255),w,b
  1725  00C42A  21D5               	addwfc	(sprintf@s+1)& (0+255),w,b
  1726  00C42C  6EDA               	movwf	fsr2h,c
  1727  00C42E  0E00               	movlw	0
  1728  00C430  6EDF               	movwf	indf2,c
  1729  00C432                     
  1730                           ; BSR set to: 0
  1731  00C432  0012               	return		;funcret
  1732  00C434                     __end_of_sprintf:
  1733                           	callstack 0
  1734                           
  1735 ;; *************** function _vfprintf *****************
  1736 ;; Defined at:
  1737 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  fp              2   56[BANK0h] PTR struct _IO_FILE
  1740 ;;		 -> sprintf@f(6), 
  1741 ;;  fmt             2   58[BANK0h] PTR const unsigned char 
  1742 ;;		 -> STR_13(3), STR_12(20), STR_11(43), STR_10(34), 
  1743 ;;		 -> STR_9(8), STR_8(14), STR_7(41), STR_6(42), 
  1744 ;;		 -> STR_5(33), STR_4(41), STR_3(38), STR_2(33), 
  1745 ;;  ap              2   60[BANK0h] PTR PTR void 
  1746 ;;		 -> sprintf@ap(2), 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  1749 ;;		 -> STR_13(3), STR_12(20), STR_11(43), STR_10(34), 
  1750 ;;		 -> STR_9(8), STR_8(14), STR_7(41), STR_6(42), 
  1751 ;;		 -> STR_5(33), STR_4(41), STR_3(38), STR_2(33), 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  2   56[BANK0h] int 
  1754 ;; Registers used:
  1755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  1761 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1762 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1764 ;;      Totals:         2       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1765 ;;Total ram usage:        8 bytes
  1766 ;; Hardware stack levels used: 1
  1767 ;; Hardware stack levels required when called: 6
  1768 ;; This function calls:
  1769 ;;		_vfpfcnvrt
  1770 ;; This function is called by:
  1771 ;;		_sprintf
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text2
  1776  00C5B2                     __ptext2:
  1777                           	callstack 0
  1778  00C5B2                     _vfprintf:
  1779                           	callstack 23
  1780  00C5B2                     
  1781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1782  00C5B2  C0D0  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  1783  00C5B6  C0D1  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1784  00C5BA                     
  1785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1786  00C5BA  0E00               	movlw	0
  1787  00C5BC  0100               	movlb	0	; () banked
  1788  00C5BE  6FFA               	movwf	(_nout+1)& (0+255),b
  1789  00C5C0  0E00               	movlw	0
  1790  00C5C2  6FF9               	movwf	_nout& (0+255),b
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1793  00C5C4  EFF7  F062         	goto	l4698
  1794  00C5C8                     l4696:
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1798  00C5C8  C0CE  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1799  00C5CC  C0CF  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1800  00C5D0  0E57               	movlw	low vfprintf@cfmt
  1801  00C5D2  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1802  00C5D4  0E00               	movlw	high vfprintf@cfmt
  1803  00C5D6  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1804  00C5D8  C0D2  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1805  00C5DC  C0D3  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1806  00C5E0  EC8F  F074         	call	_vfpfcnvrt	;wreg free
  1807  00C5E4  5043               	movf	?_vfpfcnvrt^0,w,c
  1808  00C5E6  0100               	movlb	0	; () banked
  1809  00C5E8  27F9               	addwf	_nout& (0+255),f,b
  1810  00C5EA  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1811  00C5EC  23FA               	addwfc	(_nout+1)& (0+255),f,b
  1812  00C5EE                     l4698:
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1816  00C5EE  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  1817  00C5F2  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1818  00C5F6                     	if	0	;tblptru may be non-zero
  1819  00C5F6                     	endif
  1820  00C5F6                     	if	0	;tblptru may be non-zero
  1821  00C5F6                     	endif
  1822  00C5F6  0008               	tblrd		*
  1823  00C5F8  50F5               	movf	tablat,w,c
  1824  00C5FA  0900               	iorlw	0
  1825  00C5FC  A4D8               	btfss	status,2,c
  1826  00C5FE  EF03  F063         	goto	u6281
  1827  00C602  EF05  F063         	goto	u6280
  1828  00C606                     u6281:
  1829  00C606  EFE4  F062         	goto	l4696
  1830  00C60A                     u6280:
  1831  00C60A                     
  1832                           ; BSR set to: 0
  1833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1834  00C60A  C0F9  F0CE         	movff	_nout,?_vfprintf
  1835  00C60E  C0FA  F0CF         	movff	_nout+1,?_vfprintf+1
  1836  00C612                     
  1837                           ; BSR set to: 0
  1838  00C612  0012               	return		;funcret
  1839  00C614                     __end_of_vfprintf:
  1840                           	callstack 0
  1841                           
  1842 ;; *************** function _vfpfcnvrt *****************
  1843 ;; Defined at:
  1844 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1847 ;;		 -> sprintf@f(6), 
  1848 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1849 ;;		 -> vfprintf@cfmt(2), 
  1850 ;;  ap              2   70[COMRAM] PTR PTR void 
  1851 ;;		 -> sprintf@ap(2), 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  llu             8   14[COMRAM] unsigned long long 
  1854 ;;  ll              8    6[COMRAM] long long 
  1855 ;;  f               4   22[COMRAM] long long 
  1856 ;;  ct              3   26[COMRAM] unsigned char [3]
  1857 ;;  vp              3    0        PTR void 
  1858 ;;  cp              3    0        PTR unsigned char 
  1859 ;;  done            2    0[COMRAM] int 
  1860 ;;  i               2    0        int 
  1861 ;;  c               1   29[COMRAM] unsigned char 
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  2   66[COMRAM] int 
  1864 ;; Registers used:
  1865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  1871 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1872 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1873 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1874 ;;      Totals:        20      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  1875 ;;Total ram usage:       50 bytes
  1876 ;; Hardware stack levels used: 1
  1877 ;; Hardware stack levels required when called: 5
  1878 ;; This function calls:
  1879 ;;		_atoi
  1880 ;;		_ctoa
  1881 ;;		_dtoa
  1882 ;;		_efgtoa
  1883 ;;		_fputc
  1884 ;;		_isdigit
  1885 ;;		_isupper
  1886 ;;		_strncmp
  1887 ;;		_tolower
  1888 ;;		_xtoa
  1889 ;; This function is called by:
  1890 ;;		_vfprintf
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           	psect	text3
  1895  00E91E                     __ptext3:
  1896                           	callstack 0
  1897  00E91E                     _vfpfcnvrt:
  1898                           	callstack 23
  1899  00E91E                     
  1900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1901  00E91E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1902  00E922  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1903  00E926  CFDE FFF6          	movff	postinc2,tblptrl
  1904  00E92A  CFDD FFF7          	movff	postdec2,tblptrh
  1905  00E92E                     	if	0	;tblptru may be non-zero
  1906  00E92E                     	endif
  1907  00E92E                     	if	0	;tblptru may be non-zero
  1908  00E92E                     	endif
  1909  00E92E  0008               	tblrd		*
  1910  00E930  50F5               	movf	tablat,w,c
  1911  00E932  0A25               	xorlw	37
  1912  00E934  A4D8               	btfss	status,2,c
  1913  00E936  EF9F  F074         	goto	u6001
  1914  00E93A  EFA1  F074         	goto	u6000
  1915  00E93E                     u6001:
  1916  00E93E  EFEF  F078         	goto	l4672
  1917  00E942                     u6000:
  1918  00E942                     
  1919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1920  00E942  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1921  00E946  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1922  00E94A  2ADE               	incf	postinc2,f,c
  1923  00E94C  0E00               	movlw	0
  1924  00E94E  22DD               	addwfc	postdec2,f,c
  1925  00E950                     
  1926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1927  00E950  0E00               	movlw	0
  1928  00E952  0100               	movlb	0	; () banked
  1929  00E954  6FFC               	movwf	(_width+1)& (0+255),b
  1930  00E956  0E00               	movlw	0
  1931  00E958  6FFB               	movwf	_width& (0+255),b
  1932  00E95A  C0FB  F07C         	movff	_width,_flags
  1933  00E95E  C0FC  F07D         	movff	_width+1,_flags+1
  1934  00E962                     
  1935                           ; BSR set to: 0
  1936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1937  00E962  69FD               	setf	_prec& (0+255),b
  1938  00E964  69FE               	setf	(_prec+1)& (0+255),b
  1939  00E966                     
  1940                           ; BSR set to: 0
  1941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1942  00E966  0E00               	movlw	0
  1943  00E968  6E5F               	movwf	(vfpfcnvrt@done+1)^0,c
  1944  00E96A  0E00               	movlw	0
  1945  00E96C  6E5E               	movwf	vfpfcnvrt@done^0,c
  1946                           
  1947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1948  00E96E  EFFF  F074         	goto	l4540
  1949  00E972                     l4514:
  1950                           
  1951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1952  00E972  807C               	bsf	_flags^0,0,c
  1953  00E974                     l4516:
  1954                           
  1955                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1956  00E974  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1957  00E978  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1958  00E97C  2ADE               	incf	postinc2,f,c
  1959  00E97E  0E00               	movlw	0
  1960  00E980  22DD               	addwfc	postdec2,f,c
  1961                           
  1962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1963  00E982  EFFF  F074         	goto	l4540
  1964  00E986                     l4518:
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1967  00E986  827C               	bsf	_flags^0,1,c
  1968  00E988  EFBA  F074         	goto	l4516
  1969  00E98C                     l4522:
  1970                           
  1971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1972  00E98C  847C               	bsf	_flags^0,2,c
  1973  00E98E  EFBA  F074         	goto	l4516
  1974  00E992                     l4526:
  1975                           
  1976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1977  00E992  867C               	bsf	_flags^0,3,c
  1978  00E994  EFBA  F074         	goto	l4516
  1979  00E998                     l4530:
  1980                           
  1981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1982  00E998  887C               	bsf	_flags^0,4,c
  1983  00E99A  EFBA  F074         	goto	l4516
  1984  00E99E                     l4534:
  1985                           
  1986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1987  00E99E  0E00               	movlw	0
  1988  00E9A0  6E5F               	movwf	(vfpfcnvrt@done+1)^0,c
  1989  00E9A2  0E01               	movlw	1
  1990  00E9A4  6E5E               	movwf	vfpfcnvrt@done^0,c
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1993  00E9A6  EFFF  F074         	goto	l4540
  1994  00E9AA                     l4538:
  1995  00E9AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1996  00E9AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1997  00E9B2  CFDE FFF6          	movff	postinc2,tblptrl
  1998  00E9B6  CFDD FFF7          	movff	postdec2,tblptrh
  1999  00E9BA                     	if	0	;tblptru may be non-zero
  2000  00E9BA                     	endif
  2001  00E9BA                     	if	0	;tblptru may be non-zero
  2002  00E9BA                     	endif
  2003  00E9BA  0008               	tblrd		*
  2004  00E9BC  50F5               	movf	tablat,w,c
  2005  00E9BE  6E49               	movwf	??_vfpfcnvrt^0,c
  2006  00E9C0  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  2007                           
  2008                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2009                           ; Switch size 1, requested type "simple"
  2010                           ; Number of cases is 1, Range of values is 0 to 0
  2011                           ; switch strategies available:
  2012                           ; Name         Instructions Cycles
  2013                           ; simple_byte            4     3 (average)
  2014                           ;	Chosen strategy is simple_byte
  2015  00E9C2  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2016  00E9C4  0A00               	xorlw	0	; case 0
  2017  00E9C6  B4D8               	btfsc	status,2,c
  2018  00E9C8  EFE8  F074         	goto	l4914
  2019  00E9CC  EFCF  F074         	goto	l4534
  2020  00E9D0                     l4914:
  2021                           
  2022                           ; Switch size 1, requested type "simple"
  2023                           ; Number of cases is 5, Range of values is 32 to 48
  2024                           ; switch strategies available:
  2025                           ; Name         Instructions Cycles
  2026                           ; simple_byte           16     9 (average)
  2027                           ;	Chosen strategy is simple_byte
  2028  00E9D0  5049               	movf	??_vfpfcnvrt^0,w,c
  2029  00E9D2  0A20               	xorlw	32	; case 32
  2030  00E9D4  B4D8               	btfsc	status,2,c
  2031  00E9D6  EFC9  F074         	goto	l4526
  2032  00E9DA  0A03               	xorlw	3	; case 35
  2033  00E9DC  B4D8               	btfsc	status,2,c
  2034  00E9DE  EFCC  F074         	goto	l4530
  2035  00E9E2  0A08               	xorlw	8	; case 43
  2036  00E9E4  B4D8               	btfsc	status,2,c
  2037  00E9E6  EFC6  F074         	goto	l4522
  2038  00E9EA  0A06               	xorlw	6	; case 45
  2039  00E9EC  B4D8               	btfsc	status,2,c
  2040  00E9EE  EFB9  F074         	goto	l4514
  2041  00E9F2  0A1D               	xorlw	29	; case 48
  2042  00E9F4  B4D8               	btfsc	status,2,c
  2043  00E9F6  EFC3  F074         	goto	l4518
  2044  00E9FA  EFCF  F074         	goto	l4534
  2045  00E9FE                     l4540:
  2046                           
  2047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2048  00E9FE  505E               	movf	vfpfcnvrt@done^0,w,c
  2049  00EA00  105F               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  2050  00EA02  B4D8               	btfsc	status,2,c
  2051  00EA04  EF06  F075         	goto	u6011
  2052  00EA08  EF08  F075         	goto	u6010
  2053  00EA0C                     u6011:
  2054  00EA0C  EFD5  F074         	goto	l4538
  2055  00EA10                     u6010:
  2056  00EA10                     
  2057                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2058  00EA10  A07C               	btfss	_flags^0,0,c
  2059  00EA12  EF0D  F075         	goto	u6021
  2060  00EA16  EF0F  F075         	goto	u6020
  2061  00EA1A                     u6021:
  2062  00EA1A  EF10  F075         	goto	l4544
  2063  00EA1E                     u6020:
  2064  00EA1E                     
  2065                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2066  00EA1E  927C               	bcf	_flags^0,1,c
  2067  00EA20                     l4544:
  2068                           
  2069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2070  00EA20  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2071  00EA24  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2072  00EA28  CFDE FFF6          	movff	postinc2,tblptrl
  2073  00EA2C  CFDD FFF7          	movff	postdec2,tblptrh
  2074  00EA30                     	if	0	;tblptru may be non-zero
  2075  00EA30                     	endif
  2076  00EA30                     	if	0	;tblptru may be non-zero
  2077  00EA30                     	endif
  2078  00EA30  0008               	tblrd		*
  2079  00EA32  50F5               	movf	tablat,w,c
  2080  00EA34  0A2A               	xorlw	42
  2081  00EA36  A4D8               	btfss	status,2,c
  2082  00EA38  EF20  F075         	goto	u6031
  2083  00EA3C  EF22  F075         	goto	u6030
  2084  00EA40                     u6031:
  2085  00EA40  EF4C  F075         	goto	l4552
  2086  00EA44                     u6030:
  2087  00EA44                     
  2088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2089  00EA44  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2090  00EA48  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2091  00EA4C  2ADE               	incf	postinc2,f,c
  2092  00EA4E  0E00               	movlw	0
  2093  00EA50  22DD               	addwfc	postdec2,f,c
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2096  00EA52  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2097  00EA56  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2098  00EA5A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2099  00EA5E  0E02               	movlw	2
  2100  00EA60  26DE               	addwf	postinc2,f,c
  2101  00EA62  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2102  00EA66  0E00               	movlw	0
  2103  00EA68  22DD               	addwfc	postdec2,f,c
  2104  00EA6A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2105  00EA6E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2106  00EA72  CFDE F0FB          	movff	postinc2,_width
  2107  00EA76  CFDD F0FC          	movff	postdec2,_width+1
  2108  00EA7A                     
  2109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2110  00EA7A  0100               	movlb	0	; () banked
  2111  00EA7C  BFFC               	btfsc	(_width+1)& (0+255),7,b
  2112  00EA7E  EF45  F075         	goto	u6040
  2113  00EA82  EF43  F075         	goto	u6041
  2114  00EA86                     u6041:
  2115  00EA86  EF8F  F075         	goto	l4562
  2116  00EA8A                     u6040:
  2117  00EA8A                     
  2118                           ; BSR set to: 0
  2119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2120  00EA8A  807C               	bsf	_flags^0,0,c
  2121                           
  2122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2123  00EA8C  6DFB               	negf	_width& (0+255),b
  2124  00EA8E  1FFC               	comf	(_width+1)& (0+255),f,b
  2125  00EA90  B0D8               	btfsc	status,0,c
  2126  00EA92  2BFC               	incf	(_width+1)& (0+255),f,b
  2127  00EA94  EF8F  F075         	goto	l4562
  2128  00EA98                     l4552:
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2131  00EA98  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2132  00EA9C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2133  00EAA0  CFDE F008          	movff	postinc2,atoi@s
  2134  00EAA4  CFDD F009          	movff	postdec2,atoi@s+1
  2135  00EAA8  ECD4  F068         	call	_atoi	;wreg free
  2136  00EAAC  C008  F0FB         	movff	?_atoi,_width
  2137  00EAB0  C009  F0FC         	movff	?_atoi+1,_width+1
  2138                           
  2139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2140  00EAB4  EF63  F075         	goto	l4556
  2141  00EAB8                     l4554:
  2142                           
  2143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2144  00EAB8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2145  00EABC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2146  00EAC0  2ADE               	incf	postinc2,f,c
  2147  00EAC2  0E00               	movlw	0
  2148  00EAC4  22DD               	addwfc	postdec2,f,c
  2149  00EAC6                     l4556:
  2150  00EAC6  0ED0               	movlw	208
  2151  00EAC8  6E49               	movwf	??_vfpfcnvrt^0,c
  2152  00EACA  0EFF               	movlw	255
  2153  00EACC  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  2154  00EACE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2155  00EAD2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2156  00EAD6  CFDE FFF6          	movff	postinc2,tblptrl
  2157  00EADA  CFDD FFF7          	movff	postdec2,tblptrh
  2158  00EADE                     	if	0	;tblptru may be non-zero
  2159  00EADE                     	endif
  2160  00EADE                     	if	0	;tblptru may be non-zero
  2161  00EADE                     	endif
  2162  00EADE  0008               	tblrd		*
  2163  00EAE0  50F5               	movf	tablat,w,c
  2164  00EAE2  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  2165  00EAE4  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  2166  00EAE6  5049               	movf	??_vfpfcnvrt^0,w,c
  2167  00EAE8  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2168  00EAEA  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2169  00EAEC  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2170  00EAEE  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  2171  00EAF0  E10A               	bnz	u6050
  2172  00EAF2  0E0A               	movlw	10
  2173  00EAF4  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2174  00EAF6  A0D8               	btfss	status,0,c
  2175  00EAF8  EF80  F075         	goto	u6051
  2176  00EAFC  EF83  F075         	goto	u6050
  2177  00EB00                     u6051:
  2178  00EB00  0E01               	movlw	1
  2179  00EB02  EF84  F075         	goto	u6060
  2180  00EB06                     u6050:
  2181  00EB06  0E00               	movlw	0
  2182  00EB08                     u6060:
  2183  00EB08  6E60               	movwf	_vfpfcnvrt$1087^0,c
  2184  00EB0A  6A61               	clrf	(_vfpfcnvrt$1087+1)^0,c
  2185  00EB0C  5060               	movf	_vfpfcnvrt$1087^0,w,c
  2186  00EB0E  1061               	iorwf	(_vfpfcnvrt$1087+1)^0,w,c
  2187  00EB10  A4D8               	btfss	status,2,c
  2188  00EB12  EF8D  F075         	goto	u6071
  2189  00EB16  EF8F  F075         	goto	u6070
  2190  00EB1A                     u6071:
  2191  00EB1A  EF5C  F075         	goto	l4554
  2192  00EB1E                     u6070:
  2193  00EB1E                     l4562:
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2196  00EB1E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2197  00EB22  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2198  00EB26  CFDE FFF6          	movff	postinc2,tblptrl
  2199  00EB2A  CFDD FFF7          	movff	postdec2,tblptrh
  2200  00EB2E                     	if	0	;tblptru may be non-zero
  2201  00EB2E                     	endif
  2202  00EB2E                     	if	0	;tblptru may be non-zero
  2203  00EB2E                     	endif
  2204  00EB2E  0008               	tblrd		*
  2205  00EB30  50F5               	movf	tablat,w,c
  2206  00EB32  6E07               	movwf	tolower@c^0,c
  2207  00EB34  6A08               	clrf	(tolower@c+1)^0,c
  2208  00EB36  EC78  F062         	call	_tolower	;wreg free
  2209  00EB3A  5007               	movf	?_tolower^0,w,c
  2210  00EB3C  6E78               	movwf	vfpfcnvrt@ct^0,c
  2211  00EB3E                     
  2212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2213  00EB3E  5078               	movf	vfpfcnvrt@ct^0,w,c
  2214  00EB40  B4D8               	btfsc	status,2,c
  2215  00EB42  EFA5  F075         	goto	u6081
  2216  00EB46  EFA7  F075         	goto	u6080
  2217  00EB4A                     u6081:
  2218  00EB4A  EFDF  F075         	goto	l4572
  2219  00EB4E                     u6080:
  2220  00EB4E                     
  2221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2222  00EB4E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2223  00EB52  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2224  00EB56  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  2225  00EB5A  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  2226  00EB5E  0E01               	movlw	1
  2227  00EB60  2649               	addwf	??_vfpfcnvrt^0,f,c
  2228  00EB62  0E00               	movlw	0
  2229  00EB64  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2230  00EB66  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2231  00EB6A  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2232  00EB6E                     	if	0	;tblptru may be non-zero
  2233  00EB6E                     	endif
  2234  00EB6E                     	if	0	;tblptru may be non-zero
  2235  00EB6E                     	endif
  2236  00EB6E  0008               	tblrd		*
  2237  00EB70  50F5               	movf	tablat,w,c
  2238  00EB72  6E07               	movwf	tolower@c^0,c
  2239  00EB74  6A08               	clrf	(tolower@c+1)^0,c
  2240  00EB76  EC78  F062         	call	_tolower	;wreg free
  2241  00EB7A  5007               	movf	?_tolower^0,w,c
  2242  00EB7C  6E79               	movwf	(vfpfcnvrt@ct+1)^0,c
  2243  00EB7E                     
  2244                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2245  00EB7E  5079               	movf	(vfpfcnvrt@ct+1)^0,w,c
  2246  00EB80  B4D8               	btfsc	status,2,c
  2247  00EB82  EFC5  F075         	goto	u6091
  2248  00EB86  EFC7  F075         	goto	u6090
  2249  00EB8A                     u6091:
  2250  00EB8A  EFDF  F075         	goto	l4572
  2251  00EB8E                     u6090:
  2252  00EB8E                     
  2253                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2254  00EB8E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2255  00EB92  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2256  00EB96  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  2257  00EB9A  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  2258  00EB9E  0E02               	movlw	2
  2259  00EBA0  2649               	addwf	??_vfpfcnvrt^0,f,c
  2260  00EBA2  0E00               	movlw	0
  2261  00EBA4  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2262  00EBA6  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2263  00EBAA  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2264  00EBAE                     	if	0	;tblptru may be non-zero
  2265  00EBAE                     	endif
  2266  00EBAE                     	if	0	;tblptru may be non-zero
  2267  00EBAE                     	endif
  2268  00EBAE  0008               	tblrd		*
  2269  00EBB0  50F5               	movf	tablat,w,c
  2270  00EBB2  6E07               	movwf	tolower@c^0,c
  2271  00EBB4  6A08               	clrf	(tolower@c+1)^0,c
  2272  00EBB6  EC78  F062         	call	_tolower	;wreg free
  2273  00EBBA  5007               	movf	?_tolower^0,w,c
  2274  00EBBC  6E7A               	movwf	(vfpfcnvrt@ct+2)^0,c
  2275  00EBBE                     l4572:
  2276                           
  2277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2278  00EBBE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2279  00EBC2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2280  00EBC6  CFDE FFF6          	movff	postinc2,tblptrl
  2281  00EBCA  CFDD FFF7          	movff	postdec2,tblptrh
  2282  00EBCE                     	if	0	;tblptru may be non-zero
  2283  00EBCE                     	endif
  2284  00EBCE                     	if	0	;tblptru may be non-zero
  2285  00EBCE                     	endif
  2286  00EBCE  0008               	tblrd		*
  2287  00EBD0  50F5               	movf	tablat,w,c
  2288  00EBD2  0A63               	xorlw	99
  2289  00EBD4  A4D8               	btfss	status,2,c
  2290  00EBD6  EFEF  F075         	goto	u6101
  2291  00EBDA  EFF1  F075         	goto	u6100
  2292  00EBDE                     u6101:
  2293  00EBDE  EF18  F076         	goto	l4580
  2294  00EBE2                     u6100:
  2295  00EBE2                     
  2296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2297  00EBE2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2298  00EBE6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2299  00EBEA  2ADE               	incf	postinc2,f,c
  2300  00EBEC  0E00               	movlw	0
  2301  00EBEE  22DD               	addwfc	postdec2,f,c
  2302                           
  2303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2304  00EBF0  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2305  00EBF4  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2306  00EBF8  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2307  00EBFC  0E02               	movlw	2
  2308  00EBFE  26DE               	addwf	postinc2,f,c
  2309  00EC00  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2310  00EC04  0E00               	movlw	0
  2311  00EC06  22DD               	addwfc	postdec2,f,c
  2312  00EC08  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2313  00EC0C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2314  00EC10  50DF               	movf	indf2,w,c
  2315  00EC12  6E7B               	movwf	vfpfcnvrt@c^0,c
  2316  00EC14                     
  2317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2318  00EC14  C043  F00A         	movff	vfpfcnvrt@fp,ctoa@fp
  2319  00EC18  C044  F00B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2320  00EC1C  C07B  F00C         	movff	vfpfcnvrt@c,ctoa@c
  2321  00EC20  ECDF  F064         	call	_ctoa	;wreg free
  2322  00EC24  C00A  F043         	movff	?_ctoa,?_vfpfcnvrt
  2323  00EC28  C00B  F044         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2324  00EC2C  EF0A  F079         	goto	l1057
  2325  00EC30                     l4580:
  2326                           
  2327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2328  00EC30  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2329  00EC34  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2330  00EC38  CFDE FFF6          	movff	postinc2,tblptrl
  2331  00EC3C  CFDD FFF7          	movff	postdec2,tblptrh
  2332  00EC40                     	if	0	;tblptru may be non-zero
  2333  00EC40                     	endif
  2334  00EC40                     	if	0	;tblptru may be non-zero
  2335  00EC40                     	endif
  2336  00EC40  0008               	tblrd		*
  2337  00EC42  50F5               	movf	tablat,w,c
  2338  00EC44  0A64               	xorlw	100
  2339  00EC46  B4D8               	btfsc	status,2,c
  2340  00EC48  EF28  F076         	goto	u6111
  2341  00EC4C  EF2A  F076         	goto	u6110
  2342  00EC50                     u6111:
  2343  00EC50  EF3C  F076         	goto	l4584
  2344  00EC54                     u6110:
  2345  00EC54  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2346  00EC58  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2347  00EC5C  CFDE FFF6          	movff	postinc2,tblptrl
  2348  00EC60  CFDD FFF7          	movff	postdec2,tblptrh
  2349  00EC64                     	if	0	;tblptru may be non-zero
  2350  00EC64                     	endif
  2351  00EC64                     	if	0	;tblptru may be non-zero
  2352  00EC64                     	endif
  2353  00EC64  0008               	tblrd		*
  2354  00EC66  50F5               	movf	tablat,w,c
  2355  00EC68  0A69               	xorlw	105
  2356  00EC6A  A4D8               	btfss	status,2,c
  2357  00EC6C  EF3A  F076         	goto	u6121
  2358  00EC70  EF3C  F076         	goto	u6120
  2359  00EC74                     u6121:
  2360  00EC74  EF7C  F076         	goto	l4590
  2361  00EC78                     u6120:
  2362  00EC78                     l4584:
  2363                           
  2364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2365  00EC78  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2366  00EC7C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2367  00EC80  2ADE               	incf	postinc2,f,c
  2368  00EC82  0E00               	movlw	0
  2369  00EC84  22DD               	addwfc	postdec2,f,c
  2370                           
  2371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2372  00EC86  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2373  00EC8A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2374  00EC8E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2375  00EC92  0E02               	movlw	2
  2376  00EC94  26DE               	addwf	postinc2,f,c
  2377  00EC96  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2378  00EC9A  0E00               	movlw	0
  2379  00EC9C  22DD               	addwfc	postdec2,f,c
  2380  00EC9E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2381  00ECA2  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2382  00ECA6  CFDE F064          	movff	postinc2,vfpfcnvrt@ll
  2383  00ECAA  CFDD F065          	movff	postdec2,vfpfcnvrt@ll+1
  2384  00ECAE  0E00               	movlw	0
  2385  00ECB0  BE65               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2386  00ECB2  0EFF               	movlw	-1
  2387  00ECB4  6E66               	movwf	(vfpfcnvrt@ll+2)^0,c
  2388  00ECB6  6E67               	movwf	(vfpfcnvrt@ll+3)^0,c
  2389  00ECB8  6E68               	movwf	(vfpfcnvrt@ll+4)^0,c
  2390  00ECBA  6E69               	movwf	(vfpfcnvrt@ll+5)^0,c
  2391  00ECBC  6E6A               	movwf	(vfpfcnvrt@ll+6)^0,c
  2392  00ECBE  6E6B               	movwf	(vfpfcnvrt@ll+7)^0,c
  2393  00ECC0                     l4586:
  2394                           
  2395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2396  00ECC0  C043  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2397  00ECC4  C044  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2398  00ECC8  C064  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2399  00ECCC  C065  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2400  00ECD0  C066  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2401  00ECD4  C067  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2402  00ECD8  C068  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2403  00ECDC  C069  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2404  00ECE0  C06A  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2405  00ECE4  C06B  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2406  00ECE8  ECDD  F06C         	call	_dtoa	;wreg free
  2407  00ECEC  C01C  F043         	movff	?_dtoa,?_vfpfcnvrt
  2408  00ECF0  C01D  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2409  00ECF4  EF0A  F079         	goto	l1057
  2410  00ECF8                     l4590:
  2411                           
  2412                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 857:         if (
      +                          !strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeo
      +                          f("li")/sizeof("li"[0]))-1))) {
  2413  00ECF8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2414  00ECFC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2415  00ED00  CFDE F001          	movff	postinc2,strncmp@_l
  2416  00ED04  CFDD F002          	movff	postdec2,strncmp@_l+1
  2417  00ED08  0EF2               	movlw	low STR_22
  2418  00ED0A  6E03               	movwf	strncmp@_r^0,c
  2419  00ED0C  0EFF               	movlw	high STR_22
  2420  00ED0E  6E04               	movwf	(strncmp@_r+1)^0,c
  2421  00ED10  0E00               	movlw	0
  2422  00ED12  6E06               	movwf	(strncmp@n+1)^0,c
  2423  00ED14  0E02               	movlw	2
  2424  00ED16  6E05               	movwf	strncmp@n^0,c
  2425  00ED18  ECCE  F066         	call	_strncmp	;wreg free
  2426  00ED1C  5001               	movf	?_strncmp^0,w,c
  2427  00ED1E  1002               	iorwf	(?_strncmp+1)^0,w,c
  2428  00ED20  B4D8               	btfsc	status,2,c
  2429  00ED22  EF95  F076         	goto	u6131
  2430  00ED26  EF97  F076         	goto	u6130
  2431  00ED2A                     u6131:
  2432  00ED2A  EFB2  F076         	goto	l4594
  2433  00ED2E                     u6130:
  2434  00ED2E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2435  00ED32  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2436  00ED36  CFDE F001          	movff	postinc2,strncmp@_l
  2437  00ED3A  CFDD F002          	movff	postdec2,strncmp@_l+1
  2438  00ED3E  0EF8               	movlw	low STR_26
  2439  00ED40  6E03               	movwf	strncmp@_r^0,c
  2440  00ED42  0EFF               	movlw	high STR_26
  2441  00ED44  6E04               	movwf	(strncmp@_r+1)^0,c
  2442  00ED46  0E00               	movlw	0
  2443  00ED48  6E06               	movwf	(strncmp@n+1)^0,c
  2444  00ED4A  0E02               	movlw	2
  2445  00ED4C  6E05               	movwf	strncmp@n^0,c
  2446  00ED4E  ECCE  F066         	call	_strncmp	;wreg free
  2447  00ED52  5001               	movf	?_strncmp^0,w,c
  2448  00ED54  1002               	iorwf	(?_strncmp+1)^0,w,c
  2449  00ED56  A4D8               	btfss	status,2,c
  2450  00ED58  EFB0  F076         	goto	u6141
  2451  00ED5C  EFB2  F076         	goto	u6140
  2452  00ED60                     u6141:
  2453  00ED60  EFF5  F076         	goto	l4600
  2454  00ED64                     u6140:
  2455  00ED64                     l4594:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 858: ;C:\Program 
      +                          Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 860:             *fmt += ((si
      +                          zeof("ld")/sizeof("ld"[0]))-1);
  2458  00ED64  0E02               	movlw	2
  2459  00ED66  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2460  00ED6A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2461  00ED6E  26DE               	addwf	postinc2,f,c
  2462  00ED70  0E00               	movlw	0
  2463  00ED72  22DD               	addwfc	postdec2,f,c
  2464                           
  2465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 861:             
      +                          ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
  2466  00ED74  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2467  00ED78  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2468  00ED7C  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2469  00ED80  0E04               	movlw	4
  2470  00ED82  26DE               	addwf	postinc2,f,c
  2471  00ED84  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2472  00ED88  0E00               	movlw	0
  2473  00ED8A  22DD               	addwfc	postdec2,f,c
  2474  00ED8C  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2475  00ED90  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2476  00ED94  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2477  00ED98  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2478  00ED9C  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2479  00EDA0  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2480  00EDA4  C04B  F04F         	movff	??_vfpfcnvrt+2,??_vfpfcnvrt+6
  2481  00EDA8  C04C  F050         	movff	??_vfpfcnvrt+3,??_vfpfcnvrt+7
  2482  00EDAC  C04D  F051         	movff	??_vfpfcnvrt+4,??_vfpfcnvrt+8
  2483  00EDB0  C04E  F052         	movff	??_vfpfcnvrt+5,??_vfpfcnvrt+9
  2484  00EDB4  6A53               	clrf	(??_vfpfcnvrt+10)^0,c
  2485  00EDB6  BE52               	btfsc	(??_vfpfcnvrt+9)^0,7,c
  2486  00EDB8  6853               	setf	(??_vfpfcnvrt+10)^0,c
  2487  00EDBA  C053  F054         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+11
  2488  00EDBE  C053  F055         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+12
  2489  00EDC2  C053  F056         	movff	??_vfpfcnvrt+10,??_vfpfcnvrt+13
  2490  00EDC6  C04F  F064         	movff	??_vfpfcnvrt+6,vfpfcnvrt@ll
  2491  00EDCA  C050  F065         	movff	??_vfpfcnvrt+7,vfpfcnvrt@ll+1
  2492  00EDCE  C051  F066         	movff	??_vfpfcnvrt+8,vfpfcnvrt@ll+2
  2493  00EDD2  C052  F067         	movff	??_vfpfcnvrt+9,vfpfcnvrt@ll+3
  2494  00EDD6  C053  F068         	movff	??_vfpfcnvrt+10,vfpfcnvrt@ll+4
  2495  00EDDA  C054  F069         	movff	??_vfpfcnvrt+11,vfpfcnvrt@ll+5
  2496  00EDDE  C055  F06A         	movff	??_vfpfcnvrt+12,vfpfcnvrt@ll+6
  2497  00EDE2  C056  F06B         	movff	??_vfpfcnvrt+13,vfpfcnvrt@ll+7
  2498  00EDE6  EF60  F076         	goto	l4586
  2499  00EDEA                     l4600:
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2502  00EDEA  0E66               	movlw	102
  2503  00EDEC  1878               	xorwf	vfpfcnvrt@ct^0,w,c
  2504  00EDEE  A4D8               	btfss	status,2,c
  2505  00EDF0  EFFC  F076         	goto	u6151
  2506  00EDF4  EFFE  F076         	goto	u6150
  2507  00EDF8                     u6151:
  2508  00EDF8  EF3E  F077         	goto	l4612
  2509  00EDFC                     u6150:
  2510  00EDFC                     
  2511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2512  00EDFC  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2513  00EE00  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2514  00EE04  CFDE FFF6          	movff	postinc2,tblptrl
  2515  00EE08  CFDD FFF7          	movff	postdec2,tblptrh
  2516  00EE0C                     	if	0	;tblptru may be non-zero
  2517  00EE0C                     	endif
  2518  00EE0C                     	if	0	;tblptru may be non-zero
  2519  00EE0C                     	endif
  2520  00EE0C  0008               	tblrd		*
  2521  00EE0E  CFF5 F07B          	movff	tablat,vfpfcnvrt@c
  2522  00EE12                     
  2523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2524  00EE12  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2525  00EE16  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2526  00EE1A  2ADE               	incf	postinc2,f,c
  2527  00EE1C  0E00               	movlw	0
  2528  00EE1E  22DD               	addwfc	postdec2,f,c
  2529  00EE20                     
  2530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2531  00EE20  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2532  00EE24  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2533  00EE28  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2534  00EE2C  0E04               	movlw	4
  2535  00EE2E  26DE               	addwf	postinc2,f,c
  2536  00EE30  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2537  00EE34  0E00               	movlw	0
  2538  00EE36  22DD               	addwfc	postdec2,f,c
  2539  00EE38  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2540  00EE3C  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2541  00EE40  CFDE F074          	movff	postinc2,vfpfcnvrt@f
  2542  00EE44  CFDE F075          	movff	postinc2,vfpfcnvrt@f+1
  2543  00EE48  CFDE F076          	movff	postinc2,vfpfcnvrt@f+2
  2544  00EE4C  CFDE F077          	movff	postinc2,vfpfcnvrt@f+3
  2545  00EE50                     l4608:
  2546                           
  2547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2548  00EE50  C043  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  2549  00EE54  C044  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2550  00EE58  C074  F030         	movff	vfpfcnvrt@f,efgtoa@f
  2551  00EE5C  C075  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2552  00EE60  C076  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2553  00EE64  C077  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2554  00EE68  C07B  F034         	movff	vfpfcnvrt@c,efgtoa@c
  2555  00EE6C  EC0B  F079         	call	_efgtoa	;wreg free
  2556  00EE70  C02E  F043         	movff	?_efgtoa,?_vfpfcnvrt
  2557  00EE74  C02F  F044         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2558  00EE78  EF0A  F079         	goto	l1057
  2559  00EE7C                     l4612:
  2560                           
  2561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2562  00EE7C  0E78               	movlw	low vfpfcnvrt@ct
  2563  00EE7E  6E01               	movwf	strncmp@_l^0,c
  2564  00EE80  0E00               	movlw	high vfpfcnvrt@ct
  2565  00EE82  6E02               	movwf	(strncmp@_l+1)^0,c
  2566  00EE84  0EF5               	movlw	low STR_31
  2567  00EE86  6E03               	movwf	strncmp@_r^0,c
  2568  00EE88  0EFF               	movlw	high STR_31
  2569  00EE8A  6E04               	movwf	(strncmp@_r+1)^0,c
  2570  00EE8C  0E00               	movlw	0
  2571  00EE8E  6E06               	movwf	(strncmp@n+1)^0,c
  2572  00EE90  0E02               	movlw	2
  2573  00EE92  6E05               	movwf	strncmp@n^0,c
  2574  00EE94  ECCE  F066         	call	_strncmp	;wreg free
  2575  00EE98  5001               	movf	?_strncmp^0,w,c
  2576  00EE9A  1002               	iorwf	(?_strncmp+1)^0,w,c
  2577  00EE9C  A4D8               	btfss	status,2,c
  2578  00EE9E  EF53  F077         	goto	u6161
  2579  00EEA2  EF55  F077         	goto	u6160
  2580  00EEA6                     u6161:
  2581  00EEA6  EFD0  F077         	goto	l4628
  2582  00EEAA                     u6160:
  2583  00EEAA                     
  2584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2585  00EEAA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2586  00EEAE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2587  00EEB2  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  2588  00EEB6  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  2589  00EEBA  0E01               	movlw	1
  2590  00EEBC  2649               	addwf	??_vfpfcnvrt^0,f,c
  2591  00EEBE  0E00               	movlw	0
  2592  00EEC0  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2593  00EEC2  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2594  00EEC6  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2595  00EECA                     	if	0	;tblptru may be non-zero
  2596  00EECA                     	endif
  2597  00EECA                     	if	0	;tblptru may be non-zero
  2598  00EECA                     	endif
  2599  00EECA  0008               	tblrd		*
  2600  00EECC  CFF5 F07B          	movff	tablat,vfpfcnvrt@c
  2601  00EED0  0EBF               	movlw	191
  2602  00EED2  6E49               	movwf	??_vfpfcnvrt^0,c
  2603  00EED4  0EFF               	movlw	255
  2604  00EED6  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  2605  00EED8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2606  00EEDC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2607  00EEE0  CFDE FFF6          	movff	postinc2,tblptrl
  2608  00EEE4  CFDD FFF7          	movff	postdec2,tblptrh
  2609  00EEE8                     	if	0	;tblptru may be non-zero
  2610  00EEE8                     	endif
  2611  00EEE8                     	if	0	;tblptru may be non-zero
  2612  00EEE8                     	endif
  2613  00EEE8  0008               	tblrd		*
  2614  00EEEA  50F5               	movf	tablat,w,c
  2615  00EEEC  6E4B               	movwf	(??_vfpfcnvrt+2)^0,c
  2616  00EEEE  6A4C               	clrf	(??_vfpfcnvrt+3)^0,c
  2617  00EEF0  5049               	movf	??_vfpfcnvrt^0,w,c
  2618  00EEF2  264B               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2619  00EEF4  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  2620  00EEF6  224C               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2621  00EEF8  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  2622  00EEFA  E10A               	bnz	u6170
  2623  00EEFC  0E1A               	movlw	26
  2624  00EEFE  5C4B               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2625  00EF00  A0D8               	btfss	status,0,c
  2626  00EF02  EF85  F077         	goto	u6171
  2627  00EF06  EF88  F077         	goto	u6170
  2628  00EF0A                     u6171:
  2629  00EF0A  0E01               	movlw	1
  2630  00EF0C  EF89  F077         	goto	u6180
  2631  00EF10                     u6170:
  2632  00EF10  0E00               	movlw	0
  2633  00EF12                     u6180:
  2634  00EF12  6E62               	movwf	_vfpfcnvrt$1098^0,c
  2635  00EF14  6A63               	clrf	(_vfpfcnvrt$1098+1)^0,c
  2636  00EF16  5062               	movf	_vfpfcnvrt$1098^0,w,c
  2637  00EF18  1063               	iorwf	(_vfpfcnvrt$1098+1)^0,w,c
  2638  00EF1A  B4D8               	btfsc	status,2,c
  2639  00EF1C  EF92  F077         	goto	u6191
  2640  00EF20  EF94  F077         	goto	u6190
  2641  00EF24                     u6191:
  2642  00EF24  EFAE  F077         	goto	l4622
  2643  00EF28                     u6190:
  2644  00EF28                     
  2645                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2646  00EF28  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2647  00EF2C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2648  00EF30  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2649  00EF34  0E04               	movlw	4
  2650  00EF36  26DE               	addwf	postinc2,f,c
  2651  00EF38  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2652  00EF3C  0E00               	movlw	0
  2653  00EF3E  22DD               	addwfc	postdec2,f,c
  2654  00EF40  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2655  00EF44  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2656  00EF48  CFDE F074          	movff	postinc2,vfpfcnvrt@f
  2657  00EF4C  CFDE F075          	movff	postinc2,vfpfcnvrt@f+1
  2658  00EF50  CFDE F076          	movff	postinc2,vfpfcnvrt@f+2
  2659  00EF54  CFDE F077          	movff	postinc2,vfpfcnvrt@f+3
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2662  00EF58  EFC6  F077         	goto	l1071
  2663  00EF5C                     l4622:
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2666  00EF5C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2667  00EF60  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2668  00EF64  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2669  00EF68  0E04               	movlw	4
  2670  00EF6A  26DE               	addwf	postinc2,f,c
  2671  00EF6C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2672  00EF70  0E00               	movlw	0
  2673  00EF72  22DD               	addwfc	postdec2,f,c
  2674  00EF74  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2675  00EF78  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2676  00EF7C  CFDE F074          	movff	postinc2,vfpfcnvrt@f
  2677  00EF80  CFDE F075          	movff	postinc2,vfpfcnvrt@f+1
  2678  00EF84  CFDE F076          	movff	postinc2,vfpfcnvrt@f+2
  2679  00EF88  CFDE F077          	movff	postinc2,vfpfcnvrt@f+3
  2680  00EF8C                     l1071:
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2683  00EF8C  0E02               	movlw	2
  2684  00EF8E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2685  00EF92  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2686  00EF96  26DE               	addwf	postinc2,f,c
  2687  00EF98  0E00               	movlw	0
  2688  00EF9A  22DD               	addwfc	postdec2,f,c
  2689  00EF9C  EF28  F077         	goto	l4608
  2690  00EFA0                     l4628:
  2691                           
  2692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  2693  00EFA0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2694  00EFA4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2695  00EFA8  CFDE FFF6          	movff	postinc2,tblptrl
  2696  00EFAC  CFDD FFF7          	movff	postdec2,tblptrh
  2697  00EFB0                     	if	0	;tblptru may be non-zero
  2698  00EFB0                     	endif
  2699  00EFB0                     	if	0	;tblptru may be non-zero
  2700  00EFB0                     	endif
  2701  00EFB0  0008               	tblrd		*
  2702  00EFB2  50F5               	movf	tablat,w,c
  2703  00EFB4  0A78               	xorlw	120
  2704  00EFB6  B4D8               	btfsc	status,2,c
  2705  00EFB8  EFE0  F077         	goto	u6201
  2706  00EFBC  EFE2  F077         	goto	u6200
  2707  00EFC0                     u6201:
  2708  00EFC0  EFF4  F077         	goto	l4632
  2709  00EFC4                     u6200:
  2710  00EFC4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2711  00EFC8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2712  00EFCC  CFDE FFF6          	movff	postinc2,tblptrl
  2713  00EFD0  CFDD FFF7          	movff	postdec2,tblptrh
  2714  00EFD4                     	if	0	;tblptru may be non-zero
  2715  00EFD4                     	endif
  2716  00EFD4                     	if	0	;tblptru may be non-zero
  2717  00EFD4                     	endif
  2718  00EFD4  0008               	tblrd		*
  2719  00EFD6  50F5               	movf	tablat,w,c
  2720  00EFD8  0A58               	xorlw	88
  2721  00EFDA  A4D8               	btfss	status,2,c
  2722  00EFDC  EFF2  F077         	goto	u6211
  2723  00EFE0  EFF4  F077         	goto	u6210
  2724  00EFE4                     u6211:
  2725  00EFE4  EF42  F078         	goto	l4642
  2726  00EFE8                     u6210:
  2727  00EFE8                     l4632:
  2728                           
  2729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  2730  00EFE8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2731  00EFEC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2732  00EFF0  CFDE FFF6          	movff	postinc2,tblptrl
  2733  00EFF4  CFDD FFF7          	movff	postdec2,tblptrh
  2734  00EFF8                     	if	0	;tblptru may be non-zero
  2735  00EFF8                     	endif
  2736  00EFF8                     	if	0	;tblptru may be non-zero
  2737  00EFF8                     	endif
  2738  00EFF8  0008               	tblrd		*
  2739  00EFFA  CFF5 F07B          	movff	tablat,vfpfcnvrt@c
  2740  00EFFE                     
  2741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  2742  00EFFE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2743  00F002  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2744  00F006  2ADE               	incf	postinc2,f,c
  2745  00F008  0E00               	movlw	0
  2746  00F00A  22DD               	addwfc	postdec2,f,c
  2747  00F00C                     
  2748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  2749  00F00C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2750  00F010  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2751  00F014  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2752  00F018  0E02               	movlw	2
  2753  00F01A  26DE               	addwf	postinc2,f,c
  2754  00F01C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2755  00F020  0E00               	movlw	0
  2756  00F022  22DD               	addwfc	postdec2,f,c
  2757  00F024  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2758  00F028  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2759  00F02C  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2760  00F030  CFDD F04C          	movff	postdec2,??_vfpfcnvrt+3
  2761  00F034  C04B  F06C         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  2762  00F038  C04C  F06D         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  2763  00F03C  6A6E               	clrf	(vfpfcnvrt@llu+2)^0,c
  2764  00F03E  6A6F               	clrf	(vfpfcnvrt@llu+3)^0,c
  2765  00F040  6A70               	clrf	(vfpfcnvrt@llu+4)^0,c
  2766  00F042  6A71               	clrf	(vfpfcnvrt@llu+5)^0,c
  2767  00F044  6A72               	clrf	(vfpfcnvrt@llu+6)^0,c
  2768  00F046  6A73               	clrf	(vfpfcnvrt@llu+7)^0,c
  2769  00F048                     l4638:
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  2772  00F048  C043  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  2773  00F04C  C044  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2774  00F050  C06C  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  2775  00F054  C06D  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  2776  00F058  C06E  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  2777  00F05C  C06F  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  2778  00F060  C070  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  2779  00F064  C071  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  2780  00F068  C072  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  2781  00F06C  C073  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  2782  00F070  C07B  F026         	movff	vfpfcnvrt@c,xtoa@x
  2783  00F074  EC72  F06B         	call	_xtoa	;wreg free
  2784  00F078  C01C  F043         	movff	?_xtoa,?_vfpfcnvrt
  2785  00F07C  C01D  F044         	movff	?_xtoa+1,?_vfpfcnvrt+1
  2786  00F080  EF0A  F079         	goto	l1057
  2787  00F084                     l4642:
  2788                           
  2789                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1307:         if 
      +                          (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((size
      +                          of("lX")/sizeof("lX"[0]))-1))) {
  2790  00F084  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2791  00F088  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2792  00F08C  CFDE F001          	movff	postinc2,strncmp@_l
  2793  00F090  CFDD F002          	movff	postdec2,strncmp@_l+1
  2794  00F094  0EFB               	movlw	low STR_36
  2795  00F096  6E03               	movwf	strncmp@_r^0,c
  2796  00F098  0EFF               	movlw	high STR_36
  2797  00F09A  6E04               	movwf	(strncmp@_r+1)^0,c
  2798  00F09C  0E00               	movlw	0
  2799  00F09E  6E06               	movwf	(strncmp@n+1)^0,c
  2800  00F0A0  0E02               	movlw	2
  2801  00F0A2  6E05               	movwf	strncmp@n^0,c
  2802  00F0A4  ECCE  F066         	call	_strncmp	;wreg free
  2803  00F0A8  5001               	movf	?_strncmp^0,w,c
  2804  00F0AA  1002               	iorwf	(?_strncmp+1)^0,w,c
  2805  00F0AC  B4D8               	btfsc	status,2,c
  2806  00F0AE  EF5B  F078         	goto	u6221
  2807  00F0B2  EF5D  F078         	goto	u6220
  2808  00F0B6                     u6221:
  2809  00F0B6  EF78  F078         	goto	l4646
  2810  00F0BA                     u6220:
  2811  00F0BA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2812  00F0BE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2813  00F0C2  CFDE F001          	movff	postinc2,strncmp@_l
  2814  00F0C6  CFDD F002          	movff	postdec2,strncmp@_l+1
  2815  00F0CA  0EEF               	movlw	low STR_40
  2816  00F0CC  6E03               	movwf	strncmp@_r^0,c
  2817  00F0CE  0EFF               	movlw	high STR_40
  2818  00F0D0  6E04               	movwf	(strncmp@_r+1)^0,c
  2819  00F0D2  0E00               	movlw	0
  2820  00F0D4  6E06               	movwf	(strncmp@n+1)^0,c
  2821  00F0D6  0E02               	movlw	2
  2822  00F0D8  6E05               	movwf	strncmp@n^0,c
  2823  00F0DA  ECCE  F066         	call	_strncmp	;wreg free
  2824  00F0DE  5001               	movf	?_strncmp^0,w,c
  2825  00F0E0  1002               	iorwf	(?_strncmp+1)^0,w,c
  2826  00F0E2  A4D8               	btfss	status,2,c
  2827  00F0E4  EF76  F078         	goto	u6231
  2828  00F0E8  EF78  F078         	goto	u6230
  2829  00F0EC                     u6231:
  2830  00F0EC  EFB9  F078         	goto	l4656
  2831  00F0F0                     u6230:
  2832  00F0F0                     l4646:
  2833                           
  2834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1308: ;C:\Program
      +                           Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1310:             c = (*fmt)
      +                          [1];
  2835  00F0F0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2836  00F0F4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2837  00F0F8  CFDE F049          	movff	postinc2,??_vfpfcnvrt
  2838  00F0FC  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+1
  2839  00F100  0E01               	movlw	1
  2840  00F102  2649               	addwf	??_vfpfcnvrt^0,f,c
  2841  00F104  0E00               	movlw	0
  2842  00F106  224A               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2843  00F108  C049  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2844  00F10C  C04A  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2845  00F110                     	if	0	;tblptru may be non-zero
  2846  00F110                     	endif
  2847  00F110                     	if	0	;tblptru may be non-zero
  2848  00F110                     	endif
  2849  00F110  0008               	tblrd		*
  2850  00F112  CFF5 F07B          	movff	tablat,vfpfcnvrt@c
  2851  00F116                     
  2852                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1311:            
      +                           *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
  2853  00F116  0E02               	movlw	2
  2854  00F118  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2855  00F11C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2856  00F120  26DE               	addwf	postinc2,f,c
  2857  00F122  0E00               	movlw	0
  2858  00F124  22DD               	addwfc	postdec2,f,c
  2859  00F126                     
  2860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1312:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
  2861  00F126  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2862  00F12A  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2863  00F12E  CFDF F049          	movff	indf2,??_vfpfcnvrt
  2864  00F132  0E04               	movlw	4
  2865  00F134  26DE               	addwf	postinc2,f,c
  2866  00F136  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  2867  00F13A  0E00               	movlw	0
  2868  00F13C  22DD               	addwfc	postdec2,f,c
  2869  00F13E  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2870  00F142  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2871  00F146  CFDE F04B          	movff	postinc2,??_vfpfcnvrt+2
  2872  00F14A  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+3
  2873  00F14E  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+4
  2874  00F152  CFDE F04E          	movff	postinc2,??_vfpfcnvrt+5
  2875  00F156  504B               	movf	(??_vfpfcnvrt+2)^0,w,c
  2876  00F158  6E6C               	movwf	vfpfcnvrt@llu^0,c
  2877  00F15A  504C               	movf	(??_vfpfcnvrt+3)^0,w,c
  2878  00F15C  6E6D               	movwf	(vfpfcnvrt@llu+1)^0,c
  2879  00F15E  504D               	movf	(??_vfpfcnvrt+4)^0,w,c
  2880  00F160  6E6E               	movwf	(vfpfcnvrt@llu+2)^0,c
  2881  00F162  504E               	movf	(??_vfpfcnvrt+5)^0,w,c
  2882  00F164  6E6F               	movwf	(vfpfcnvrt@llu+3)^0,c
  2883  00F166  6A70               	clrf	(vfpfcnvrt@llu+4)^0,c
  2884  00F168  6A71               	clrf	(vfpfcnvrt@llu+5)^0,c
  2885  00F16A  6A72               	clrf	(vfpfcnvrt@llu+6)^0,c
  2886  00F16C  6A73               	clrf	(vfpfcnvrt@llu+7)^0,c
  2887  00F16E  EF24  F078         	goto	l4638
  2888  00F172                     l4656:
  2889                           
  2890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2891  00F172  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2892  00F176  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2893  00F17A  CFDE FFF6          	movff	postinc2,tblptrl
  2894  00F17E  CFDD FFF7          	movff	postdec2,tblptrh
  2895  00F182                     	if	0	;tblptru may be non-zero
  2896  00F182                     	endif
  2897  00F182                     	if	0	;tblptru may be non-zero
  2898  00F182                     	endif
  2899  00F182  0008               	tblrd		*
  2900  00F184  50F5               	movf	tablat,w,c
  2901  00F186  0A25               	xorlw	37
  2902  00F188  A4D8               	btfss	status,2,c
  2903  00F18A  EFC9  F078         	goto	u6241
  2904  00F18E  EFCB  F078         	goto	u6240
  2905  00F192                     u6241:
  2906  00F192  EFE2  F078         	goto	l4666
  2907  00F196                     u6240:
  2908  00F196                     
  2909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2910  00F196  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2911  00F19A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2912  00F19E  2ADE               	incf	postinc2,f,c
  2913  00F1A0  0E00               	movlw	0
  2914  00F1A2  22DD               	addwfc	postdec2,f,c
  2915  00F1A4                     
  2916                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2917  00F1A4  0E00               	movlw	0
  2918  00F1A6  6E02               	movwf	(fputc@c+1)^0,c
  2919  00F1A8  0E25               	movlw	37
  2920  00F1AA  6E01               	movwf	fputc@c^0,c
  2921  00F1AC  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2922  00F1B0  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2923  00F1B4  EC7A  F064         	call	_fputc	;wreg free
  2924  00F1B8                     l4662:
  2925                           
  2926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2927  00F1B8  0E00               	movlw	0
  2928  00F1BA  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  2929  00F1BC  0E01               	movlw	1
  2930  00F1BE  6E43               	movwf	?_vfpfcnvrt^0,c
  2931  00F1C0  EF0A  F079         	goto	l1057
  2932  00F1C4                     l4666:
  2933                           
  2934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2935  00F1C4  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2936  00F1C8  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2937  00F1CC  2ADE               	incf	postinc2,f,c
  2938  00F1CE  0E00               	movlw	0
  2939  00F1D0  22DD               	addwfc	postdec2,f,c
  2940  00F1D2                     
  2941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2942  00F1D2  0E00               	movlw	0
  2943  00F1D4  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  2944  00F1D6  0E00               	movlw	0
  2945  00F1D8  6E43               	movwf	?_vfpfcnvrt^0,c
  2946  00F1DA  EF0A  F079         	goto	l1057
  2947  00F1DE                     l4672:
  2948                           
  2949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2950  00F1DE  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2951  00F1E2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2952  00F1E6  CFDE FFF6          	movff	postinc2,tblptrl
  2953  00F1EA  CFDD FFF7          	movff	postdec2,tblptrh
  2954  00F1EE                     	if	0	;tblptru may be non-zero
  2955  00F1EE                     	endif
  2956  00F1EE                     	if	0	;tblptru may be non-zero
  2957  00F1EE                     	endif
  2958  00F1EE  0008               	tblrd		*
  2959  00F1F0  50F5               	movf	tablat,w,c
  2960  00F1F2  6E01               	movwf	fputc@c^0,c
  2961  00F1F4  6A02               	clrf	(fputc@c+1)^0,c
  2962  00F1F6  C043  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2963  00F1FA  C044  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2964  00F1FE  EC7A  F064         	call	_fputc	;wreg free
  2965  00F202                     
  2966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2967  00F202  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2968  00F206  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2969  00F20A  2ADE               	incf	postinc2,f,c
  2970  00F20C  0E00               	movlw	0
  2971  00F20E  22DD               	addwfc	postdec2,f,c
  2972  00F210  EFDC  F078         	goto	l4662
  2973  00F214                     l1057:
  2974  00F214  0012               	return		;funcret
  2975  00F216                     __end_of_vfpfcnvrt:
  2976                           	callstack 0
  2977                           
  2978 ;; *************** function _xtoa *****************
  2979 ;; Defined at:
  2980 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2983 ;;		 -> sprintf@f(6), 
  2984 ;;  d               8   29[COMRAM] unsigned long long 
  2985 ;;  x               1   37[COMRAM] unsigned char 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  n               8   54[COMRAM] unsigned long long 
  2988 ;;  c               2   64[COMRAM] int 
  2989 ;;  i               2   62[COMRAM] int 
  2990 ;;  w               2   52[COMRAM] int 
  2991 ;;  p               2   50[COMRAM] int 
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  2   27[COMRAM] int 
  2994 ;; Registers used:
  2995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  3001 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3002 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3003 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3004 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3005 ;;Total ram usage:       39 bytes
  3006 ;; Hardware stack levels used: 1
  3007 ;; Hardware stack levels required when called: 4
  3008 ;; This function calls:
  3009 ;;		_isalpha
  3010 ;;		_isupper
  3011 ;;		_pad
  3012 ;;		_toupper
  3013 ;; This function is called by:
  3014 ;;		_vfpfcnvrt
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text4
  3019  00D6E4                     __ptext4:
  3020                           	callstack 0
  3021  00D6E4                     _xtoa:
  3022                           	callstack 23
  3023  00D6E4                     
  3024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  3025  00D6E4  0100               	movlb	0	; () banked
  3026  00D6E6  BFFE               	btfsc	(_prec+1)& (0+255),7,b
  3027  00D6E8  EF78  F06B         	goto	u5681
  3028  00D6EC  EF7A  F06B         	goto	u5680
  3029  00D6F0                     u5681:
  3030  00D6F0  EF7B  F06B         	goto	l4376
  3031  00D6F4                     u5680:
  3032  00D6F4                     
  3033                           ; BSR set to: 0
  3034                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  3035  00D6F4  927C               	bcf	_flags^0,1,c
  3036  00D6F6                     l4376:
  3037                           
  3038                           ; BSR set to: 0
  3039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  3040  00D6F6  BFFE               	btfsc	(_prec+1)& (0+255),7,b
  3041  00D6F8  EF88  F06B         	goto	u5690
  3042  00D6FC  51FE               	movf	(_prec+1)& (0+255),w,b
  3043  00D6FE  E106               	bnz	u5691
  3044  00D700  05FD               	decf	_prec& (0+255),w,b
  3045  00D702  B0D8               	btfsc	status,0,c
  3046  00D704  EF86  F06B         	goto	u5691
  3047  00D708  EF88  F06B         	goto	u5690
  3048  00D70C                     u5691:
  3049  00D70C  EF8E  F06B         	goto	l1003
  3050  00D710                     u5690:
  3051  00D710                     
  3052                           ; BSR set to: 0
  3053  00D710  0E00               	movlw	0
  3054  00D712  6E34               	movwf	(xtoa@p+1)^0,c
  3055  00D714  0E01               	movlw	1
  3056  00D716  6E33               	movwf	xtoa@p^0,c
  3057  00D718  EF92  F06B         	goto	l1005
  3058  00D71C                     l1003:
  3059                           
  3060                           ; BSR set to: 0
  3061  00D71C  C0FD  F033         	movff	_prec,xtoa@p
  3062  00D720  C0FE  F034         	movff	_prec+1,xtoa@p+1
  3063  00D724                     l1005:
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  3067  00D724  C0FB  F035         	movff	_width,xtoa@w
  3068  00D728  C0FC  F036         	movff	_width+1,xtoa@w+1
  3069                           
  3070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  3071  00D72C  A87C               	btfss	_flags^0,4,c
  3072  00D72E  EF9B  F06B         	goto	u5701
  3073  00D732  EF9D  F06B         	goto	u5700
  3074  00D736                     u5701:
  3075  00D736  EFA1  F06B         	goto	l4382
  3076  00D73A                     u5700:
  3077  00D73A                     
  3078                           ; BSR set to: 0
  3079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  3080  00D73A  0EFE               	movlw	254
  3081  00D73C  2635               	addwf	xtoa@w^0,f,c
  3082  00D73E  0EFF               	movlw	255
  3083  00D740  2236               	addwfc	(xtoa@w+1)^0,f,c
  3084  00D742                     l4382:
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 661:     n = d;
  3088  00D742  C01E  F037         	movff	xtoa@d,xtoa@n
  3089  00D746  C01F  F038         	movff	xtoa@d+1,xtoa@n+1
  3090  00D74A  C020  F039         	movff	xtoa@d+2,xtoa@n+2
  3091  00D74E  C021  F03A         	movff	xtoa@d+3,xtoa@n+3
  3092  00D752  C022  F03B         	movff	xtoa@d+4,xtoa@n+4
  3093  00D756  C023  F03C         	movff	xtoa@d+5,xtoa@n+5
  3094  00D75A  C024  F03D         	movff	xtoa@d+6,xtoa@n+6
  3095  00D75E  C025  F03E         	movff	xtoa@d+7,xtoa@n+7
  3096  00D762                     
  3097                           ; BSR set to: 0
  3098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  3099  00D762  0E00               	movlw	0
  3100  00D764  6E40               	movwf	(xtoa@i+1)^0,c
  3101  00D766  0E4F               	movlw	79
  3102  00D768  6E3F               	movwf	xtoa@i^0,c
  3103  00D76A                     
  3104                           ; BSR set to: 0
  3105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  3106  00D76A  0E00               	movlw	0
  3107  00D76C  0101               	movlb	1	; () banked
  3108  00D76E  6F4F               	movwf	(_dbuf+79)& (0+255),b
  3109                           
  3110                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3111  00D770  EF6D  F06C         	goto	l4418
  3112  00D774                     l4388:
  3113                           
  3114                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 665:         --i;
  3115  00D774  063F               	decf	xtoa@i^0,f,c
  3116  00D776  A0D8               	btfss	status,0,c
  3117  00D778  0640               	decf	(xtoa@i+1)^0,f,c
  3118  00D77A                     
  3119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  3120  00D77A  0E0F               	movlw	15
  3121  00D77C  1437               	andwf	xtoa@n^0,w,c
  3122  00D77E  6E41               	movwf	xtoa@c^0,c
  3123  00D780  6A42               	clrf	(xtoa@c+1)^0,c
  3124  00D782                     
  3125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  3126  00D782  BE42               	btfsc	(xtoa@c+1)^0,7,c
  3127  00D784  EFCD  F06B         	goto	u5711
  3128  00D788  5042               	movf	(xtoa@c+1)^0,w,c
  3129  00D78A  E109               	bnz	u5710
  3130  00D78C  0E0A               	movlw	10
  3131  00D78E  5C41               	subwf	xtoa@c^0,w,c
  3132  00D790  A0D8               	btfss	status,0,c
  3133  00D792  EFCD  F06B         	goto	u5711
  3134  00D796  EFCF  F06B         	goto	u5710
  3135  00D79A                     u5711:
  3136  00D79A  EFD7  F06B         	goto	l4396
  3137  00D79E                     u5710:
  3138  00D79E  0E57               	movlw	87
  3139  00D7A0  2441               	addwf	xtoa@c^0,w,c
  3140  00D7A2  6E41               	movwf	xtoa@c^0,c
  3141  00D7A4  0E00               	movlw	0
  3142  00D7A6  2042               	addwfc	(xtoa@c+1)^0,w,c
  3143  00D7A8  6E42               	movwf	(xtoa@c+1)^0,c
  3144  00D7AA  EFDD  F06B         	goto	l1012
  3145  00D7AE                     l4396:
  3146  00D7AE  0E30               	movlw	48
  3147  00D7B0  2441               	addwf	xtoa@c^0,w,c
  3148  00D7B2  6E41               	movwf	xtoa@c^0,c
  3149  00D7B4  0E00               	movlw	0
  3150  00D7B6  2042               	addwfc	(xtoa@c+1)^0,w,c
  3151  00D7B8  6E42               	movwf	(xtoa@c+1)^0,c
  3152  00D7BA                     l1012:
  3153  00D7BA  0EBF               	movlw	191
  3154  00D7BC  6E27               	movwf	??_xtoa^0,c
  3155  00D7BE  0EFF               	movlw	255
  3156  00D7C0  6E28               	movwf	(??_xtoa+1)^0,c
  3157  00D7C2  5026               	movf	xtoa@x^0,w,c
  3158  00D7C4  6E29               	movwf	(??_xtoa+2)^0,c
  3159  00D7C6  6A2A               	clrf	(??_xtoa+3)^0,c
  3160  00D7C8  5027               	movf	??_xtoa^0,w,c
  3161  00D7CA  2629               	addwf	(??_xtoa+2)^0,f,c
  3162  00D7CC  5028               	movf	(??_xtoa+1)^0,w,c
  3163  00D7CE  222A               	addwfc	(??_xtoa+3)^0,f,c
  3164  00D7D0  502A               	movf	(??_xtoa+3)^0,w,c
  3165  00D7D2  E10A               	bnz	u5720
  3166  00D7D4  0E1A               	movlw	26
  3167  00D7D6  5C29               	subwf	(??_xtoa+2)^0,w,c
  3168  00D7D8  A0D8               	btfss	status,0,c
  3169  00D7DA  EFF1  F06B         	goto	u5721
  3170  00D7DE  EFF4  F06B         	goto	u5720
  3171  00D7E2                     u5721:
  3172  00D7E2  0E01               	movlw	1
  3173  00D7E4  EFF5  F06B         	goto	u5730
  3174  00D7E8                     u5720:
  3175  00D7E8  0E00               	movlw	0
  3176  00D7EA                     u5730:
  3177  00D7EA  6E2F               	movwf	_xtoa$1072^0,c
  3178  00D7EC  6A30               	clrf	(_xtoa$1072+1)^0,c
  3179  00D7EE  502F               	movf	_xtoa$1072^0,w,c
  3180  00D7F0  1030               	iorwf	(_xtoa$1072+1)^0,w,c
  3181  00D7F2  B4D8               	btfsc	status,2,c
  3182  00D7F4  EFFE  F06B         	goto	u5741
  3183  00D7F8  EF00  F06C         	goto	u5740
  3184  00D7FC                     u5741:
  3185  00D7FC  EF30  F06C         	goto	l4410
  3186  00D800                     u5740:
  3187  00D800  0E9F               	movlw	159
  3188  00D802  6E27               	movwf	??_xtoa^0,c
  3189  00D804  0EFF               	movlw	255
  3190  00D806  6E28               	movwf	(??_xtoa+1)^0,c
  3191  00D808  0E20               	movlw	32
  3192  00D80A  1041               	iorwf	xtoa@c^0,w,c
  3193  00D80C  6E29               	movwf	(??_xtoa+2)^0,c
  3194  00D80E  0E00               	movlw	0
  3195  00D810  1042               	iorwf	(xtoa@c+1)^0,w,c
  3196  00D812  6E2A               	movwf	(??_xtoa+3)^0,c
  3197  00D814  5027               	movf	??_xtoa^0,w,c
  3198  00D816  2629               	addwf	(??_xtoa+2)^0,f,c
  3199  00D818  5028               	movf	(??_xtoa+1)^0,w,c
  3200  00D81A  222A               	addwfc	(??_xtoa+3)^0,f,c
  3201  00D81C  502A               	movf	(??_xtoa+3)^0,w,c
  3202  00D81E  E10A               	bnz	u5750
  3203  00D820  0E1A               	movlw	26
  3204  00D822  5C29               	subwf	(??_xtoa+2)^0,w,c
  3205  00D824  A0D8               	btfss	status,0,c
  3206  00D826  EF17  F06C         	goto	u5751
  3207  00D82A  EF1A  F06C         	goto	u5750
  3208  00D82E                     u5751:
  3209  00D82E  0E01               	movlw	1
  3210  00D830  EF1B  F06C         	goto	u5760
  3211  00D834                     u5750:
  3212  00D834  0E00               	movlw	0
  3213  00D836                     u5760:
  3214  00D836  6E31               	movwf	_xtoa$1073^0,c
  3215  00D838  6A32               	clrf	(_xtoa$1073+1)^0,c
  3216  00D83A  5031               	movf	_xtoa$1073^0,w,c
  3217  00D83C  1032               	iorwf	(_xtoa$1073+1)^0,w,c
  3218  00D83E  B4D8               	btfsc	status,2,c
  3219  00D840  EF24  F06C         	goto	u5771
  3220  00D844  EF26  F06C         	goto	u5770
  3221  00D848                     u5771:
  3222  00D848  EF30  F06C         	goto	l4410
  3223  00D84C                     u5770:
  3224  00D84C                     
  3225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  3226  00D84C  C041  F007         	movff	xtoa@c,toupper@c
  3227  00D850  C042  F008         	movff	xtoa@c+1,toupper@c+1
  3228  00D854  EC49  F062         	call	_toupper	;wreg free
  3229  00D858  C007  F041         	movff	?_toupper,xtoa@c
  3230  00D85C  C008  F042         	movff	?_toupper+1,xtoa@c+1
  3231  00D860                     l4410:
  3232                           
  3233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  3234  00D860  0E00               	movlw	low _dbuf
  3235  00D862  243F               	addwf	xtoa@i^0,w,c
  3236  00D864  6ED9               	movwf	fsr2l,c
  3237  00D866  0E01               	movlw	high _dbuf
  3238  00D868  2040               	addwfc	(xtoa@i+1)^0,w,c
  3239  00D86A  6EDA               	movwf	fsr2h,c
  3240  00D86C  C041  FFDF         	movff	xtoa@c,indf2
  3241  00D870                     
  3242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 672:         --p;
  3243  00D870  0633               	decf	xtoa@p^0,f,c
  3244  00D872  A0D8               	btfss	status,0,c
  3245  00D874  0634               	decf	(xtoa@p+1)^0,f,c
  3246  00D876                     
  3247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 673:         --w;
  3248  00D876  0635               	decf	xtoa@w^0,f,c
  3249  00D878  A0D8               	btfss	status,0,c
  3250  00D87A  0636               	decf	(xtoa@w+1)^0,f,c
  3251  00D87C                     
  3252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  3253  00D87C  C037  F027         	movff	xtoa@n,??_xtoa
  3254  00D880  C038  F028         	movff	xtoa@n+1,??_xtoa+1
  3255  00D884  C039  F029         	movff	xtoa@n+2,??_xtoa+2
  3256  00D888  C03A  F02A         	movff	xtoa@n+3,??_xtoa+3
  3257  00D88C  C03B  F02B         	movff	xtoa@n+4,??_xtoa+4
  3258  00D890  C03C  F02C         	movff	xtoa@n+5,??_xtoa+5
  3259  00D894  C03D  F02D         	movff	xtoa@n+6,??_xtoa+6
  3260  00D898  C03E  F02E         	movff	xtoa@n+7,??_xtoa+7
  3261  00D89C  0E05               	movlw	5
  3262  00D89E  EF5A  F06C         	goto	u5780
  3263  00D8A2                     u5785:
  3264  00D8A2  90D8               	bcf	status,0,c
  3265  00D8A4  322E               	rrcf	(??_xtoa+7)^0,f,c
  3266  00D8A6  322D               	rrcf	(??_xtoa+6)^0,f,c
  3267  00D8A8  322C               	rrcf	(??_xtoa+5)^0,f,c
  3268  00D8AA  322B               	rrcf	(??_xtoa+4)^0,f,c
  3269  00D8AC  322A               	rrcf	(??_xtoa+3)^0,f,c
  3270  00D8AE  3229               	rrcf	(??_xtoa+2)^0,f,c
  3271  00D8B0  3228               	rrcf	(??_xtoa+1)^0,f,c
  3272  00D8B2  3227               	rrcf	??_xtoa^0,f,c
  3273  00D8B4                     u5780:
  3274  00D8B4  2EE8               	decfsz	wreg,f,c
  3275  00D8B6  EF51  F06C         	goto	u5785
  3276  00D8BA  C027  F037         	movff	??_xtoa,xtoa@n
  3277  00D8BE  C028  F038         	movff	??_xtoa+1,xtoa@n+1
  3278  00D8C2  C029  F039         	movff	??_xtoa+2,xtoa@n+2
  3279  00D8C6  C02A  F03A         	movff	??_xtoa+3,xtoa@n+3
  3280  00D8CA  C02B  F03B         	movff	??_xtoa+4,xtoa@n+4
  3281  00D8CE  C02C  F03C         	movff	??_xtoa+5,xtoa@n+5
  3282  00D8D2  C02D  F03D         	movff	??_xtoa+6,xtoa@n+6
  3283  00D8D6  C02E  F03E         	movff	??_xtoa+7,xtoa@n+7
  3284  00D8DA                     l4418:
  3285                           
  3286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3287  00D8DA  BE40               	btfsc	(xtoa@i+1)^0,7,c
  3288  00D8DC  EF79  F06C         	goto	u5791
  3289  00D8E0  5040               	movf	(xtoa@i+1)^0,w,c
  3290  00D8E2  E109               	bnz	u5790
  3291  00D8E4  0E02               	movlw	2
  3292  00D8E6  5C3F               	subwf	xtoa@i^0,w,c
  3293  00D8E8  A0D8               	btfss	status,0,c
  3294  00D8EA  EF79  F06C         	goto	u5791
  3295  00D8EE  EF7B  F06C         	goto	u5790
  3296  00D8F2                     u5791:
  3297  00D8F2  EFAB  F06C         	goto	l1026
  3298  00D8F6                     u5790:
  3299  00D8F6  5037               	movf	xtoa@n^0,w,c
  3300  00D8F8  1038               	iorwf	(xtoa@n+1)^0,w,c
  3301  00D8FA  1039               	iorwf	(xtoa@n+2)^0,w,c
  3302  00D8FC  103A               	iorwf	(xtoa@n+3)^0,w,c
  3303  00D8FE  103B               	iorwf	(xtoa@n+4)^0,w,c
  3304  00D900  103C               	iorwf	(xtoa@n+5)^0,w,c
  3305  00D902  103D               	iorwf	(xtoa@n+6)^0,w,c
  3306  00D904  103E               	iorwf	(xtoa@n+7)^0,w,c
  3307  00D906  A4D8               	btfss	status,2,c
  3308  00D908  EF88  F06C         	goto	u5801
  3309  00D90C  EF8A  F06C         	goto	u5800
  3310  00D910                     u5801:
  3311  00D910  EFBA  F06B         	goto	l4388
  3312  00D914                     u5800:
  3313  00D914  BE34               	btfsc	(xtoa@p+1)^0,7,c
  3314  00D916  EF97  F06C         	goto	u5810
  3315  00D91A  5034               	movf	(xtoa@p+1)^0,w,c
  3316  00D91C  E106               	bnz	u5811
  3317  00D91E  0433               	decf	xtoa@p^0,w,c
  3318  00D920  B0D8               	btfsc	status,0,c
  3319  00D922  EF95  F06C         	goto	u5811
  3320  00D926  EF97  F06C         	goto	u5810
  3321  00D92A                     u5811:
  3322  00D92A  EFBA  F06B         	goto	l4388
  3323  00D92E                     u5810:
  3324  00D92E  BE36               	btfsc	(xtoa@w+1)^0,7,c
  3325  00D930  EFA2  F06C         	goto	u5821
  3326  00D934  5036               	movf	(xtoa@w+1)^0,w,c
  3327  00D936  E108               	bnz	u5820
  3328  00D938  0435               	decf	xtoa@w^0,w,c
  3329  00D93A  A0D8               	btfss	status,0,c
  3330  00D93C  EFA2  F06C         	goto	u5821
  3331  00D940  EFA4  F06C         	goto	u5820
  3332  00D944                     u5821:
  3333  00D944  EFAB  F06C         	goto	l1026
  3334  00D948                     u5820:
  3335  00D948  B27C               	btfsc	_flags^0,1,c
  3336  00D94A  EFA9  F06C         	goto	u5831
  3337  00D94E  EFAB  F06C         	goto	u5830
  3338  00D952                     u5831:
  3339  00D952  EFBA  F06B         	goto	l4388
  3340  00D956                     u5830:
  3341  00D956                     l1026:
  3342                           
  3343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  3344  00D956  A87C               	btfss	_flags^0,4,c
  3345  00D958  EFB0  F06C         	goto	u5841
  3346  00D95C  EFB2  F06C         	goto	u5840
  3347  00D960                     u5841:
  3348  00D960  EFC8  F06C         	goto	l4434
  3349  00D964                     u5840:
  3350  00D964                     
  3351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 679:         --i;
  3352  00D964  063F               	decf	xtoa@i^0,f,c
  3353  00D966  A0D8               	btfss	status,0,c
  3354  00D968  0640               	decf	(xtoa@i+1)^0,f,c
  3355  00D96A                     
  3356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  3357  00D96A  0E00               	movlw	low _dbuf
  3358  00D96C  243F               	addwf	xtoa@i^0,w,c
  3359  00D96E  6ED9               	movwf	fsr2l,c
  3360  00D970  0E01               	movlw	high _dbuf
  3361  00D972  2040               	addwfc	(xtoa@i+1)^0,w,c
  3362  00D974  6EDA               	movwf	fsr2h,c
  3363  00D976  C026  FFDF         	movff	xtoa@x,indf2
  3364  00D97A                     
  3365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 681:         --i;
  3366  00D97A  063F               	decf	xtoa@i^0,f,c
  3367  00D97C  A0D8               	btfss	status,0,c
  3368  00D97E  0640               	decf	(xtoa@i+1)^0,f,c
  3369                           
  3370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  3371  00D980  0E00               	movlw	low _dbuf
  3372  00D982  243F               	addwf	xtoa@i^0,w,c
  3373  00D984  6ED9               	movwf	fsr2l,c
  3374  00D986  0E01               	movlw	high _dbuf
  3375  00D988  2040               	addwfc	(xtoa@i+1)^0,w,c
  3376  00D98A  6EDA               	movwf	fsr2h,c
  3377  00D98C  0E30               	movlw	48
  3378  00D98E  6EDF               	movwf	indf2,c
  3379  00D990                     l4434:
  3380                           
  3381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  3382  00D990  C01C  F011         	movff	xtoa@fp,pad@fp
  3383  00D994  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  3384  00D998  0E00               	movlw	low _dbuf
  3385  00D99A  243F               	addwf	xtoa@i^0,w,c
  3386  00D99C  6E13               	movwf	pad@buf^0,c
  3387  00D99E  0E01               	movlw	high _dbuf
  3388  00D9A0  2040               	addwfc	(xtoa@i+1)^0,w,c
  3389  00D9A2  6E14               	movwf	(pad@buf+1)^0,c
  3390  00D9A4  C035  F015         	movff	xtoa@w,pad@p
  3391  00D9A8  C036  F016         	movff	xtoa@w+1,pad@p+1
  3392  00D9AC  ECB7  F063         	call	_pad	;wreg free
  3393  00D9B0  C011  F01C         	movff	?_pad,?_xtoa
  3394  00D9B4  C012  F01D         	movff	?_pad+1,?_xtoa+1
  3395  00D9B8  0012               	return		;funcret
  3396  00D9BA                     __end_of_xtoa:
  3397                           	callstack 0
  3398                           
  3399 ;; *************** function _toupper *****************
  3400 ;; Defined at:
  3401 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\toupper.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;  c               2    6[COMRAM] int 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;		None
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  2    6[COMRAM] int 
  3408 ;; Registers used:
  3409 ;;		wreg, status,2, status,0
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  3415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3416 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3417 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3418 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3419 ;;Total ram usage:        8 bytes
  3420 ;; Hardware stack levels used: 1
  3421 ;; Hardware stack levels required when called: 1
  3422 ;; This function calls:
  3423 ;;		_islower
  3424 ;; This function is called by:
  3425 ;;		_xtoa
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text5
  3430  00C492                     __ptext5:
  3431                           	callstack 0
  3432  00C492                     _toupper:
  3433                           	callstack 25
  3434  00C492  0E9F               	movlw	159
  3435  00C494  6E09               	movwf	??_toupper^0,c
  3436  00C496  0EFF               	movlw	255
  3437  00C498  6E0A               	movwf	(??_toupper+1)^0,c
  3438  00C49A  C007  F00B         	movff	toupper@c,??_toupper+2
  3439  00C49E  C008  F00C         	movff	toupper@c+1,??_toupper+3
  3440  00C4A2  5009               	movf	??_toupper^0,w,c
  3441  00C4A4  260B               	addwf	(??_toupper+2)^0,f,c
  3442  00C4A6  500A               	movf	(??_toupper+1)^0,w,c
  3443  00C4A8  220C               	addwfc	(??_toupper+3)^0,f,c
  3444  00C4AA  500C               	movf	(??_toupper+3)^0,w,c
  3445  00C4AC  E10A               	bnz	u4870
  3446  00C4AE  0E1A               	movlw	26
  3447  00C4B0  5C0B               	subwf	(??_toupper+2)^0,w,c
  3448  00C4B2  A0D8               	btfss	status,0,c
  3449  00C4B4  EF5E  F062         	goto	u4871
  3450  00C4B8  EF61  F062         	goto	u4870
  3451  00C4BC                     u4871:
  3452  00C4BC  0E01               	movlw	1
  3453  00C4BE  EF62  F062         	goto	u4880
  3454  00C4C2                     u4870:
  3455  00C4C2  0E00               	movlw	0
  3456  00C4C4                     u4880:
  3457  00C4C4  6E0D               	movwf	_toupper$1267^0,c
  3458  00C4C6  6A0E               	clrf	(_toupper$1267+1)^0,c
  3459  00C4C8  500D               	movf	_toupper$1267^0,w,c
  3460  00C4CA  100E               	iorwf	(_toupper$1267+1)^0,w,c
  3461  00C4CC  B4D8               	btfsc	status,2,c
  3462  00C4CE  EF6B  F062         	goto	u4891
  3463  00C4D2  EF6D  F062         	goto	u4890
  3464  00C4D6                     u4891:
  3465  00C4D6  EF73  F062         	goto	l1234
  3466  00C4DA                     u4890:
  3467  00C4DA  0E5F               	movlw	95
  3468  00C4DC  1407               	andwf	toupper@c^0,w,c
  3469  00C4DE  6E07               	movwf	?_toupper^0,c
  3470  00C4E0  6A08               	clrf	(?_toupper+1)^0,c
  3471  00C4E2  EF77  F062         	goto	l1239
  3472  00C4E6                     l1234:
  3473  00C4E6  C007  F007         	movff	toupper@c,?_toupper
  3474  00C4EA  C008  F008         	movff	toupper@c+1,?_toupper+1
  3475  00C4EE                     l1239:
  3476  00C4EE  0012               	return		;funcret
  3477  00C4F0                     __end_of_toupper:
  3478                           	callstack 0
  3479                           
  3480 ;; *************** function _islower *****************
  3481 ;; Defined at:
  3482 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\islower.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;  c               2    0[COMRAM] int 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  2    0[COMRAM] int 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  3496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3498 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3499 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3500 ;;Total ram usage:        6 bytes
  3501 ;; Hardware stack levels used: 1
  3502 ;; This function calls:
  3503 ;;		Nothing
  3504 ;; This function is called by:
  3505 ;;		_toupper
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           	psect	text6
  3510  00C210                     __ptext6:
  3511                           	callstack 0
  3512  00C210                     _islower:
  3513                           	callstack 25
  3514  00C210  0E9F               	movlw	159
  3515  00C212  6E03               	movwf	??_islower^0,c
  3516  00C214  0EFF               	movlw	255
  3517  00C216  6E04               	movwf	(??_islower+1)^0,c
  3518  00C218  C001  F005         	movff	islower@c,??_islower+2
  3519  00C21C  C002  F006         	movff	islower@c+1,??_islower+3
  3520  00C220  5003               	movf	??_islower^0,w,c
  3521  00C222  2605               	addwf	(??_islower+2)^0,f,c
  3522  00C224  5004               	movf	(??_islower+1)^0,w,c
  3523  00C226  2206               	addwfc	(??_islower+3)^0,f,c
  3524  00C228  5006               	movf	(??_islower+3)^0,w,c
  3525  00C22A  E10A               	bnz	u3730
  3526  00C22C  0E1A               	movlw	26
  3527  00C22E  5C05               	subwf	(??_islower+2)^0,w,c
  3528  00C230  A0D8               	btfss	status,0,c
  3529  00C232  EF1D  F061         	goto	u3731
  3530  00C236  EF20  F061         	goto	u3730
  3531  00C23A                     u3731:
  3532  00C23A  0E01               	movlw	1
  3533  00C23C  EF21  F061         	goto	u3740
  3534  00C240                     u3730:
  3535  00C240  0E00               	movlw	0
  3536  00C242                     u3740:
  3537  00C242  6E01               	movwf	?_islower^0,c
  3538  00C244  6A02               	clrf	(?_islower+1)^0,c
  3539  00C246  0012               	return		;funcret
  3540  00C248                     __end_of_islower:
  3541                           	callstack 0
  3542                           
  3543 ;; *************** function _isalpha *****************
  3544 ;; Defined at:
  3545 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isalpha.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  c               2    0[COMRAM] int 
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;		None
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  2    0[COMRAM] int 
  3552 ;; Registers used:
  3553 ;;		wreg, status,2, status,0
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  3559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3561 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3562 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3563 ;;Total ram usage:        6 bytes
  3564 ;; Hardware stack levels used: 1
  3565 ;; This function calls:
  3566 ;;		Nothing
  3567 ;; This function is called by:
  3568 ;;		_xtoa
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text7
  3573  00C248                     __ptext7:
  3574                           	callstack 0
  3575  00C248                     _isalpha:
  3576                           	callstack 26
  3577  00C248  0E9F               	movlw	159
  3578  00C24A  6E03               	movwf	??_isalpha^0,c
  3579  00C24C  0EFF               	movlw	255
  3580  00C24E  6E04               	movwf	(??_isalpha+1)^0,c
  3581  00C250  0E20               	movlw	32
  3582  00C252  1001               	iorwf	isalpha@c^0,w,c
  3583  00C254  6E05               	movwf	(??_isalpha+2)^0,c
  3584  00C256  0E00               	movlw	0
  3585  00C258  1002               	iorwf	(isalpha@c+1)^0,w,c
  3586  00C25A  6E06               	movwf	(??_isalpha+3)^0,c
  3587  00C25C  5003               	movf	??_isalpha^0,w,c
  3588  00C25E  2605               	addwf	(??_isalpha+2)^0,f,c
  3589  00C260  5004               	movf	(??_isalpha+1)^0,w,c
  3590  00C262  2206               	addwfc	(??_isalpha+3)^0,f,c
  3591  00C264  5006               	movf	(??_isalpha+3)^0,w,c
  3592  00C266  E10A               	bnz	u4850
  3593  00C268  0E1A               	movlw	26
  3594  00C26A  5C05               	subwf	(??_isalpha+2)^0,w,c
  3595  00C26C  A0D8               	btfss	status,0,c
  3596  00C26E  EF3B  F061         	goto	u4851
  3597  00C272  EF3E  F061         	goto	u4850
  3598  00C276                     u4851:
  3599  00C276  0E01               	movlw	1
  3600  00C278  EF3F  F061         	goto	u4860
  3601  00C27C                     u4850:
  3602  00C27C  0E00               	movlw	0
  3603  00C27E                     u4860:
  3604  00C27E  6E01               	movwf	?_isalpha^0,c
  3605  00C280  6A02               	clrf	(?_isalpha+1)^0,c
  3606  00C282  0012               	return		;funcret
  3607  00C284                     __end_of_isalpha:
  3608                           	callstack 0
  3609                           
  3610 ;; *************** function _strncmp *****************
  3611 ;; Defined at:
  3612 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3615 ;;		 -> vfpfcnvrt@ct(3), STR_13(3), STR_12(20), STR_11(43), 
  3616 ;;		 -> STR_10(34), STR_9(8), STR_8(14), STR_7(41), 
  3617 ;;		 -> STR_6(42), STR_5(33), STR_4(41), STR_3(38), 
  3618 ;;		 -> STR_2(33), 
  3619 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3620 ;;		 -> STR_42(3), STR_38(3), STR_33(3), STR_28(3), 
  3621 ;;		 -> STR_24(3), 
  3622 ;;  n               2    4[COMRAM] unsigned int 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3625 ;;		 -> STR_42(3), STR_38(3), STR_33(3), STR_28(3), 
  3626 ;;		 -> STR_24(3), 
  3627 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3628 ;;		 -> vfpfcnvrt@ct(3), STR_13(3), STR_12(20), STR_11(43), 
  3629 ;;		 -> STR_10(34), STR_9(8), STR_8(14), STR_7(41), 
  3630 ;;		 -> STR_6(42), STR_5(33), STR_4(41), STR_3(38), 
  3631 ;;		 -> STR_2(33), 
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  2    0[COMRAM] int 
  3634 ;; Registers used:
  3635 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  3641 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3642 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3643 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3644 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3645 ;;Total ram usage:       11 bytes
  3646 ;; Hardware stack levels used: 1
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		_vfpfcnvrt
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text8
  3655  00CD9C                     __ptext8:
  3656                           	callstack 0
  3657  00CD9C                     _strncmp:
  3658                           	callstack 27
  3659  00CD9C  C001  F008         	movff	strncmp@_l,strncmp@l
  3660  00CDA0  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3661  00CDA4  C003  F00A         	movff	strncmp@_r,strncmp@r
  3662  00CDA8  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3663  00CDAC  0605               	decf	strncmp@n^0,f,c
  3664  00CDAE  A0D8               	btfss	status,0,c
  3665  00CDB0  0606               	decf	(strncmp@n+1)^0,f,c
  3666  00CDB2  2805               	incf	strncmp@n^0,w,c
  3667  00CDB4  E106               	bnz	u5921
  3668  00CDB6  2806               	incf	(strncmp@n+1)^0,w,c
  3669  00CDB8  A4D8               	btfss	status,2,c
  3670  00CDBA  EFE1  F066         	goto	u5921
  3671  00CDBE  EFE3  F066         	goto	u5920
  3672  00CDC2                     u5921:
  3673  00CDC2  EFF0  F066         	goto	l4488
  3674  00CDC6                     u5920:
  3675  00CDC6  0E00               	movlw	0
  3676  00CDC8  6E02               	movwf	(?_strncmp+1)^0,c
  3677  00CDCA  0E00               	movlw	0
  3678  00CDCC  6E01               	movwf	?_strncmp^0,c
  3679  00CDCE  EF5D  F067         	goto	l1211
  3680  00CDD2                     l4486:
  3681  00CDD2  4A08               	infsnz	strncmp@l^0,f,c
  3682  00CDD4  2A09               	incf	(strncmp@l+1)^0,f,c
  3683  00CDD6  4A0A               	infsnz	strncmp@r^0,f,c
  3684  00CDD8  2A0B               	incf	(strncmp@r+1)^0,f,c
  3685  00CDDA  0605               	decf	strncmp@n^0,f,c
  3686  00CDDC  A0D8               	btfss	status,0,c
  3687  00CDDE  0606               	decf	(strncmp@n+1)^0,f,c
  3688  00CDE0                     l4488:
  3689  00CDE0  C008  FFF6         	movff	strncmp@l,tblptrl
  3690  00CDE4  C009  FFF7         	movff	strncmp@l+1,tblptrh
  3691  00CDE8  0E00               	movlw	low (__mediumconst shr (0+16))
  3692  00CDEA  6EF8               	movwf	tblptru,c
  3693  00CDEC  0E0F               	movlw	(high __ramtop+-1)
  3694  00CDEE  64F7               	cpfsgt	tblptrh,c
  3695  00CDF0  D003               	bra	u5937
  3696  00CDF2  0008               	tblrd		*
  3697  00CDF4  50F5               	movf	tablat,w,c
  3698  00CDF6  D005               	bra	u5930
  3699  00CDF8                     u5937:
  3700  00CDF8  CFF6 FFE1          	movff	tblptrl,fsr1l
  3701  00CDFC  CFF7 FFE2          	movff	tblptrh,fsr1h
  3702  00CE00  50E7               	movf	indf1,w,c
  3703  00CE02                     u5930:
  3704  00CE02  0900               	iorlw	0
  3705  00CE04  B4D8               	btfsc	status,2,c
  3706  00CE06  EF07  F067         	goto	u5941
  3707  00CE0A  EF09  F067         	goto	u5940
  3708  00CE0E                     u5941:
  3709  00CE0E  EF40  F067         	goto	l4496
  3710  00CE12                     u5940:
  3711  00CE12  C00A  FFF6         	movff	strncmp@r,tblptrl
  3712  00CE16  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3713  00CE1A                     	if	0	;tblptru may be non-zero
  3714  00CE1A                     	endif
  3715  00CE1A                     	if	0	;tblptru may be non-zero
  3716  00CE1A                     	endif
  3717  00CE1A  0008               	tblrd		*
  3718  00CE1C  50F5               	movf	tablat,w,c
  3719  00CE1E  0900               	iorlw	0
  3720  00CE20  B4D8               	btfsc	status,2,c
  3721  00CE22  EF15  F067         	goto	u5951
  3722  00CE26  EF17  F067         	goto	u5950
  3723  00CE2A                     u5951:
  3724  00CE2A  EF40  F067         	goto	l4496
  3725  00CE2E                     u5950:
  3726  00CE2E  5005               	movf	strncmp@n^0,w,c
  3727  00CE30  1006               	iorwf	(strncmp@n+1)^0,w,c
  3728  00CE32  B4D8               	btfsc	status,2,c
  3729  00CE34  EF1E  F067         	goto	u5961
  3730  00CE38  EF20  F067         	goto	u5960
  3731  00CE3C                     u5961:
  3732  00CE3C  EF40  F067         	goto	l4496
  3733  00CE40                     u5960:
  3734  00CE40  C00A  FFF6         	movff	strncmp@r,tblptrl
  3735  00CE44  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3736  00CE48                     	if	0	;tblptru may be non-zero
  3737  00CE48                     	endif
  3738  00CE48                     	if	0	;tblptru may be non-zero
  3739  00CE48                     	endif
  3740  00CE48  0008               	tblrd		*
  3741  00CE4A  CFF5 F007          	movff	tablat,??_strncmp
  3742  00CE4E  C008  FFF6         	movff	strncmp@l,tblptrl
  3743  00CE52  C009  FFF7         	movff	strncmp@l+1,tblptrh
  3744  00CE56  0E00               	movlw	low (__mediumconst shr (0+16))
  3745  00CE58  6EF8               	movwf	tblptru,c
  3746  00CE5A  0E0F               	movlw	(high __ramtop+-1)
  3747  00CE5C  64F7               	cpfsgt	tblptrh,c
  3748  00CE5E  D003               	bra	u5977
  3749  00CE60  0008               	tblrd		*
  3750  00CE62  50F5               	movf	tablat,w,c
  3751  00CE64  D005               	bra	u5975
  3752  00CE66                     u5977:
  3753  00CE66  CFF6 FFE1          	movff	tblptrl,fsr1l
  3754  00CE6A  CFF7 FFE2          	movff	tblptrh,fsr1h
  3755  00CE6E  50E7               	movf	indf1,w,c
  3756  00CE70                     u5975:
  3757  00CE70  1807               	xorwf	??_strncmp^0,w,c
  3758  00CE72  B4D8               	btfsc	status,2,c
  3759  00CE74  EF3E  F067         	goto	u5971
  3760  00CE78  EF40  F067         	goto	u5970
  3761  00CE7C                     u5971:
  3762  00CE7C  EFE9  F066         	goto	l4486
  3763  00CE80                     u5970:
  3764  00CE80                     l4496:
  3765  00CE80  C008  FFF6         	movff	strncmp@l,tblptrl
  3766  00CE84  C009  FFF7         	movff	strncmp@l+1,tblptrh
  3767  00CE88  0E00               	movlw	low (__mediumconst shr (0+16))
  3768  00CE8A  6EF8               	movwf	tblptru,c
  3769  00CE8C  0E0F               	movlw	(high __ramtop+-1)
  3770  00CE8E  64F7               	cpfsgt	tblptrh,c
  3771  00CE90  D003               	bra	u5987
  3772  00CE92  0008               	tblrd		*
  3773  00CE94  50F5               	movf	tablat,w,c
  3774  00CE96  D005               	bra	u5980
  3775  00CE98                     u5987:
  3776  00CE98  CFF6 FFE1          	movff	tblptrl,fsr1l
  3777  00CE9C  CFF7 FFE2          	movff	tblptrh,fsr1h
  3778  00CEA0  50E7               	movf	indf1,w,c
  3779  00CEA2                     u5980:
  3780  00CEA2  6E07               	movwf	??_strncmp^0,c
  3781  00CEA4  C00A  FFF6         	movff	strncmp@r,tblptrl
  3782  00CEA8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3783  00CEAC                     	if	0	;tblptru may be non-zero
  3784  00CEAC                     	endif
  3785  00CEAC                     	if	0	;tblptru may be non-zero
  3786  00CEAC                     	endif
  3787  00CEAC  0008               	tblrd		*
  3788  00CEAE  50F5               	movf	tablat,w,c
  3789  00CEB0  5C07               	subwf	??_strncmp^0,w,c
  3790  00CEB2  6E01               	movwf	?_strncmp^0,c
  3791  00CEB4  6A02               	clrf	(?_strncmp+1)^0,c
  3792  00CEB6  A0D8               	btfss	status,0,c
  3793  00CEB8  0602               	decf	(?_strncmp+1)^0,f,c
  3794  00CEBA                     l1211:
  3795  00CEBA  0012               	return		;funcret
  3796  00CEBC                     __end_of_strncmp:
  3797                           	callstack 0
  3798                           
  3799 ;; *************** function _efgtoa *****************
  3800 ;; Defined at:
  3801 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  3804 ;;		 -> sprintf@f(6), 
  3805 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  3806 ;;  c               1   51[COMRAM] unsigned char 
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;  u               4   52[BANK0h] unsigned char 
  3809 ;;  g               4   44[BANK0h] unsigned char 
  3810 ;;  l               4   38[BANK0h] unsigned char 
  3811 ;;  h               4   34[BANK0h] unsigned char 
  3812 ;;  ou              4   20[BANK0h] unsigned char 
  3813 ;;  n               2   50[BANK0h] int 
  3814 ;;  e               2   48[BANK0h] int 
  3815 ;;  i               2   42[BANK0h] int 
  3816 ;;  w               2   30[BANK0h] int 
  3817 ;;  p               2   28[BANK0h] int 
  3818 ;;  sign            2   26[BANK0h] int 
  3819 ;;  d               2   24[BANK0h] int 
  3820 ;;  m               2   18[BANK0h] int 
  3821 ;;  ne              2   16[BANK0h] int 
  3822 ;;  pp              2   14[BANK0h] int 
  3823 ;;  t               2   12[BANK0h] int 
  3824 ;;  mode            1   33[BANK0h] unsigned char 
  3825 ;;  nmode           1   32[BANK0h] unsigned char 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  2   45[COMRAM] int 
  3828 ;; Registers used:
  3829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  3835 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3836 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3837 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3838 ;;      Totals:        12       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  3839 ;;Total ram usage:       68 bytes
  3840 ;; Hardware stack levels used: 1
  3841 ;; Hardware stack levels required when called: 4
  3842 ;; This function calls:
  3843 ;;		___awdiv
  3844 ;;		___awmod
  3845 ;;		___fladd
  3846 ;;		___fldiv
  3847 ;;		___fleq
  3848 ;;		___flge
  3849 ;;		___flmul
  3850 ;;		___flneg
  3851 ;;		___flsub
  3852 ;;		___fltol
  3853 ;;		___fpclassifyf
  3854 ;;		_floorf
  3855 ;;		_isupper
  3856 ;;		_pad
  3857 ;;		_strcpy
  3858 ;;		_tolower
  3859 ;; This function is called by:
  3860 ;;		_vfpfcnvrt
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text9
  3865  00F216                     __ptext9:
  3866                           	callstack 0
  3867  00F216                     _efgtoa:
  3868                           	callstack 23
  3869  00F216                     
  3870                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3871  00F216  0E00               	movlw	0
  3872  00F218  0100               	movlb	0	; () banked
  3873  00F21A  6FB1               	movwf	(efgtoa@sign+1)& (0+255),b
  3874  00F21C  0E00               	movlw	0
  3875  00F21E  6FB0               	movwf	efgtoa@sign& (0+255),b
  3876  00F220                     
  3877                           ; BSR set to: 0
  3878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3879  00F220  C030  F0C2         	movff	efgtoa@f,efgtoa@g
  3880  00F224  C031  F0C3         	movff	efgtoa@f+1,efgtoa@g+1
  3881  00F228  C032  F0C4         	movff	efgtoa@f+2,efgtoa@g+2
  3882  00F22C  C033  F0C5         	movff	efgtoa@f+3,efgtoa@g+3
  3883  00F230                     
  3884                           ; BSR set to: 0
  3885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3886  00F230  BFC5               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3887  00F232  EF1F  F079         	goto	u5140
  3888  00F236  EF1D  F079         	goto	u5141
  3889  00F23A                     u5141:
  3890  00F23A  EF35  F079         	goto	l4074
  3891  00F23E                     u5140:
  3892  00F23E                     
  3893                           ; BSR set to: 0
  3894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3895  00F23E  0E00               	movlw	0
  3896  00F240  6FB1               	movwf	(efgtoa@sign+1)& (0+255),b
  3897  00F242  0E01               	movlw	1
  3898  00F244  6FB0               	movwf	efgtoa@sign& (0+255),b
  3899  00F246                     
  3900                           ; BSR set to: 0
  3901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3902  00F246  C0C2  F001         	movff	efgtoa@g,___flneg@f1
  3903  00F24A  C0C3  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3904  00F24E  C0C4  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3905  00F252  C0C5  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3906  00F256  ECD0  F060         	call	___flneg	;wreg free
  3907  00F25A  C001  F0C2         	movff	?___flneg,efgtoa@g
  3908  00F25E  C002  F0C3         	movff	?___flneg+1,efgtoa@g+1
  3909  00F262  C003  F0C4         	movff	?___flneg+2,efgtoa@g+2
  3910  00F266  C004  F0C5         	movff	?___flneg+3,efgtoa@g+3
  3911  00F26A                     l4074:
  3912                           
  3913                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3914  00F26A  0E00               	movlw	0
  3915  00F26C  0100               	movlb	0	; () banked
  3916  00F26E  6FC9               	movwf	(efgtoa@n+1)& (0+255),b
  3917  00F270  0E00               	movlw	0
  3918  00F272  6FC8               	movwf	efgtoa@n& (0+255),b
  3919  00F274                     
  3920                           ; BSR set to: 0
  3921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3922  00F274  C0FB  F0B4         	movff	_width,efgtoa@w
  3923  00F278  C0FC  F0B5         	movff	_width+1,efgtoa@w+1
  3924  00F27C                     
  3925                           ; BSR set to: 0
  3926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3927  00F27C  51B0               	movf	efgtoa@sign& (0+255),w,b
  3928  00F27E  11B1               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3929  00F280  A4D8               	btfss	status,2,c
  3930  00F282  EF45  F079         	goto	u5151
  3931  00F286  EF47  F079         	goto	u5150
  3932  00F28A                     u5151:
  3933  00F28A  EF4E  F079         	goto	l4082
  3934  00F28E                     u5150:
  3935  00F28E                     
  3936                           ; BSR set to: 0
  3937  00F28E  A47C               	btfss	_flags^0,2,c
  3938  00F290  EF4C  F079         	goto	u5161
  3939  00F294  EF4E  F079         	goto	u5160
  3940  00F298                     u5161:
  3941  00F298  EF68  F079         	goto	l4094
  3942  00F29C                     u5160:
  3943  00F29C                     l4082:
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3947  00F29C  51B0               	movf	efgtoa@sign& (0+255),w,b
  3948  00F29E  11B1               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3949  00F2A0  A4D8               	btfss	status,2,c
  3950  00F2A2  EF55  F079         	goto	u5171
  3951  00F2A6  EF57  F079         	goto	u5170
  3952  00F2AA                     u5171:
  3953  00F2AA  EF5D  F079         	goto	l4086
  3954  00F2AE                     u5170:
  3955  00F2AE                     
  3956                           ; BSR set to: 0
  3957  00F2AE  0E00               	movlw	0
  3958  00F2B0  6F97               	movwf	(_efgtoa$1051+1)& (0+255),b
  3959  00F2B2  0E2B               	movlw	43
  3960  00F2B4  6F96               	movwf	_efgtoa$1051& (0+255),b
  3961  00F2B6  EF61  F079         	goto	l4088
  3962  00F2BA                     l4086:
  3963                           
  3964                           ; BSR set to: 0
  3965  00F2BA  0E00               	movlw	0
  3966  00F2BC  6F97               	movwf	(_efgtoa$1051+1)& (0+255),b
  3967  00F2BE  0E2D               	movlw	45
  3968  00F2C0  6F96               	movwf	_efgtoa$1051& (0+255),b
  3969  00F2C2                     l4088:
  3970                           
  3971                           ; BSR set to: 0
  3972  00F2C2  C096  F100         	movff	_efgtoa$1051,_dbuf
  3973  00F2C6                     
  3974                           ; BSR set to: 0
  3975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3976  00F2C6  4BC8               	infsnz	efgtoa@n& (0+255),f,b
  3977  00F2C8  2BC9               	incf	(efgtoa@n+1)& (0+255),f,b
  3978  00F2CA                     
  3979                           ; BSR set to: 0
  3980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  3981  00F2CA  07B4               	decf	efgtoa@w& (0+255),f,b
  3982  00F2CC  A0D8               	btfss	status,0,c
  3983  00F2CE  07B5               	decf	(efgtoa@w+1)& (0+255),f,b
  3984  00F2D0                     l4094:
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3988  00F2D0  C0C2  F001         	movff	efgtoa@g,___fpclassifyf@x
  3989  00F2D4  C0C3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3990  00F2D8  C0C4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3991  00F2DC  C0C5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3992  00F2E0  EC4A  F065         	call	___fpclassifyf	;wreg free
  3993  00F2E4  0401               	decf	?___fpclassifyf^0,w,c
  3994  00F2E6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3995  00F2E8  A4D8               	btfss	status,2,c
  3996  00F2EA  EF79  F079         	goto	u5181
  3997  00F2EE  EF7B  F079         	goto	u5180
  3998  00F2F2                     u5181:
  3999  00F2F2  EFD2  F079         	goto	l4112
  4000  00F2F6                     u5180:
  4001  00F2F6  0EBF               	movlw	191
  4002  00F2F8  6E35               	movwf	??_efgtoa^0,c
  4003  00F2FA  0EFF               	movlw	255
  4004  00F2FC  6E36               	movwf	(??_efgtoa+1)^0,c
  4005  00F2FE  5034               	movf	efgtoa@c^0,w,c
  4006  00F300  6E37               	movwf	(??_efgtoa+2)^0,c
  4007  00F302  6A38               	clrf	(??_efgtoa+3)^0,c
  4008  00F304  5035               	movf	??_efgtoa^0,w,c
  4009  00F306  2637               	addwf	(??_efgtoa+2)^0,f,c
  4010  00F308  5036               	movf	(??_efgtoa+1)^0,w,c
  4011  00F30A  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4012  00F30C  5038               	movf	(??_efgtoa+3)^0,w,c
  4013  00F30E  E10A               	bnz	u5190
  4014  00F310  0E1A               	movlw	26
  4015  00F312  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4016  00F314  A0D8               	btfss	status,0,c
  4017  00F316  EF8F  F079         	goto	u5191
  4018  00F31A  EF92  F079         	goto	u5190
  4019  00F31E                     u5191:
  4020  00F31E  0E01               	movlw	1
  4021  00F320  EF93  F079         	goto	u5200
  4022  00F324                     u5190:
  4023  00F324  0E00               	movlw	0
  4024  00F326                     u5200:
  4025  00F326  0100               	movlb	0	; () banked
  4026  00F328  6F98               	movwf	_efgtoa$1052& (0+255),b
  4027  00F32A  6B99               	clrf	(_efgtoa$1052+1)& (0+255),b
  4028  00F32C                     
  4029                           ; BSR set to: 0
  4030  00F32C  5198               	movf	_efgtoa$1052& (0+255),w,b
  4031  00F32E  1199               	iorwf	(_efgtoa$1052+1)& (0+255),w,b
  4032  00F330  B4D8               	btfsc	status,2,c
  4033  00F332  EF9D  F079         	goto	u5211
  4034  00F336  EF9F  F079         	goto	u5210
  4035  00F33A                     u5211:
  4036  00F33A  EFAD  F079         	goto	l4104
  4037  00F33E                     u5210:
  4038  00F33E                     
  4039                           ; BSR set to: 0
  4040                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  4041  00F33E  0E00               	movlw	low _dbuf
  4042  00F340  25C8               	addwf	efgtoa@n& (0+255),w,b
  4043  00F342  6E01               	movwf	strcpy@dest^0,c
  4044  00F344  0E01               	movlw	high _dbuf
  4045  00F346  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4046  00F348  6E02               	movwf	(strcpy@dest+1)^0,c
  4047  00F34A  0EDF               	movlw	low STR_14
  4048  00F34C  6E03               	movwf	strcpy@src^0,c
  4049  00F34E  0EFF               	movlw	high STR_14
  4050  00F350  6E04               	movwf	(strcpy@src+1)^0,c
  4051  00F352  EC1A  F062         	call	_strcpy	;wreg free
  4052                           
  4053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  4054  00F356  EFB9  F079         	goto	l4106
  4055  00F35A                     l4104:
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  4059  00F35A  0E00               	movlw	low _dbuf
  4060  00F35C  25C8               	addwf	efgtoa@n& (0+255),w,b
  4061  00F35E  6E01               	movwf	strcpy@dest^0,c
  4062  00F360  0E01               	movlw	high _dbuf
  4063  00F362  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4064  00F364  6E02               	movwf	(strcpy@dest+1)^0,c
  4065  00F366  0EE7               	movlw	low STR_15
  4066  00F368  6E03               	movwf	strcpy@src^0,c
  4067  00F36A  0EFF               	movlw	high STR_15
  4068  00F36C  6E04               	movwf	(strcpy@src+1)^0,c
  4069  00F36E  EC1A  F062         	call	_strcpy	;wreg free
  4070  00F372                     l4106:
  4071                           
  4072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4073  00F372  0100               	movlb	0	; () banked
  4074  00F374  0EFD               	movlw	253
  4075  00F376  27B4               	addwf	efgtoa@w& (0+255),f,b
  4076  00F378  0EFF               	movlw	255
  4077  00F37A  23B5               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4078  00F37C                     l4108:
  4079                           
  4080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4081  00F37C  C02E  F011         	movff	efgtoa@fp,pad@fp
  4082  00F380  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  4083  00F384  0E00               	movlw	low _dbuf
  4084  00F386  6E13               	movwf	pad@buf^0,c
  4085  00F388  0E01               	movlw	high _dbuf
  4086  00F38A  6E14               	movwf	(pad@buf+1)^0,c
  4087  00F38C  C0B4  F015         	movff	efgtoa@w,pad@p
  4088  00F390  C0B5  F016         	movff	efgtoa@w+1,pad@p+1
  4089  00F394  ECB7  F063         	call	_pad	;wreg free
  4090  00F398  C011  F02E         	movff	?_pad,?_efgtoa
  4091  00F39C  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  4092  00F3A0  EF37  F07F         	goto	l923
  4093  00F3A4                     l4112:
  4094                           
  4095                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4096  00F3A4  C0C2  F001         	movff	efgtoa@g,___fpclassifyf@x
  4097  00F3A8  C0C3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4098  00F3AC  C0C4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4099  00F3B0  C0C5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4100  00F3B4  EC4A  F065         	call	___fpclassifyf	;wreg free
  4101  00F3B8  5001               	movf	?___fpclassifyf^0,w,c
  4102  00F3BA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4103  00F3BC  A4D8               	btfss	status,2,c
  4104  00F3BE  EFE3  F079         	goto	u5221
  4105  00F3C2  EFE5  F079         	goto	u5220
  4106  00F3C6                     u5221:
  4107  00F3C6  EF25  F07A         	goto	l4130
  4108  00F3CA                     u5220:
  4109  00F3CA  0EBF               	movlw	191
  4110  00F3CC  6E35               	movwf	??_efgtoa^0,c
  4111  00F3CE  0EFF               	movlw	255
  4112  00F3D0  6E36               	movwf	(??_efgtoa+1)^0,c
  4113  00F3D2  5034               	movf	efgtoa@c^0,w,c
  4114  00F3D4  6E37               	movwf	(??_efgtoa+2)^0,c
  4115  00F3D6  6A38               	clrf	(??_efgtoa+3)^0,c
  4116  00F3D8  5035               	movf	??_efgtoa^0,w,c
  4117  00F3DA  2637               	addwf	(??_efgtoa+2)^0,f,c
  4118  00F3DC  5036               	movf	(??_efgtoa+1)^0,w,c
  4119  00F3DE  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4120  00F3E0  5038               	movf	(??_efgtoa+3)^0,w,c
  4121  00F3E2  E10A               	bnz	u5230
  4122  00F3E4  0E1A               	movlw	26
  4123  00F3E6  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4124  00F3E8  A0D8               	btfss	status,0,c
  4125  00F3EA  EFF9  F079         	goto	u5231
  4126  00F3EE  EFFC  F079         	goto	u5230
  4127  00F3F2                     u5231:
  4128  00F3F2  0E01               	movlw	1
  4129  00F3F4  EFFD  F079         	goto	u5240
  4130  00F3F8                     u5230:
  4131  00F3F8  0E00               	movlw	0
  4132  00F3FA                     u5240:
  4133  00F3FA  0100               	movlb	0	; () banked
  4134  00F3FC  6F9A               	movwf	_efgtoa$1056& (0+255),b
  4135  00F3FE  6B9B               	clrf	(_efgtoa$1056+1)& (0+255),b
  4136  00F400                     
  4137                           ; BSR set to: 0
  4138  00F400  519A               	movf	_efgtoa$1056& (0+255),w,b
  4139  00F402  119B               	iorwf	(_efgtoa$1056+1)& (0+255),w,b
  4140  00F404  B4D8               	btfsc	status,2,c
  4141  00F406  EF07  F07A         	goto	u5251
  4142  00F40A  EF09  F07A         	goto	u5250
  4143  00F40E                     u5251:
  4144  00F40E  EF17  F07A         	goto	l4122
  4145  00F412                     u5250:
  4146  00F412                     
  4147                           ; BSR set to: 0
  4148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  4149  00F412  0E00               	movlw	low _dbuf
  4150  00F414  25C8               	addwf	efgtoa@n& (0+255),w,b
  4151  00F416  6E01               	movwf	strcpy@dest^0,c
  4152  00F418  0E01               	movlw	high _dbuf
  4153  00F41A  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4154  00F41C  6E02               	movwf	(strcpy@dest+1)^0,c
  4155  00F41E  0EE3               	movlw	low STR_18
  4156  00F420  6E03               	movwf	strcpy@src^0,c
  4157  00F422  0EFF               	movlw	high STR_18
  4158  00F424  6E04               	movwf	(strcpy@src+1)^0,c
  4159  00F426  EC1A  F062         	call	_strcpy	;wreg free
  4160                           
  4161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  4162  00F42A  EFB9  F079         	goto	l4106
  4163  00F42E                     l4122:
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  4167  00F42E  0E00               	movlw	low _dbuf
  4168  00F430  25C8               	addwf	efgtoa@n& (0+255),w,b
  4169  00F432  6E01               	movwf	strcpy@dest^0,c
  4170  00F434  0E01               	movlw	high _dbuf
  4171  00F436  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4172  00F438  6E02               	movwf	(strcpy@dest+1)^0,c
  4173  00F43A  0EEB               	movlw	low STR_19
  4174  00F43C  6E03               	movwf	strcpy@src^0,c
  4175  00F43E  0EFF               	movlw	high STR_19
  4176  00F440  6E04               	movwf	(strcpy@src+1)^0,c
  4177  00F442  EC1A  F062         	call	_strcpy	;wreg free
  4178  00F446  EFB9  F079         	goto	l4106
  4179  00F44A                     l4130:
  4180                           
  4181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  4182  00F44A  0E00               	movlw	0
  4183  00F44C  0100               	movlb	0	; () banked
  4184  00F44E  6FCA               	movwf	efgtoa@u& (0+255),b
  4185  00F450  0E00               	movlw	0
  4186  00F452  6FCB               	movwf	(efgtoa@u+1)& (0+255),b
  4187  00F454  0E80               	movlw	128
  4188  00F456  6FCC               	movwf	(efgtoa@u+2)& (0+255),b
  4189  00F458  0E3F               	movlw	63
  4190  00F45A  6FCD               	movwf	(efgtoa@u+3)& (0+255),b
  4191                           
  4192                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  4193  00F45C  0E00               	movlw	0
  4194  00F45E  6FC7               	movwf	(efgtoa@e+1)& (0+255),b
  4195  00F460  0E00               	movlw	0
  4196  00F462  6FC6               	movwf	efgtoa@e& (0+255),b
  4197  00F464                     
  4198                           ; BSR set to: 0
  4199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  4200  00F464  C0C2  F001         	movff	efgtoa@g,___fleq@ff1
  4201  00F468  C0C3  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4202  00F46C  C0C4  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4203  00F470  C0C5  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4204  00F474  0E00               	movlw	0
  4205  00F476  6E05               	movwf	___fleq@ff2^0,c
  4206  00F478  0E00               	movlw	0
  4207  00F47A  6E06               	movwf	(___fleq@ff2+1)^0,c
  4208  00F47C  0E00               	movlw	0
  4209  00F47E  6E07               	movwf	(___fleq@ff2+2)^0,c
  4210  00F480  0E00               	movlw	0
  4211  00F482  6E08               	movwf	(___fleq@ff2+3)^0,c
  4212  00F484  EC0A  F063         	call	___fleq	;wreg free
  4213  00F488  B0D8               	btfsc	status,0,c
  4214  00F48A  EF49  F07A         	goto	u5261
  4215  00F48E  EF4B  F07A         	goto	u5260
  4216  00F492                     u5261:
  4217  00F492  EFCE  F07A         	goto	l4148
  4218  00F496                     u5260:
  4219  00F496  EF6A  F07A         	goto	l4140
  4220  00F49A                     l4136:
  4221                           
  4222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  4223  00F49A  C0CA  F001         	movff	efgtoa@u,___flmul@b
  4224  00F49E  C0CB  F002         	movff	efgtoa@u+1,___flmul@b+1
  4225  00F4A2  C0CC  F003         	movff	efgtoa@u+2,___flmul@b+2
  4226  00F4A6  C0CD  F004         	movff	efgtoa@u+3,___flmul@b+3
  4227  00F4AA  0E00               	movlw	0
  4228  00F4AC  6E05               	movwf	___flmul@a^0,c
  4229  00F4AE  0E00               	movlw	0
  4230  00F4B0  6E06               	movwf	(___flmul@a+1)^0,c
  4231  00F4B2  0E20               	movlw	32
  4232  00F4B4  6E07               	movwf	(___flmul@a+2)^0,c
  4233  00F4B6  0E41               	movlw	65
  4234  00F4B8  6E08               	movwf	(___flmul@a+3)^0,c
  4235  00F4BA  EC1A  F070         	call	___flmul	;wreg free
  4236  00F4BE  C001  F0CA         	movff	?___flmul,efgtoa@u
  4237  00F4C2  C002  F0CB         	movff	?___flmul+1,efgtoa@u+1
  4238  00F4C6  C003  F0CC         	movff	?___flmul+2,efgtoa@u+2
  4239  00F4CA  C004  F0CD         	movff	?___flmul+3,efgtoa@u+3
  4240  00F4CE                     
  4241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  4242  00F4CE  0100               	movlb	0	; () banked
  4243  00F4D0  4BC6               	infsnz	efgtoa@e& (0+255),f,b
  4244  00F4D2  2BC7               	incf	(efgtoa@e+1)& (0+255),f,b
  4245  00F4D4                     l4140:
  4246                           
  4247                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  4248  00F4D4  C0C2  F01A         	movff	efgtoa@g,___flge@ff1
  4249  00F4D8  C0C3  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  4250  00F4DC  C0C4  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  4251  00F4E0  C0C5  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  4252  00F4E4  0E00               	movlw	0
  4253  00F4E6  6E05               	movwf	___flmul@a^0,c
  4254  00F4E8  0E00               	movlw	0
  4255  00F4EA  6E06               	movwf	(___flmul@a+1)^0,c
  4256  00F4EC  0E20               	movlw	32
  4257  00F4EE  6E07               	movwf	(___flmul@a+2)^0,c
  4258  00F4F0  0E41               	movlw	65
  4259  00F4F2  6E08               	movwf	(___flmul@a+3)^0,c
  4260  00F4F4  C0CA  F001         	movff	efgtoa@u,___flmul@b
  4261  00F4F8  C0CB  F002         	movff	efgtoa@u+1,___flmul@b+1
  4262  00F4FC  C0CC  F003         	movff	efgtoa@u+2,___flmul@b+2
  4263  00F500  C0CD  F004         	movff	efgtoa@u+3,___flmul@b+3
  4264  00F504  EC1A  F070         	call	___flmul	;wreg free
  4265  00F508  C001  F01E         	movff	?___flmul,___flge@ff2
  4266  00F50C  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  4267  00F510  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  4268  00F514  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  4269  00F518  ECC9  F065         	call	___flge	;wreg free
  4270  00F51C  B0D8               	btfsc	status,0,c
  4271  00F51E  EF93  F07A         	goto	u5271
  4272  00F522  EF95  F07A         	goto	u5270
  4273  00F526                     u5271:
  4274  00F526  EF4D  F07A         	goto	l4136
  4275  00F52A                     u5270:
  4276  00F52A  EFB5  F07A         	goto	l4146
  4277  00F52E                     l4142:
  4278                           
  4279                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  4280  00F52E  C0CA  F001         	movff	efgtoa@u,___fldiv@b
  4281  00F532  C0CB  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4282  00F536  C0CC  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4283  00F53A  C0CD  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4284  00F53E  0E00               	movlw	0
  4285  00F540  6E05               	movwf	___fldiv@a^0,c
  4286  00F542  0E00               	movlw	0
  4287  00F544  6E06               	movwf	(___fldiv@a+1)^0,c
  4288  00F546  0E20               	movlw	32
  4289  00F548  6E07               	movwf	(___fldiv@a+2)^0,c
  4290  00F54A  0E41               	movlw	65
  4291  00F54C  6E08               	movwf	(___fldiv@a+3)^0,c
  4292  00F54E  EC4D  F06E         	call	___fldiv	;wreg free
  4293  00F552  C001  F0CA         	movff	?___fldiv,efgtoa@u
  4294  00F556  C002  F0CB         	movff	?___fldiv+1,efgtoa@u+1
  4295  00F55A  C003  F0CC         	movff	?___fldiv+2,efgtoa@u+2
  4296  00F55E  C004  F0CD         	movff	?___fldiv+3,efgtoa@u+3
  4297  00F562                     
  4298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  4299  00F562  0100               	movlb	0	; () banked
  4300  00F564  07C6               	decf	efgtoa@e& (0+255),f,b
  4301  00F566  A0D8               	btfss	status,0,c
  4302  00F568  07C7               	decf	(efgtoa@e+1)& (0+255),f,b
  4303  00F56A                     l4146:
  4304                           
  4305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  4306  00F56A  C0C2  F01A         	movff	efgtoa@g,___flge@ff1
  4307  00F56E  C0C3  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  4308  00F572  C0C4  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  4309  00F576  C0C5  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  4310  00F57A  C0CA  F01E         	movff	efgtoa@u,___flge@ff2
  4311  00F57E  C0CB  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  4312  00F582  C0CC  F020         	movff	efgtoa@u+2,___flge@ff2+2
  4313  00F586  C0CD  F021         	movff	efgtoa@u+3,___flge@ff2+3
  4314  00F58A  ECC9  F065         	call	___flge	;wreg free
  4315  00F58E  A0D8               	btfss	status,0,c
  4316  00F590  EFCC  F07A         	goto	u5281
  4317  00F594  EFCE  F07A         	goto	u5280
  4318  00F598                     u5281:
  4319  00F598  EF97  F07A         	goto	l4142
  4320  00F59C                     u5280:
  4321  00F59C                     l4148:
  4322                           
  4323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  4324  00F59C  C034  F007         	movff	efgtoa@c,tolower@c
  4325  00F5A0  6A08               	clrf	(tolower@c+1)^0,c
  4326  00F5A2  EC78  F062         	call	_tolower	;wreg free
  4327  00F5A6  5007               	movf	?_tolower^0,w,c
  4328  00F5A8  0100               	movlb	0	; () banked
  4329  00F5AA  6FB7               	movwf	efgtoa@mode& (0+255),b
  4330  00F5AC                     
  4331                           ; BSR set to: 0
  4332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  4333  00F5AC  C0B7  F0B6         	movff	efgtoa@mode,efgtoa@nmode
  4334  00F5B0                     
  4335                           ; BSR set to: 0
  4336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  4337  00F5B0  0E67               	movlw	103
  4338  00F5B2  19B7               	xorwf	efgtoa@mode& (0+255),w,b
  4339  00F5B4  A4D8               	btfss	status,2,c
  4340  00F5B6  EFDF  F07A         	goto	u5291
  4341  00F5BA  EFE1  F07A         	goto	u5290
  4342  00F5BE                     u5291:
  4343  00F5BE  EF07  F07B         	goto	l4162
  4344  00F5C2                     u5290:
  4345  00F5C2                     
  4346                           ; BSR set to: 0
  4347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  4348  00F5C2  51FD               	movf	_prec& (0+255),w,b
  4349  00F5C4  11FE               	iorwf	(_prec+1)& (0+255),w,b
  4350  00F5C6  A4D8               	btfss	status,2,c
  4351  00F5C8  EFE8  F07A         	goto	u5301
  4352  00F5CC  EFEA  F07A         	goto	u5300
  4353  00F5D0                     u5301:
  4354  00F5D0  EFEE  F07A         	goto	l4158
  4355  00F5D4                     u5300:
  4356  00F5D4                     
  4357                           ; BSR set to: 0
  4358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  4359  00F5D4  0E00               	movlw	0
  4360  00F5D6  6FFE               	movwf	(_prec+1)& (0+255),b
  4361  00F5D8  0E01               	movlw	1
  4362  00F5DA  6FFD               	movwf	_prec& (0+255),b
  4363  00F5DC                     l4158:
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  4367  00F5DC  BFFE               	btfsc	(_prec+1)& (0+255),7,b
  4368  00F5DE  EFFB  F07A         	goto	u5310
  4369  00F5E2  51FE               	movf	(_prec+1)& (0+255),w,b
  4370  00F5E4  E106               	bnz	u5311
  4371  00F5E6  05FD               	decf	_prec& (0+255),w,b
  4372  00F5E8  B0D8               	btfsc	status,0,c
  4373  00F5EA  EFF9  F07A         	goto	u5311
  4374  00F5EE  EFFB  F07A         	goto	u5310
  4375  00F5F2                     u5311:
  4376  00F5F2  EF01  F07B         	goto	l941
  4377  00F5F6                     u5310:
  4378  00F5F6                     l4160:
  4379                           
  4380                           ; BSR set to: 0
  4381  00F5F6  0E00               	movlw	0
  4382  00F5F8  6FB3               	movwf	(efgtoa@p+1)& (0+255),b
  4383  00F5FA  0E06               	movlw	6
  4384  00F5FC  6FB2               	movwf	efgtoa@p& (0+255),b
  4385  00F5FE  EF10  F07B         	goto	l4168
  4386  00F602                     l941:
  4387                           
  4388                           ; BSR set to: 0
  4389  00F602  C0FD  F0B2         	movff	_prec,efgtoa@p
  4390  00F606  C0FE  F0B3         	movff	_prec+1,efgtoa@p+1
  4391  00F60A  EF10  F07B         	goto	l4168
  4392  00F60E                     l4162:
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  4396  00F60E  BFFE               	btfsc	(_prec+1)& (0+255),7,b
  4397  00F610  EF0C  F07B         	goto	u5321
  4398  00F614  EF0E  F07B         	goto	u5320
  4399  00F618                     u5321:
  4400  00F618  EFFB  F07A         	goto	l4160
  4401  00F61C                     u5320:
  4402  00F61C  EF01  F07B         	goto	l941
  4403  00F620                     l4168:
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  4407  00F620  0E67               	movlw	103
  4408  00F622  19B7               	xorwf	efgtoa@mode& (0+255),w,b
  4409  00F624  A4D8               	btfss	status,2,c
  4410  00F626  EF17  F07B         	goto	u5331
  4411  00F62A  EF19  F07B         	goto	u5330
  4412  00F62E                     u5331:
  4413  00F62E  EF48  F07B         	goto	l4178
  4414  00F632                     u5330:
  4415  00F632                     
  4416                           ; BSR set to: 0
  4417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  4418  00F632  AFC7               	btfss	(efgtoa@e+1)& (0+255),7,b
  4419  00F634  EF27  F07B         	goto	u5340
  4420  00F638  0EFC               	movlw	252
  4421  00F63A  5DC6               	subwf	efgtoa@e& (0+255),w,b
  4422  00F63C  0EFF               	movlw	255
  4423  00F63E  59C7               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4424  00F640  A0D8               	btfss	status,0,c
  4425  00F642  EF25  F07B         	goto	u5341
  4426  00F646  EF27  F07B         	goto	u5340
  4427  00F64A                     u5341:
  4428  00F64A  EF46  F07B         	goto	l4176
  4429  00F64E                     u5340:
  4430  00F64E                     
  4431                           ; BSR set to: 0
  4432  00F64E  0EFF               	movlw	255
  4433  00F650  6E35               	movwf	??_efgtoa^0,c
  4434  00F652  0EFF               	movlw	255
  4435  00F654  6E36               	movwf	(??_efgtoa+1)^0,c
  4436  00F656  C0B2  F037         	movff	efgtoa@p,??_efgtoa+2
  4437  00F65A  C0B3  F038         	movff	efgtoa@p+1,??_efgtoa+3
  4438  00F65E  5035               	movf	??_efgtoa^0,w,c
  4439  00F660  2637               	addwf	(??_efgtoa+2)^0,f,c
  4440  00F662  5036               	movf	(??_efgtoa+1)^0,w,c
  4441  00F664  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4442  00F666  51C6               	movf	efgtoa@e& (0+255),w,b
  4443  00F668  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4444  00F66A  5038               	movf	(??_efgtoa+3)^0,w,c
  4445  00F66C  0A80               	xorlw	128
  4446  00F66E  6E39               	movwf	(??_efgtoa+4)^0,c
  4447  00F670  51C7               	movf	(efgtoa@e+1)& (0+255),w,b
  4448  00F672  0A80               	xorlw	128
  4449  00F674  5839               	subwfb	(??_efgtoa+4)^0,w,c
  4450  00F676  A0D8               	btfss	status,0,c
  4451  00F678  EF40  F07B         	goto	u5351
  4452  00F67C  EF42  F07B         	goto	u5350
  4453  00F680                     u5351:
  4454  00F680  EF46  F07B         	goto	l4176
  4455  00F684                     u5350:
  4456  00F684                     
  4457                           ; BSR set to: 0
  4458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  4459  00F684  0E66               	movlw	102
  4460  00F686  6FB6               	movwf	efgtoa@nmode& (0+255),b
  4461                           
  4462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  4463  00F688  EF48  F07B         	goto	l4178
  4464  00F68C                     l4176:
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  4468  00F68C  0E65               	movlw	101
  4469  00F68E  6FB6               	movwf	efgtoa@nmode& (0+255),b
  4470  00F690                     l4178:
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  4474  00F690  C0B2  F0A8         	movff	efgtoa@p,efgtoa@m
  4475  00F694  C0B3  F0A9         	movff	efgtoa@p+1,efgtoa@m+1
  4476  00F698                     
  4477                           ; BSR set to: 0
  4478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  4479  00F698  0E67               	movlw	103
  4480  00F69A  19B7               	xorwf	efgtoa@mode& (0+255),w,b
  4481  00F69C  A4D8               	btfss	status,2,c
  4482  00F69E  EF53  F07B         	goto	u5361
  4483  00F6A2  EF55  F07B         	goto	u5360
  4484  00F6A6                     u5361:
  4485  00F6A6  EF65  F07B         	goto	l4186
  4486  00F6AA                     u5360:
  4487  00F6AA                     
  4488                           ; BSR set to: 0
  4489  00F6AA  0E66               	movlw	102
  4490  00F6AC  19B6               	xorwf	efgtoa@nmode& (0+255),w,b
  4491  00F6AE  A4D8               	btfss	status,2,c
  4492  00F6B0  EF5C  F07B         	goto	u5371
  4493  00F6B4  EF5E  F07B         	goto	u5370
  4494  00F6B8                     u5371:
  4495  00F6B8  EF67  F07B         	goto	l4188
  4496  00F6BC                     u5370:
  4497  00F6BC                     
  4498                           ; BSR set to: 0
  4499  00F6BC  BFC7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4500  00F6BE  EF65  F07B         	goto	u5380
  4501  00F6C2  EF63  F07B         	goto	u5381
  4502  00F6C6                     u5381:
  4503  00F6C6  EF67  F07B         	goto	l4188
  4504  00F6CA                     u5380:
  4505  00F6CA                     l4186:
  4506                           
  4507                           ; BSR set to: 0
  4508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  4509  00F6CA  4BA8               	infsnz	efgtoa@m& (0+255),f,b
  4510  00F6CC  2BA9               	incf	(efgtoa@m+1)& (0+255),f,b
  4511  00F6CE                     l4188:
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  4515  00F6CE  0E66               	movlw	102
  4516  00F6D0  19B6               	xorwf	efgtoa@nmode& (0+255),w,b
  4517  00F6D2  A4D8               	btfss	status,2,c
  4518  00F6D4  EF6E  F07B         	goto	u5391
  4519  00F6D8  EF70  F07B         	goto	u5390
  4520  00F6DC                     u5391:
  4521  00F6DC  EF90  F07B         	goto	l4198
  4522  00F6E0                     u5390:
  4523  00F6E0                     
  4524                           ; BSR set to: 0
  4525                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  4526  00F6E0  BFC7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4527  00F6E2  EF77  F07B         	goto	u5400
  4528  00F6E6  EF75  F07B         	goto	u5401
  4529  00F6EA                     u5401:
  4530  00F6EA  EF83  F07B         	goto	l4194
  4531  00F6EE                     u5400:
  4532  00F6EE                     
  4533                           ; BSR set to: 0
  4534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  4535  00F6EE  0E00               	movlw	0
  4536  00F6F0  6FCA               	movwf	efgtoa@u& (0+255),b
  4537  00F6F2  0E00               	movlw	0
  4538  00F6F4  6FCB               	movwf	(efgtoa@u+1)& (0+255),b
  4539  00F6F6  0E80               	movlw	128
  4540  00F6F8  6FCC               	movwf	(efgtoa@u+2)& (0+255),b
  4541  00F6FA  0E3F               	movlw	63
  4542  00F6FC  6FCD               	movwf	(efgtoa@u+3)& (0+255),b
  4543                           
  4544                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  4545  00F6FE  0E00               	movlw	0
  4546  00F700  6FC7               	movwf	(efgtoa@e+1)& (0+255),b
  4547  00F702  0E00               	movlw	0
  4548  00F704  6FC6               	movwf	efgtoa@e& (0+255),b
  4549  00F706                     l4194:
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  4553  00F706  0E67               	movlw	103
  4554  00F708  19B7               	xorwf	efgtoa@mode& (0+255),w,b
  4555  00F70A  B4D8               	btfsc	status,2,c
  4556  00F70C  EF8A  F07B         	goto	u5411
  4557  00F710  EF8C  F07B         	goto	u5410
  4558  00F714                     u5411:
  4559  00F714  EF90  F07B         	goto	l4198
  4560  00F718                     u5410:
  4561  00F718                     
  4562                           ; BSR set to: 0
  4563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  4564  00F718  51C6               	movf	efgtoa@e& (0+255),w,b
  4565  00F71A  27A8               	addwf	efgtoa@m& (0+255),f,b
  4566  00F71C  51C7               	movf	(efgtoa@e+1)& (0+255),w,b
  4567  00F71E  23A9               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4568  00F720                     l4198:
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  4572  00F720  0E00               	movlw	0
  4573  00F722  6FC1               	movwf	(efgtoa@i+1)& (0+255),b
  4574  00F724  0E00               	movlw	0
  4575  00F726  6FC0               	movwf	efgtoa@i& (0+255),b
  4576  00F728                     
  4577                           ; BSR set to: 0
  4578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  4579  00F728  C0C2  F0B8         	movff	efgtoa@g,efgtoa@h
  4580  00F72C  C0C3  F0B9         	movff	efgtoa@g+1,efgtoa@h+1
  4581  00F730  C0C4  F0BA         	movff	efgtoa@g+2,efgtoa@h+2
  4582  00F734  C0C5  F0BB         	movff	efgtoa@g+3,efgtoa@h+3
  4583  00F738                     
  4584                           ; BSR set to: 0
  4585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  4586  00F738  C0CA  F0AA         	movff	efgtoa@u,efgtoa@ou
  4587  00F73C  C0CB  F0AB         	movff	efgtoa@u+1,efgtoa@ou+1
  4588  00F740  C0CC  F0AC         	movff	efgtoa@u+2,efgtoa@ou+2
  4589  00F744  C0CD  F0AD         	movff	efgtoa@u+3,efgtoa@ou+3
  4590                           
  4591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4592  00F748  EF21  F07C         	goto	l4212
  4593  00F74C                     l4204:
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  4597  00F74C  C0B8  F001         	movff	efgtoa@h,___fldiv@b
  4598  00F750  C0B9  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4599  00F754  C0BA  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4600  00F758  C0BB  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4601  00F75C  C0CA  F005         	movff	efgtoa@u,___fldiv@a
  4602  00F760  C0CB  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4603  00F764  C0CC  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4604  00F768  C0CD  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4605  00F76C  EC4D  F06E         	call	___fldiv	;wreg free
  4606  00F770  C001  F01A         	movff	?___fldiv,floorf@x
  4607  00F774  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4608  00F778  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4609  00F77C  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4610  00F780  EC69  F06A         	call	_floorf	;wreg free
  4611  00F784  C01A  F0BC         	movff	?_floorf,efgtoa@l
  4612  00F788  C01B  F0BD         	movff	?_floorf+1,efgtoa@l+1
  4613  00F78C  C01C  F0BE         	movff	?_floorf+2,efgtoa@l+2
  4614  00F790  C01D  F0BF         	movff	?_floorf+3,efgtoa@l+3
  4615                           
  4616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  4617  00F794  C0BC  F001         	movff	efgtoa@l,___fltol@f1
  4618  00F798  C0BD  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4619  00F79C  C0BE  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4620  00F7A0  C0BF  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4621  00F7A4  EC4B  F066         	call	___fltol	;wreg free
  4622  00F7A8  C001  F0AE         	movff	?___fltol,efgtoa@d
  4623  00F7AC  C002  F0AF         	movff	?___fltol+1,efgtoa@d+1
  4624  00F7B0                     
  4625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  4626  00F7B0  C0B8  F01A         	movff	efgtoa@h,___flsub@b
  4627  00F7B4  C0B9  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4628  00F7B8  C0BA  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4629  00F7BC  C0BB  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4630  00F7C0  C0CA  F005         	movff	efgtoa@u,___flmul@a
  4631  00F7C4  C0CB  F006         	movff	efgtoa@u+1,___flmul@a+1
  4632  00F7C8  C0CC  F007         	movff	efgtoa@u+2,___flmul@a+2
  4633  00F7CC  C0CD  F008         	movff	efgtoa@u+3,___flmul@a+3
  4634  00F7D0  C0BC  F001         	movff	efgtoa@l,___flmul@b
  4635  00F7D4  C0BD  F002         	movff	efgtoa@l+1,___flmul@b+1
  4636  00F7D8  C0BE  F003         	movff	efgtoa@l+2,___flmul@b+2
  4637  00F7DC  C0BF  F004         	movff	efgtoa@l+3,___flmul@b+3
  4638  00F7E0  EC1A  F070         	call	___flmul	;wreg free
  4639  00F7E4  C001  F01E         	movff	?___flmul,___flsub@a
  4640  00F7E8  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4641  00F7EC  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4642  00F7F0  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4643  00F7F4  ECA5  F061         	call	___flsub	;wreg free
  4644  00F7F8  C01A  F0B8         	movff	?___flsub,efgtoa@h
  4645  00F7FC  C01B  F0B9         	movff	?___flsub+1,efgtoa@h+1
  4646  00F800  C01C  F0BA         	movff	?___flsub+2,efgtoa@h+2
  4647  00F804  C01D  F0BB         	movff	?___flsub+3,efgtoa@h+3
  4648  00F808                     
  4649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4650  00F808  C0CA  F001         	movff	efgtoa@u,___fldiv@b
  4651  00F80C  C0CB  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4652  00F810  C0CC  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4653  00F814  C0CD  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4654  00F818  0E00               	movlw	0
  4655  00F81A  6E05               	movwf	___fldiv@a^0,c
  4656  00F81C  0E00               	movlw	0
  4657  00F81E  6E06               	movwf	(___fldiv@a+1)^0,c
  4658  00F820  0E20               	movlw	32
  4659  00F822  6E07               	movwf	(___fldiv@a+2)^0,c
  4660  00F824  0E41               	movlw	65
  4661  00F826  6E08               	movwf	(___fldiv@a+3)^0,c
  4662  00F828  EC4D  F06E         	call	___fldiv	;wreg free
  4663  00F82C  C001  F0CA         	movff	?___fldiv,efgtoa@u
  4664  00F830  C002  F0CB         	movff	?___fldiv+1,efgtoa@u+1
  4665  00F834  C003  F0CC         	movff	?___fldiv+2,efgtoa@u+2
  4666  00F838  C004  F0CD         	movff	?___fldiv+3,efgtoa@u+3
  4667  00F83C                     
  4668                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4669  00F83C  0100               	movlb	0	; () banked
  4670  00F83E  4BC0               	infsnz	efgtoa@i& (0+255),f,b
  4671  00F840  2BC1               	incf	(efgtoa@i+1)& (0+255),f,b
  4672  00F842                     l4212:
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4676  00F842  51A8               	movf	efgtoa@m& (0+255),w,b
  4677  00F844  5DC0               	subwf	efgtoa@i& (0+255),w,b
  4678  00F846  51C1               	movf	(efgtoa@i+1)& (0+255),w,b
  4679  00F848  0A80               	xorlw	128
  4680  00F84A  6E35               	movwf	??_efgtoa^0,c
  4681  00F84C  51A9               	movf	(efgtoa@m+1)& (0+255),w,b
  4682  00F84E  0A80               	xorlw	128
  4683  00F850  5835               	subwfb	??_efgtoa^0,w,c
  4684  00F852  A0D8               	btfss	status,0,c
  4685  00F854  EF2E  F07C         	goto	u5421
  4686  00F858  EF30  F07C         	goto	u5420
  4687  00F85C                     u5421:
  4688  00F85C  EFA6  F07B         	goto	l4204
  4689  00F860                     u5420:
  4690  00F860                     
  4691                           ; BSR set to: 0
  4692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4693  00F860  C0CA  F001         	movff	efgtoa@u,___flmul@b
  4694  00F864  C0CB  F002         	movff	efgtoa@u+1,___flmul@b+1
  4695  00F868  C0CC  F003         	movff	efgtoa@u+2,___flmul@b+2
  4696  00F86C  C0CD  F004         	movff	efgtoa@u+3,___flmul@b+3
  4697  00F870  0E00               	movlw	0
  4698  00F872  6E05               	movwf	___flmul@a^0,c
  4699  00F874  0E00               	movlw	0
  4700  00F876  6E06               	movwf	(___flmul@a+1)^0,c
  4701  00F878  0EA0               	movlw	160
  4702  00F87A  6E07               	movwf	(___flmul@a+2)^0,c
  4703  00F87C  0E40               	movlw	64
  4704  00F87E  6E08               	movwf	(___flmul@a+3)^0,c
  4705  00F880  EC1A  F070         	call	___flmul	;wreg free
  4706  00F884  C001  F0BC         	movff	?___flmul,efgtoa@l
  4707  00F888  C002  F0BD         	movff	?___flmul+1,efgtoa@l+1
  4708  00F88C  C003  F0BE         	movff	?___flmul+2,efgtoa@l+2
  4709  00F890  C004  F0BF         	movff	?___flmul+3,efgtoa@l+3
  4710  00F894                     
  4711                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4712  00F894  C0B8  F01A         	movff	efgtoa@h,___flge@ff1
  4713  00F898  C0B9  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4714  00F89C  C0BA  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4715  00F8A0  C0BB  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4716  00F8A4  C0BC  F01E         	movff	efgtoa@l,___flge@ff2
  4717  00F8A8  C0BD  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  4718  00F8AC  C0BE  F020         	movff	efgtoa@l+2,___flge@ff2+2
  4719  00F8B0  C0BF  F021         	movff	efgtoa@l+3,___flge@ff2+3
  4720  00F8B4  ECC9  F065         	call	___flge	;wreg free
  4721  00F8B8  B0D8               	btfsc	status,0,c
  4722  00F8BA  EF61  F07C         	goto	u5431
  4723  00F8BE  EF63  F07C         	goto	u5430
  4724  00F8C2                     u5431:
  4725  00F8C2  EF6E  F07C         	goto	l4220
  4726  00F8C6                     u5430:
  4727  00F8C6                     
  4728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4729  00F8C6  0E00               	movlw	0
  4730  00F8C8  0100               	movlb	0	; () banked
  4731  00F8CA  6FBC               	movwf	efgtoa@l& (0+255),b
  4732  00F8CC  0E00               	movlw	0
  4733  00F8CE  6FBD               	movwf	(efgtoa@l+1)& (0+255),b
  4734  00F8D0  0E00               	movlw	0
  4735  00F8D2  6FBE               	movwf	(efgtoa@l+2)& (0+255),b
  4736  00F8D4  0E00               	movlw	0
  4737  00F8D6  6FBF               	movwf	(efgtoa@l+3)& (0+255),b
  4738                           
  4739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  4740  00F8D8  EF97  F07C         	goto	l4226
  4741  00F8DC                     l4220:
  4742                           
  4743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4744  00F8DC  C0B8  F001         	movff	efgtoa@h,___fleq@ff1
  4745  00F8E0  C0B9  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4746  00F8E4  C0BA  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4747  00F8E8  C0BB  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4748  00F8EC  C0BC  F005         	movff	efgtoa@l,___fleq@ff2
  4749  00F8F0  C0BD  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4750  00F8F4  C0BE  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4751  00F8F8  C0BF  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4752  00F8FC  EC0A  F063         	call	___fleq	;wreg free
  4753  00F900  A0D8               	btfss	status,0,c
  4754  00F902  EF85  F07C         	goto	u5441
  4755  00F906  EF87  F07C         	goto	u5440
  4756  00F90A                     u5441:
  4757  00F90A  EF97  F07C         	goto	l4226
  4758  00F90E                     u5440:
  4759  00F90E  0100               	movlb	0	; () banked
  4760  00F910  B1AE               	btfsc	efgtoa@d& (0+255),0,b
  4761  00F912  EF8D  F07C         	goto	u5451
  4762  00F916  EF8F  F07C         	goto	u5450
  4763  00F91A                     u5451:
  4764  00F91A  EF97  F07C         	goto	l4226
  4765  00F91E                     u5450:
  4766  00F91E                     
  4767                           ; BSR set to: 0
  4768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4769  00F91E  0E00               	movlw	0
  4770  00F920  6FBC               	movwf	efgtoa@l& (0+255),b
  4771  00F922  0E00               	movlw	0
  4772  00F924  6FBD               	movwf	(efgtoa@l+1)& (0+255),b
  4773  00F926  0E00               	movlw	0
  4774  00F928  6FBE               	movwf	(efgtoa@l+2)& (0+255),b
  4775  00F92A  0E00               	movlw	0
  4776  00F92C  6FBF               	movwf	(efgtoa@l+3)& (0+255),b
  4777  00F92E                     l4226:
  4778                           
  4779                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4780  00F92E  C0C2  F001         	movff	efgtoa@g,___fladd@b
  4781  00F932  C0C3  F002         	movff	efgtoa@g+1,___fladd@b+1
  4782  00F936  C0C4  F003         	movff	efgtoa@g+2,___fladd@b+2
  4783  00F93A  C0C5  F004         	movff	efgtoa@g+3,___fladd@b+3
  4784  00F93E  C0BC  F005         	movff	efgtoa@l,___fladd@a
  4785  00F942  C0BD  F006         	movff	efgtoa@l+1,___fladd@a+1
  4786  00F946  C0BE  F007         	movff	efgtoa@l+2,___fladd@a+2
  4787  00F94A  C0BF  F008         	movff	efgtoa@l+3,___fladd@a+3
  4788  00F94E  EC2F  F072         	call	___fladd	;wreg free
  4789  00F952  C001  F0B8         	movff	?___fladd,efgtoa@h
  4790  00F956  C002  F0B9         	movff	?___fladd+1,efgtoa@h+1
  4791  00F95A  C003  F0BA         	movff	?___fladd+2,efgtoa@h+2
  4792  00F95E  C004  F0BB         	movff	?___fladd+3,efgtoa@h+3
  4793  00F962                     
  4794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4795  00F962  C0B8  F01A         	movff	efgtoa@h,___flge@ff1
  4796  00F966  C0B9  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4797  00F96A  C0BA  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4798  00F96E  C0BB  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4799  00F972  0E00               	movlw	0
  4800  00F974  6E05               	movwf	___flmul@a^0,c
  4801  00F976  0E00               	movlw	0
  4802  00F978  6E06               	movwf	(___flmul@a+1)^0,c
  4803  00F97A  0E20               	movlw	32
  4804  00F97C  6E07               	movwf	(___flmul@a+2)^0,c
  4805  00F97E  0E41               	movlw	65
  4806  00F980  6E08               	movwf	(___flmul@a+3)^0,c
  4807  00F982  C0AA  F001         	movff	efgtoa@ou,___flmul@b
  4808  00F986  C0AB  F002         	movff	efgtoa@ou+1,___flmul@b+1
  4809  00F98A  C0AC  F003         	movff	efgtoa@ou+2,___flmul@b+2
  4810  00F98E  C0AD  F004         	movff	efgtoa@ou+3,___flmul@b+3
  4811  00F992  EC1A  F070         	call	___flmul	;wreg free
  4812  00F996  C001  F01E         	movff	?___flmul,___flge@ff2
  4813  00F99A  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  4814  00F99E  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  4815  00F9A2  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  4816  00F9A6  ECC9  F065         	call	___flge	;wreg free
  4817  00F9AA  A0D8               	btfss	status,0,c
  4818  00F9AC  EFDA  F07C         	goto	u5461
  4819  00F9B0  EFDC  F07C         	goto	u5460
  4820  00F9B4                     u5461:
  4821  00F9B4  EF05  F07D         	goto	l4238
  4822  00F9B8                     u5460:
  4823  00F9B8                     
  4824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  4825  00F9B8  0100               	movlb	0	; () banked
  4826  00F9BA  4BC6               	infsnz	efgtoa@e& (0+255),f,b
  4827  00F9BC  2BC7               	incf	(efgtoa@e+1)& (0+255),f,b
  4828  00F9BE                     
  4829                           ; BSR set to: 0
  4830                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4831  00F9BE  C0AA  F001         	movff	efgtoa@ou,___flmul@b
  4832  00F9C2  C0AB  F002         	movff	efgtoa@ou+1,___flmul@b+1
  4833  00F9C6  C0AC  F003         	movff	efgtoa@ou+2,___flmul@b+2
  4834  00F9CA  C0AD  F004         	movff	efgtoa@ou+3,___flmul@b+3
  4835  00F9CE  0E00               	movlw	0
  4836  00F9D0  6E05               	movwf	___flmul@a^0,c
  4837  00F9D2  0E00               	movlw	0
  4838  00F9D4  6E06               	movwf	(___flmul@a+1)^0,c
  4839  00F9D6  0E20               	movlw	32
  4840  00F9D8  6E07               	movwf	(___flmul@a+2)^0,c
  4841  00F9DA  0E41               	movlw	65
  4842  00F9DC  6E08               	movwf	(___flmul@a+3)^0,c
  4843  00F9DE  EC1A  F070         	call	___flmul	;wreg free
  4844  00F9E2  C001  F0AA         	movff	?___flmul,efgtoa@ou
  4845  00F9E6  C002  F0AB         	movff	?___flmul+1,efgtoa@ou+1
  4846  00F9EA  C003  F0AC         	movff	?___flmul+2,efgtoa@ou+2
  4847  00F9EE  C004  F0AD         	movff	?___flmul+3,efgtoa@ou+3
  4848  00F9F2                     
  4849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4850  00F9F2  0E66               	movlw	102
  4851  00F9F4  0100               	movlb	0	; () banked
  4852  00F9F6  19B6               	xorwf	efgtoa@nmode& (0+255),w,b
  4853  00F9F8  A4D8               	btfss	status,2,c
  4854  00F9FA  EF01  F07D         	goto	u5471
  4855  00F9FE  EF03  F07D         	goto	u5470
  4856  00FA02                     u5471:
  4857  00FA02  EF05  F07D         	goto	l4238
  4858  00FA06                     u5470:
  4859  00FA06                     
  4860                           ; BSR set to: 0
  4861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  4862  00FA06  4BA8               	infsnz	efgtoa@m& (0+255),f,b
  4863  00FA08  2BA9               	incf	(efgtoa@m+1)& (0+255),f,b
  4864  00FA0A                     l4238:
  4865                           
  4866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4867  00FA0A  C0AA  F0CA         	movff	efgtoa@ou,efgtoa@u
  4868  00FA0E  C0AB  F0CB         	movff	efgtoa@ou+1,efgtoa@u+1
  4869  00FA12  C0AC  F0CC         	movff	efgtoa@ou+2,efgtoa@u+2
  4870  00FA16  C0AD  F0CD         	movff	efgtoa@ou+3,efgtoa@u+3
  4871  00FA1A                     
  4872                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4873  00FA1A  0E65               	movlw	101
  4874  00FA1C  0100               	movlb	0	; () banked
  4875  00FA1E  19B6               	xorwf	efgtoa@nmode& (0+255),w,b
  4876  00FA20  B4D8               	btfsc	status,2,c
  4877  00FA22  EF15  F07D         	goto	u5481
  4878  00FA26  EF17  F07D         	goto	u5480
  4879  00FA2A                     u5481:
  4880  00FA2A  EF1D  F07D         	goto	l4244
  4881  00FA2E                     u5480:
  4882  00FA2E                     
  4883                           ; BSR set to: 0
  4884  00FA2E  C0C6  F0A6         	movff	efgtoa@e,efgtoa@ne
  4885  00FA32  C0C7  F0A7         	movff	efgtoa@e+1,efgtoa@ne+1
  4886  00FA36  EF21  F07D         	goto	l969
  4887  00FA3A                     l4244:
  4888                           
  4889                           ; BSR set to: 0
  4890  00FA3A  0E00               	movlw	0
  4891  00FA3C  6FA7               	movwf	(efgtoa@ne+1)& (0+255),b
  4892  00FA3E  0E00               	movlw	0
  4893  00FA40  6FA6               	movwf	efgtoa@ne& (0+255),b
  4894  00FA42                     l969:
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4898  00FA42  0E00               	movlw	0
  4899  00FA44  6FA5               	movwf	(efgtoa@pp+1)& (0+255),b
  4900  00FA46  0E00               	movlw	0
  4901  00FA48  6FA4               	movwf	efgtoa@pp& (0+255),b
  4902                           
  4903                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4904  00FA4A  0E00               	movlw	0
  4905  00FA4C  6FA3               	movwf	(efgtoa@t+1)& (0+255),b
  4906  00FA4E  0E00               	movlw	0
  4907  00FA50  6FA2               	movwf	efgtoa@t& (0+255),b
  4908                           
  4909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4910  00FA52  0E00               	movlw	0
  4911  00FA54  6FC1               	movwf	(efgtoa@i+1)& (0+255),b
  4912  00FA56  0E00               	movlw	0
  4913  00FA58  6FC0               	movwf	efgtoa@i& (0+255),b
  4914                           
  4915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4916  00FA5A  EF1D  F07E         	goto	l4294
  4917  00FA5E                     l4246:
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4921  00FA5E  C0B8  F001         	movff	efgtoa@h,___fldiv@b
  4922  00FA62  C0B9  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4923  00FA66  C0BA  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4924  00FA6A  C0BB  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4925  00FA6E  C0CA  F005         	movff	efgtoa@u,___fldiv@a
  4926  00FA72  C0CB  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4927  00FA76  C0CC  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4928  00FA7A  C0CD  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4929  00FA7E  EC4D  F06E         	call	___fldiv	;wreg free
  4930  00FA82  C001  F01A         	movff	?___fldiv,floorf@x
  4931  00FA86  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4932  00FA8A  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4933  00FA8E  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4934  00FA92  EC69  F06A         	call	_floorf	;wreg free
  4935  00FA96  C01A  F0BC         	movff	?_floorf,efgtoa@l
  4936  00FA9A  C01B  F0BD         	movff	?_floorf+1,efgtoa@l+1
  4937  00FA9E  C01C  F0BE         	movff	?_floorf+2,efgtoa@l+2
  4938  00FAA2  C01D  F0BF         	movff	?_floorf+3,efgtoa@l+3
  4939                           
  4940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4941  00FAA6  C0BC  F001         	movff	efgtoa@l,___fltol@f1
  4942  00FAAA  C0BD  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4943  00FAAE  C0BE  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4944  00FAB2  C0BF  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4945  00FAB6  EC4B  F066         	call	___fltol	;wreg free
  4946  00FABA  C001  F0AE         	movff	?___fltol,efgtoa@d
  4947  00FABE  C002  F0AF         	movff	?___fltol+1,efgtoa@d+1
  4948  00FAC2                     
  4949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4950  00FAC2  B87C               	btfsc	_flags^0,4,c
  4951  00FAC4  EF66  F07D         	goto	u5491
  4952  00FAC8  EF68  F07D         	goto	u5490
  4953  00FACC                     u5491:
  4954  00FACC  EF86  F07D         	goto	l4258
  4955  00FAD0                     u5490:
  4956  00FAD0  0100               	movlb	0	; () banked
  4957  00FAD2  51AE               	movf	efgtoa@d& (0+255),w,b
  4958  00FAD4  11AF               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4959  00FAD6  A4D8               	btfss	status,2,c
  4960  00FAD8  EF70  F07D         	goto	u5501
  4961  00FADC  EF72  F07D         	goto	u5500
  4962  00FAE0                     u5501:
  4963  00FAE0  EF86  F07D         	goto	l4258
  4964  00FAE4                     u5500:
  4965  00FAE4                     
  4966                           ; BSR set to: 0
  4967  00FAE4  0E67               	movlw	103
  4968  00FAE6  19B7               	xorwf	efgtoa@mode& (0+255),w,b
  4969  00FAE8  A4D8               	btfss	status,2,c
  4970  00FAEA  EF79  F07D         	goto	u5511
  4971  00FAEE  EF7B  F07D         	goto	u5510
  4972  00FAF2                     u5511:
  4973  00FAF2  EF86  F07D         	goto	l4258
  4974  00FAF6                     u5510:
  4975  00FAF6                     
  4976                           ; BSR set to: 0
  4977  00FAF6  BFA7               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4978  00FAF8  EF82  F07D         	goto	u5520
  4979  00FAFC  EF80  F07D         	goto	u5521
  4980  00FB00                     u5521:
  4981  00FB00  EF86  F07D         	goto	l4258
  4982  00FB04                     u5520:
  4983  00FB04                     
  4984                           ; BSR set to: 0
  4985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4986  00FB04  4BA2               	infsnz	efgtoa@t& (0+255),f,b
  4987  00FB06  2BA3               	incf	(efgtoa@t+1)& (0+255),f,b
  4988                           
  4989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4990  00FB08  EFD1  F07D         	goto	l4286
  4991  00FB0C                     l4258:
  4992                           
  4993                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4994  00FB0C  0100               	movlb	0	; () banked
  4995  00FB0E  51A4               	movf	efgtoa@pp& (0+255),w,b
  4996  00FB10  11A5               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4997  00FB12  A4D8               	btfss	status,2,c
  4998  00FB14  EF8E  F07D         	goto	u5531
  4999  00FB18  EF90  F07D         	goto	u5530
  5000  00FB1C                     u5531:
  5001  00FB1C  EFBA  F07D         	goto	l4278
  5002  00FB20                     u5530:
  5003  00FB20                     
  5004                           ; BSR set to: 0
  5005  00FB20  BFA7               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5006  00FB22  EF97  F07D         	goto	u5540
  5007  00FB26  EF95  F07D         	goto	u5541
  5008  00FB2A                     u5541:
  5009  00FB2A  EFBA  F07D         	goto	l4278
  5010  00FB2E                     u5540:
  5011  00FB2E                     
  5012                           ; BSR set to: 0
  5013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  5014  00FB2E  0E00               	movlw	low _dbuf
  5015  00FB30  25C8               	addwf	efgtoa@n& (0+255),w,b
  5016  00FB32  6ED9               	movwf	fsr2l,c
  5017  00FB34  0E01               	movlw	high _dbuf
  5018  00FB36  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5019  00FB38  6EDA               	movwf	fsr2h,c
  5020  00FB3A  0E2E               	movlw	46
  5021  00FB3C  6EDF               	movwf	indf2,c
  5022  00FB3E                     
  5023                           ; BSR set to: 0
  5024  00FB3E  4BC8               	infsnz	efgtoa@n& (0+255),f,b
  5025  00FB40  2BC9               	incf	(efgtoa@n+1)& (0+255),f,b
  5026  00FB42                     
  5027                           ; BSR set to: 0
  5028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  5029  00FB42  07B4               	decf	efgtoa@w& (0+255),f,b
  5030  00FB44  A0D8               	btfss	status,0,c
  5031  00FB46  07B5               	decf	(efgtoa@w+1)& (0+255),f,b
  5032  00FB48                     
  5033                           ; BSR set to: 0
  5034                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  5035  00FB48  0E00               	movlw	0
  5036  00FB4A  6FA5               	movwf	(efgtoa@pp+1)& (0+255),b
  5037  00FB4C  0E01               	movlw	1
  5038  00FB4E  6FA4               	movwf	efgtoa@pp& (0+255),b
  5039  00FB50  EFBA  F07D         	goto	l4278
  5040  00FB54                     l4270:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  5044  00FB54  0E00               	movlw	low _dbuf
  5045  00FB56  25C8               	addwf	efgtoa@n& (0+255),w,b
  5046  00FB58  6ED9               	movwf	fsr2l,c
  5047  00FB5A  0E01               	movlw	high _dbuf
  5048  00FB5C  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5049  00FB5E  6EDA               	movwf	fsr2h,c
  5050  00FB60  0E30               	movlw	48
  5051  00FB62  6EDF               	movwf	indf2,c
  5052  00FB64                     
  5053                           ; BSR set to: 0
  5054  00FB64  4BC8               	infsnz	efgtoa@n& (0+255),f,b
  5055  00FB66  2BC9               	incf	(efgtoa@n+1)& (0+255),f,b
  5056  00FB68                     
  5057                           ; BSR set to: 0
  5058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  5059  00FB68  07B4               	decf	efgtoa@w& (0+255),f,b
  5060  00FB6A  A0D8               	btfss	status,0,c
  5061  00FB6C  07B5               	decf	(efgtoa@w+1)& (0+255),f,b
  5062  00FB6E                     
  5063                           ; BSR set to: 0
  5064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  5065  00FB6E  07A2               	decf	efgtoa@t& (0+255),f,b
  5066  00FB70  A0D8               	btfss	status,0,c
  5067  00FB72  07A3               	decf	(efgtoa@t+1)& (0+255),f,b
  5068  00FB74                     l4278:
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  5072  00FB74  51A2               	movf	efgtoa@t& (0+255),w,b
  5073  00FB76  11A3               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5074  00FB78  A4D8               	btfss	status,2,c
  5075  00FB7A  EFC1  F07D         	goto	u5551
  5076  00FB7E  EFC3  F07D         	goto	u5550
  5077  00FB82                     u5551:
  5078  00FB82  EFAA  F07D         	goto	l4270
  5079  00FB86                     u5550:
  5080  00FB86                     
  5081                           ; BSR set to: 0
  5082                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5083  00FB86  0E00               	movlw	low _dbuf
  5084  00FB88  25C8               	addwf	efgtoa@n& (0+255),w,b
  5085  00FB8A  6ED9               	movwf	fsr2l,c
  5086  00FB8C  0E01               	movlw	high _dbuf
  5087  00FB8E  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5088  00FB90  6EDA               	movwf	fsr2h,c
  5089  00FB92  51AE               	movf	efgtoa@d& (0+255),w,b
  5090  00FB94  0F30               	addlw	48
  5091  00FB96  6EDF               	movwf	indf2,c
  5092  00FB98                     
  5093                           ; BSR set to: 0
  5094  00FB98  4BC8               	infsnz	efgtoa@n& (0+255),f,b
  5095  00FB9A  2BC9               	incf	(efgtoa@n+1)& (0+255),f,b
  5096  00FB9C                     
  5097                           ; BSR set to: 0
  5098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  5099  00FB9C  07B4               	decf	efgtoa@w& (0+255),f,b
  5100  00FB9E  A0D8               	btfss	status,0,c
  5101  00FBA0  07B5               	decf	(efgtoa@w+1)& (0+255),f,b
  5102  00FBA2                     l4286:
  5103                           
  5104                           ; BSR set to: 0
  5105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  5106  00FBA2  C0B8  F01A         	movff	efgtoa@h,___flsub@b
  5107  00FBA6  C0B9  F01B         	movff	efgtoa@h+1,___flsub@b+1
  5108  00FBAA  C0BA  F01C         	movff	efgtoa@h+2,___flsub@b+2
  5109  00FBAE  C0BB  F01D         	movff	efgtoa@h+3,___flsub@b+3
  5110  00FBB2  C0CA  F005         	movff	efgtoa@u,___flmul@a
  5111  00FBB6  C0CB  F006         	movff	efgtoa@u+1,___flmul@a+1
  5112  00FBBA  C0CC  F007         	movff	efgtoa@u+2,___flmul@a+2
  5113  00FBBE  C0CD  F008         	movff	efgtoa@u+3,___flmul@a+3
  5114  00FBC2  C0BC  F001         	movff	efgtoa@l,___flmul@b
  5115  00FBC6  C0BD  F002         	movff	efgtoa@l+1,___flmul@b+1
  5116  00FBCA  C0BE  F003         	movff	efgtoa@l+2,___flmul@b+2
  5117  00FBCE  C0BF  F004         	movff	efgtoa@l+3,___flmul@b+3
  5118  00FBD2  EC1A  F070         	call	___flmul	;wreg free
  5119  00FBD6  C001  F01E         	movff	?___flmul,___flsub@a
  5120  00FBDA  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  5121  00FBDE  C003  F020         	movff	?___flmul+2,___flsub@a+2
  5122  00FBE2  C004  F021         	movff	?___flmul+3,___flsub@a+3
  5123  00FBE6  ECA5  F061         	call	___flsub	;wreg free
  5124  00FBEA  C01A  F0B8         	movff	?___flsub,efgtoa@h
  5125  00FBEE  C01B  F0B9         	movff	?___flsub+1,efgtoa@h+1
  5126  00FBF2  C01C  F0BA         	movff	?___flsub+2,efgtoa@h+2
  5127  00FBF6  C01D  F0BB         	movff	?___flsub+3,efgtoa@h+3
  5128  00FBFA                     
  5129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  5130  00FBFA  C0CA  F001         	movff	efgtoa@u,___fldiv@b
  5131  00FBFE  C0CB  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5132  00FC02  C0CC  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5133  00FC06  C0CD  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5134  00FC0A  0E00               	movlw	0
  5135  00FC0C  6E05               	movwf	___fldiv@a^0,c
  5136  00FC0E  0E00               	movlw	0
  5137  00FC10  6E06               	movwf	(___fldiv@a+1)^0,c
  5138  00FC12  0E20               	movlw	32
  5139  00FC14  6E07               	movwf	(___fldiv@a+2)^0,c
  5140  00FC16  0E41               	movlw	65
  5141  00FC18  6E08               	movwf	(___fldiv@a+3)^0,c
  5142  00FC1A  EC4D  F06E         	call	___fldiv	;wreg free
  5143  00FC1E  C001  F0CA         	movff	?___fldiv,efgtoa@u
  5144  00FC22  C002  F0CB         	movff	?___fldiv+1,efgtoa@u+1
  5145  00FC26  C003  F0CC         	movff	?___fldiv+2,efgtoa@u+2
  5146  00FC2A  C004  F0CD         	movff	?___fldiv+3,efgtoa@u+3
  5147  00FC2E                     
  5148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  5149  00FC2E  0100               	movlb	0	; () banked
  5150  00FC30  07A6               	decf	efgtoa@ne& (0+255),f,b
  5151  00FC32  A0D8               	btfss	status,0,c
  5152  00FC34  07A7               	decf	(efgtoa@ne+1)& (0+255),f,b
  5153  00FC36                     
  5154                           ; BSR set to: 0
  5155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  5156  00FC36  4BC0               	infsnz	efgtoa@i& (0+255),f,b
  5157  00FC38  2BC1               	incf	(efgtoa@i+1)& (0+255),f,b
  5158  00FC3A                     l4294:
  5159                           
  5160                           ; BSR set to: 0
  5161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5162  00FC3A  51A8               	movf	efgtoa@m& (0+255),w,b
  5163  00FC3C  5DC0               	subwf	efgtoa@i& (0+255),w,b
  5164  00FC3E  51C1               	movf	(efgtoa@i+1)& (0+255),w,b
  5165  00FC40  0A80               	xorlw	128
  5166  00FC42  6E35               	movwf	??_efgtoa^0,c
  5167  00FC44  51A9               	movf	(efgtoa@m+1)& (0+255),w,b
  5168  00FC46  0A80               	xorlw	128
  5169  00FC48  5835               	subwfb	??_efgtoa^0,w,c
  5170  00FC4A  B0D8               	btfsc	status,0,c
  5171  00FC4C  EF2A  F07E         	goto	u5561
  5172  00FC50  EF2C  F07E         	goto	u5560
  5173  00FC54                     u5561:
  5174  00FC54  EF3A  F07E         	goto	l4298
  5175  00FC58                     u5560:
  5176  00FC58                     
  5177                           ; BSR set to: 0
  5178  00FC58  BFC9               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5179  00FC5A  EF38  F07E         	goto	u5571
  5180  00FC5E  51C9               	movf	(efgtoa@n+1)& (0+255),w,b
  5181  00FC60  E109               	bnz	u5570
  5182  00FC62  0E4B               	movlw	75
  5183  00FC64  5DC8               	subwf	efgtoa@n& (0+255),w,b
  5184  00FC66  A0D8               	btfss	status,0,c
  5185  00FC68  EF38  F07E         	goto	u5571
  5186  00FC6C  EF3A  F07E         	goto	u5570
  5187  00FC70                     u5571:
  5188  00FC70  EF2F  F07D         	goto	l4246
  5189  00FC74                     u5570:
  5190  00FC74                     l4298:
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5194  00FC74  51A4               	movf	efgtoa@pp& (0+255),w,b
  5195  00FC76  11A5               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5196  00FC78  A4D8               	btfss	status,2,c
  5197  00FC7A  EF41  F07E         	goto	u5581
  5198  00FC7E  EF43  F07E         	goto	u5580
  5199  00FC82                     u5581:
  5200  00FC82  EF54  F07E         	goto	l4306
  5201  00FC86                     u5580:
  5202  00FC86                     
  5203                           ; BSR set to: 0
  5204  00FC86  A87C               	btfss	_flags^0,4,c
  5205  00FC88  EF48  F07E         	goto	u5591
  5206  00FC8C  EF4A  F07E         	goto	u5590
  5207  00FC90                     u5591:
  5208  00FC90  EF54  F07E         	goto	l4306
  5209  00FC94                     u5590:
  5210  00FC94                     
  5211                           ; BSR set to: 0
  5212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  5213  00FC94  0E00               	movlw	low _dbuf
  5214  00FC96  25C8               	addwf	efgtoa@n& (0+255),w,b
  5215  00FC98  6ED9               	movwf	fsr2l,c
  5216  00FC9A  0E01               	movlw	high _dbuf
  5217  00FC9C  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5218  00FC9E  6EDA               	movwf	fsr2h,c
  5219  00FCA0  0E2E               	movlw	46
  5220  00FCA2  6EDF               	movwf	indf2,c
  5221  00FCA4                     
  5222                           ; BSR set to: 0
  5223  00FCA4  4BC8               	infsnz	efgtoa@n& (0+255),f,b
  5224  00FCA6  2BC9               	incf	(efgtoa@n+1)& (0+255),f,b
  5225  00FCA8                     l4306:
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  5229  00FCA8  0E00               	movlw	low _dbuf
  5230  00FCAA  25C8               	addwf	efgtoa@n& (0+255),w,b
  5231  00FCAC  6ED9               	movwf	fsr2l,c
  5232  00FCAE  0E01               	movlw	high _dbuf
  5233  00FCB0  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5234  00FCB2  6EDA               	movwf	fsr2h,c
  5235  00FCB4  0E00               	movlw	0
  5236  00FCB6  6EDF               	movwf	indf2,c
  5237  00FCB8                     
  5238                           ; BSR set to: 0
  5239                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  5240  00FCB8  0E65               	movlw	101
  5241  00FCBA  19B6               	xorwf	efgtoa@nmode& (0+255),w,b
  5242  00FCBC  A4D8               	btfss	status,2,c
  5243  00FCBE  EF63  F07E         	goto	u5601
  5244  00FCC2  EF65  F07E         	goto	u5600
  5245  00FCC6                     u5601:
  5246  00FCC6  EFBE  F079         	goto	l4108
  5247  00FCCA                     u5600:
  5248  00FCCA                     
  5249                           ; BSR set to: 0
  5250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  5251  00FCCA  0E00               	movlw	0
  5252  00FCCC  6FC1               	movwf	(efgtoa@i+1)& (0+255),b
  5253  00FCCE  0E4F               	movlw	79
  5254  00FCD0  6FC0               	movwf	efgtoa@i& (0+255),b
  5255  00FCD2                     
  5256                           ; BSR set to: 0
  5257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  5258  00FCD2  0E00               	movlw	low _dbuf
  5259  00FCD4  25C0               	addwf	efgtoa@i& (0+255),w,b
  5260  00FCD6  6ED9               	movwf	fsr2l,c
  5261  00FCD8  0E01               	movlw	high _dbuf
  5262  00FCDA  21C1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5263  00FCDC  6EDA               	movwf	fsr2h,c
  5264  00FCDE  0E00               	movlw	0
  5265  00FCE0  6EDF               	movwf	indf2,c
  5266  00FCE2                     
  5267                           ; BSR set to: 0
  5268                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  5269  00FCE2  0E00               	movlw	0
  5270  00FCE4  6FB1               	movwf	(efgtoa@sign+1)& (0+255),b
  5271  00FCE6  0E00               	movlw	0
  5272  00FCE8  6FB0               	movwf	efgtoa@sign& (0+255),b
  5273  00FCEA                     
  5274                           ; BSR set to: 0
  5275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  5276  00FCEA  BFC7               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5277  00FCEC  EF7C  F07E         	goto	u5610
  5278  00FCF0  EF7A  F07E         	goto	u5611
  5279  00FCF4                     u5611:
  5280  00FCF4  EF84  F07E         	goto	l4322
  5281  00FCF8                     u5610:
  5282  00FCF8                     
  5283                           ; BSR set to: 0
  5284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  5285  00FCF8  0E00               	movlw	0
  5286  00FCFA  6FB1               	movwf	(efgtoa@sign+1)& (0+255),b
  5287  00FCFC  0E01               	movlw	1
  5288  00FCFE  6FB0               	movwf	efgtoa@sign& (0+255),b
  5289  00FD00                     
  5290                           ; BSR set to: 0
  5291                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  5292  00FD00  6DC6               	negf	efgtoa@e& (0+255),b
  5293  00FD02  1FC7               	comf	(efgtoa@e+1)& (0+255),f,b
  5294  00FD04  B0D8               	btfsc	status,0,c
  5295  00FD06  2BC7               	incf	(efgtoa@e+1)& (0+255),f,b
  5296  00FD08                     l4322:
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  5300  00FD08  0E00               	movlw	0
  5301  00FD0A  6FB3               	movwf	(efgtoa@p+1)& (0+255),b
  5302  00FD0C  0E02               	movlw	2
  5303  00FD0E  6FB2               	movwf	efgtoa@p& (0+255),b
  5304                           
  5305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5306  00FD10  EFB5  F07E         	goto	l4334
  5307  00FD14                     l4324:
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  5311  00FD14  07C0               	decf	efgtoa@i& (0+255),f,b
  5312  00FD16  A0D8               	btfss	status,0,c
  5313  00FD18  07C1               	decf	(efgtoa@i+1)& (0+255),f,b
  5314  00FD1A                     
  5315                           ; BSR set to: 0
  5316                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  5317  00FD1A  0E00               	movlw	low _dbuf
  5318  00FD1C  25C0               	addwf	efgtoa@i& (0+255),w,b
  5319  00FD1E  6ED9               	movwf	fsr2l,c
  5320  00FD20  0E01               	movlw	high _dbuf
  5321  00FD22  21C1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5322  00FD24  6EDA               	movwf	fsr2h,c
  5323  00FD26  C0C6  F001         	movff	efgtoa@e,___awmod@dividend
  5324  00FD2A  C0C7  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  5325  00FD2E  0E00               	movlw	0
  5326  00FD30  6E04               	movwf	(___awmod@divisor+1)^0,c
  5327  00FD32  0E0A               	movlw	10
  5328  00FD34  6E03               	movwf	___awmod@divisor^0,c
  5329  00FD36  EC5F  F063         	call	___awmod	;wreg free
  5330  00FD3A  5001               	movf	?___awmod^0,w,c
  5331  00FD3C  0F30               	addlw	48
  5332  00FD3E  6EDF               	movwf	indf2,c
  5333  00FD40                     
  5334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  5335  00FD40  C0C6  F001         	movff	efgtoa@e,___awdiv@dividend
  5336  00FD44  C0C7  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  5337  00FD48  0E00               	movlw	0
  5338  00FD4A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5339  00FD4C  0E0A               	movlw	10
  5340  00FD4E  6E03               	movwf	___awdiv@divisor^0,c
  5341  00FD50  EC18  F064         	call	___awdiv	;wreg free
  5342  00FD54  C001  F0C6         	movff	?___awdiv,efgtoa@e
  5343  00FD58  C002  F0C7         	movff	?___awdiv+1,efgtoa@e+1
  5344  00FD5C                     
  5345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  5346  00FD5C  0100               	movlb	0	; () banked
  5347  00FD5E  07B2               	decf	efgtoa@p& (0+255),f,b
  5348  00FD60  A0D8               	btfss	status,0,c
  5349  00FD62  07B3               	decf	(efgtoa@p+1)& (0+255),f,b
  5350  00FD64                     
  5351                           ; BSR set to: 0
  5352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  5353  00FD64  07B4               	decf	efgtoa@w& (0+255),f,b
  5354  00FD66  A0D8               	btfss	status,0,c
  5355  00FD68  07B5               	decf	(efgtoa@w+1)& (0+255),f,b
  5356  00FD6A                     l4334:
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  5360  00FD6A  51C6               	movf	efgtoa@e& (0+255),w,b
  5361  00FD6C  11C7               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5362  00FD6E  A4D8               	btfss	status,2,c
  5363  00FD70  EFBC  F07E         	goto	u5621
  5364  00FD74  EFBE  F07E         	goto	u5620
  5365  00FD78                     u5621:
  5366  00FD78  EF8A  F07E         	goto	l4324
  5367  00FD7C                     u5620:
  5368  00FD7C                     
  5369                           ; BSR set to: 0
  5370  00FD7C  BFB3               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5371  00FD7E  EFCB  F07E         	goto	u5630
  5372  00FD82  51B3               	movf	(efgtoa@p+1)& (0+255),w,b
  5373  00FD84  E106               	bnz	u5631
  5374  00FD86  05B2               	decf	efgtoa@p& (0+255),w,b
  5375  00FD88  B0D8               	btfsc	status,0,c
  5376  00FD8A  EFC9  F07E         	goto	u5631
  5377  00FD8E  EFCB  F07E         	goto	u5630
  5378  00FD92                     u5631:
  5379  00FD92  EF8A  F07E         	goto	l4324
  5380  00FD96                     u5630:
  5381  00FD96                     
  5382                           ; BSR set to: 0
  5383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  5384  00FD96  07C0               	decf	efgtoa@i& (0+255),f,b
  5385  00FD98  A0D8               	btfss	status,0,c
  5386  00FD9A  07C1               	decf	(efgtoa@i+1)& (0+255),f,b
  5387  00FD9C                     
  5388                           ; BSR set to: 0
  5389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  5390  00FD9C  51B0               	movf	efgtoa@sign& (0+255),w,b
  5391  00FD9E  11B1               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5392  00FDA0  A4D8               	btfss	status,2,c
  5393  00FDA2  EFD5  F07E         	goto	u5641
  5394  00FDA6  EFD7  F07E         	goto	u5640
  5395  00FDAA                     u5641:
  5396  00FDAA  EFDD  F07E         	goto	l4344
  5397  00FDAE                     u5640:
  5398  00FDAE                     
  5399                           ; BSR set to: 0
  5400  00FDAE  0E00               	movlw	0
  5401  00FDB0  6F9D               	movwf	(_efgtoa$1060+1)& (0+255),b
  5402  00FDB2  0E2B               	movlw	43
  5403  00FDB4  6F9C               	movwf	_efgtoa$1060& (0+255),b
  5404  00FDB6  EFE1  F07E         	goto	l4346
  5405  00FDBA                     l4344:
  5406                           
  5407                           ; BSR set to: 0
  5408  00FDBA  0E00               	movlw	0
  5409  00FDBC  6F9D               	movwf	(_efgtoa$1060+1)& (0+255),b
  5410  00FDBE  0E2D               	movlw	45
  5411  00FDC0  6F9C               	movwf	_efgtoa$1060& (0+255),b
  5412  00FDC2                     l4346:
  5413                           
  5414                           ; BSR set to: 0
  5415  00FDC2  0E00               	movlw	low _dbuf
  5416  00FDC4  25C0               	addwf	efgtoa@i& (0+255),w,b
  5417  00FDC6  6ED9               	movwf	fsr2l,c
  5418  00FDC8  0E01               	movlw	high _dbuf
  5419  00FDCA  21C1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5420  00FDCC  6EDA               	movwf	fsr2h,c
  5421  00FDCE  C09C  FFDF         	movff	_efgtoa$1060,indf2
  5422  00FDD2                     
  5423                           ; BSR set to: 0
  5424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  5425  00FDD2  07B4               	decf	efgtoa@w& (0+255),f,b
  5426  00FDD4  A0D8               	btfss	status,0,c
  5427  00FDD6  07B5               	decf	(efgtoa@w+1)& (0+255),f,b
  5428  00FDD8                     
  5429                           ; BSR set to: 0
  5430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5431  00FDD8  07C0               	decf	efgtoa@i& (0+255),f,b
  5432  00FDDA  A0D8               	btfss	status,0,c
  5433  00FDDC  07C1               	decf	(efgtoa@i+1)& (0+255),f,b
  5434  00FDDE                     
  5435                           ; BSR set to: 0
  5436  00FDDE  0EBF               	movlw	191
  5437  00FDE0  6E35               	movwf	??_efgtoa^0,c
  5438  00FDE2  0EFF               	movlw	255
  5439  00FDE4  6E36               	movwf	(??_efgtoa+1)^0,c
  5440  00FDE6  5034               	movf	efgtoa@c^0,w,c
  5441  00FDE8  6E37               	movwf	(??_efgtoa+2)^0,c
  5442  00FDEA  6A38               	clrf	(??_efgtoa+3)^0,c
  5443  00FDEC  5035               	movf	??_efgtoa^0,w,c
  5444  00FDEE  2637               	addwf	(??_efgtoa+2)^0,f,c
  5445  00FDF0  5036               	movf	(??_efgtoa+1)^0,w,c
  5446  00FDF2  2238               	addwfc	(??_efgtoa+3)^0,f,c
  5447  00FDF4  5038               	movf	(??_efgtoa+3)^0,w,c
  5448  00FDF6  E10A               	bnz	u5650
  5449  00FDF8  0E1A               	movlw	26
  5450  00FDFA  5C37               	subwf	(??_efgtoa+2)^0,w,c
  5451  00FDFC  A0D8               	btfss	status,0,c
  5452  00FDFE  EF03  F07F         	goto	u5651
  5453  00FE02  EF06  F07F         	goto	u5650
  5454  00FE06                     u5651:
  5455  00FE06  0E01               	movlw	1
  5456  00FE08  EF07  F07F         	goto	u5660
  5457  00FE0C                     u5650:
  5458  00FE0C  0E00               	movlw	0
  5459  00FE0E                     u5660:
  5460  00FE0E  6FA0               	movwf	_efgtoa$1062& (0+255),b
  5461  00FE10  6BA1               	clrf	(_efgtoa$1062+1)& (0+255),b
  5462  00FE12                     
  5463                           ; BSR set to: 0
  5464  00FE12  51A0               	movf	_efgtoa$1062& (0+255),w,b
  5465  00FE14  11A1               	iorwf	(_efgtoa$1062+1)& (0+255),w,b
  5466  00FE16  A4D8               	btfss	status,2,c
  5467  00FE18  EF10  F07F         	goto	u5671
  5468  00FE1C  EF12  F07F         	goto	u5670
  5469  00FE20                     u5671:
  5470  00FE20  EF18  F07F         	goto	l4360
  5471  00FE24                     u5670:
  5472  00FE24                     
  5473                           ; BSR set to: 0
  5474  00FE24  0E00               	movlw	0
  5475  00FE26  6F9F               	movwf	(_efgtoa$1061+1)& (0+255),b
  5476  00FE28  0E65               	movlw	101
  5477  00FE2A  6F9E               	movwf	_efgtoa$1061& (0+255),b
  5478  00FE2C  EF1C  F07F         	goto	l4362
  5479  00FE30                     l4360:
  5480                           
  5481                           ; BSR set to: 0
  5482  00FE30  0E00               	movlw	0
  5483  00FE32  6F9F               	movwf	(_efgtoa$1061+1)& (0+255),b
  5484  00FE34  0E45               	movlw	69
  5485  00FE36  6F9E               	movwf	_efgtoa$1061& (0+255),b
  5486  00FE38                     l4362:
  5487                           
  5488                           ; BSR set to: 0
  5489  00FE38  0E00               	movlw	low _dbuf
  5490  00FE3A  25C0               	addwf	efgtoa@i& (0+255),w,b
  5491  00FE3C  6ED9               	movwf	fsr2l,c
  5492  00FE3E  0E01               	movlw	high _dbuf
  5493  00FE40  21C1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5494  00FE42  6EDA               	movwf	fsr2h,c
  5495  00FE44  C09E  FFDF         	movff	_efgtoa$1061,indf2
  5496  00FE48                     
  5497                           ; BSR set to: 0
  5498                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  5499  00FE48  07B4               	decf	efgtoa@w& (0+255),f,b
  5500  00FE4A  A0D8               	btfss	status,0,c
  5501  00FE4C  07B5               	decf	(efgtoa@w+1)& (0+255),f,b
  5502  00FE4E                     
  5503                           ; BSR set to: 0
  5504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  5505  00FE4E  0E00               	movlw	low _dbuf
  5506  00FE50  25C8               	addwf	efgtoa@n& (0+255),w,b
  5507  00FE52  6E01               	movwf	strcpy@dest^0,c
  5508  00FE54  0E01               	movlw	high _dbuf
  5509  00FE56  21C9               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5510  00FE58  6E02               	movwf	(strcpy@dest+1)^0,c
  5511  00FE5A  0E00               	movlw	low _dbuf
  5512  00FE5C  25C0               	addwf	efgtoa@i& (0+255),w,b
  5513  00FE5E  6E03               	movwf	strcpy@src^0,c
  5514  00FE60  0E01               	movlw	high _dbuf
  5515  00FE62  21C1               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5516  00FE64  6E04               	movwf	(strcpy@src+1)^0,c
  5517  00FE66  EC1A  F062         	call	_strcpy	;wreg free
  5518  00FE6A  EFBE  F079         	goto	l4108
  5519  00FE6E                     l923:
  5520  00FE6E  0012               	return		;funcret
  5521  00FE70                     __end_of_efgtoa:
  5522                           	callstack 0
  5523                           
  5524 ;; *************** function _tolower *****************
  5525 ;; Defined at:
  5526 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  c               2    6[COMRAM] int 
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;		None
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  2    6[COMRAM] int 
  5533 ;; Registers used:
  5534 ;;		wreg, status,2, status,0
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  5540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5542 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5543 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5544 ;;Total ram usage:        8 bytes
  5545 ;; Hardware stack levels used: 1
  5546 ;; Hardware stack levels required when called: 1
  5547 ;; This function calls:
  5548 ;;		_isupper
  5549 ;; This function is called by:
  5550 ;;		_efgtoa
  5551 ;;		_vfpfcnvrt
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text10
  5556  00C4F0                     __ptext10:
  5557                           	callstack 0
  5558  00C4F0                     _tolower:
  5559                           	callstack 26
  5560  00C4F0  0EBF               	movlw	191
  5561  00C4F2  6E09               	movwf	??_tolower^0,c
  5562  00C4F4  0EFF               	movlw	255
  5563  00C4F6  6E0A               	movwf	(??_tolower+1)^0,c
  5564  00C4F8  C007  F00B         	movff	tolower@c,??_tolower+2
  5565  00C4FC  C008  F00C         	movff	tolower@c+1,??_tolower+3
  5566  00C500  5009               	movf	??_tolower^0,w,c
  5567  00C502  260B               	addwf	(??_tolower+2)^0,f,c
  5568  00C504  500A               	movf	(??_tolower+1)^0,w,c
  5569  00C506  220C               	addwfc	(??_tolower+3)^0,f,c
  5570  00C508  500C               	movf	(??_tolower+3)^0,w,c
  5571  00C50A  E10A               	bnz	u4720
  5572  00C50C  0E1A               	movlw	26
  5573  00C50E  5C0B               	subwf	(??_tolower+2)^0,w,c
  5574  00C510  A0D8               	btfss	status,0,c
  5575  00C512  EF8D  F062         	goto	u4721
  5576  00C516  EF90  F062         	goto	u4720
  5577  00C51A                     u4721:
  5578  00C51A  0E01               	movlw	1
  5579  00C51C  EF91  F062         	goto	u4730
  5580  00C520                     u4720:
  5581  00C520  0E00               	movlw	0
  5582  00C522                     u4730:
  5583  00C522  6E0D               	movwf	_tolower$1252^0,c
  5584  00C524  6A0E               	clrf	(_tolower$1252+1)^0,c
  5585  00C526  500D               	movf	_tolower$1252^0,w,c
  5586  00C528  100E               	iorwf	(_tolower$1252+1)^0,w,c
  5587  00C52A  B4D8               	btfsc	status,2,c
  5588  00C52C  EF9A  F062         	goto	u4741
  5589  00C530  EF9C  F062         	goto	u4740
  5590  00C534                     u4741:
  5591  00C534  EFA3  F062         	goto	l1221
  5592  00C538                     u4740:
  5593  00C538  0E20               	movlw	32
  5594  00C53A  1007               	iorwf	tolower@c^0,w,c
  5595  00C53C  6E07               	movwf	?_tolower^0,c
  5596  00C53E  5008               	movf	(tolower@c+1)^0,w,c
  5597  00C540  6E08               	movwf	(?_tolower+1)^0,c
  5598  00C542  EFA7  F062         	goto	l1226
  5599  00C546                     l1221:
  5600  00C546  C007  F007         	movff	tolower@c,?_tolower
  5601  00C54A  C008  F008         	movff	tolower@c+1,?_tolower+1
  5602  00C54E                     l1226:
  5603  00C54E  0012               	return		;funcret
  5604  00C550                     __end_of_tolower:
  5605                           	callstack 0
  5606                           
  5607 ;; *************** function _isupper *****************
  5608 ;; Defined at:
  5609 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  c               2    0[COMRAM] int 
  5612 ;; Auto vars:     Size  Location     Type
  5613 ;;		None
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  2    0[COMRAM] int 
  5616 ;; Registers used:
  5617 ;;		wreg, status,2, status,0
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  5623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5625 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5626 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5627 ;;Total ram usage:        6 bytes
  5628 ;; Hardware stack levels used: 1
  5629 ;; This function calls:
  5630 ;;		Nothing
  5631 ;; This function is called by:
  5632 ;;		_efgtoa
  5633 ;;		_xtoa
  5634 ;;		_vfpfcnvrt
  5635 ;;		_tolower
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           	psect	text11
  5640  00C1D8                     __ptext11:
  5641                           	callstack 0
  5642  00C1D8                     _isupper:
  5643                           	callstack 26
  5644  00C1D8  0EBF               	movlw	191
  5645  00C1DA  6E03               	movwf	??_isupper^0,c
  5646  00C1DC  0EFF               	movlw	255
  5647  00C1DE  6E04               	movwf	(??_isupper+1)^0,c
  5648  00C1E0  C001  F005         	movff	isupper@c,??_isupper+2
  5649  00C1E4  C002  F006         	movff	isupper@c+1,??_isupper+3
  5650  00C1E8  5003               	movf	??_isupper^0,w,c
  5651  00C1EA  2605               	addwf	(??_isupper+2)^0,f,c
  5652  00C1EC  5004               	movf	(??_isupper+1)^0,w,c
  5653  00C1EE  2206               	addwfc	(??_isupper+3)^0,f,c
  5654  00C1F0  5006               	movf	(??_isupper+3)^0,w,c
  5655  00C1F2  E10A               	bnz	u3710
  5656  00C1F4  0E1A               	movlw	26
  5657  00C1F6  5C05               	subwf	(??_isupper+2)^0,w,c
  5658  00C1F8  A0D8               	btfss	status,0,c
  5659  00C1FA  EF01  F061         	goto	u3711
  5660  00C1FE  EF04  F061         	goto	u3710
  5661  00C202                     u3711:
  5662  00C202  0E01               	movlw	1
  5663  00C204  EF05  F061         	goto	u3720
  5664  00C208                     u3710:
  5665  00C208  0E00               	movlw	0
  5666  00C20A                     u3720:
  5667  00C20A  6E01               	movwf	?_isupper^0,c
  5668  00C20C  6A02               	clrf	(?_isupper+1)^0,c
  5669  00C20E  0012               	return		;funcret
  5670  00C210                     __end_of_isupper:
  5671                           	callstack 0
  5672                           
  5673 ;; *************** function _strcpy *****************
  5674 ;; Defined at:
  5675 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5678 ;;		 -> dbuf(80), 
  5679 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5680 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  5681 ;;		 -> dbuf(80), 
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;  d               2    8[COMRAM] PTR unsigned char 
  5684 ;;		 -> dbuf(80), 
  5685 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5686 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  5687 ;;		 -> dbuf(80), 
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  2    0[COMRAM] PTR unsigned char 
  5690 ;; Registers used:
  5691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  5697 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5698 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5699 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5700 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5701 ;;Total ram usage:       10 bytes
  5702 ;; Hardware stack levels used: 1
  5703 ;; This function calls:
  5704 ;;		Nothing
  5705 ;; This function is called by:
  5706 ;;		_efgtoa
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	text12
  5711  00C434                     __ptext12:
  5712                           	callstack 0
  5713  00C434                     _strcpy:
  5714                           	callstack 26
  5715  00C434  C003  F007         	movff	strcpy@src,strcpy@s
  5716  00C438  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5717  00C43C  C001  F009         	movff	strcpy@dest,strcpy@d
  5718  00C440  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5719  00C444                     l3904:
  5720  00C444  5007               	movf	strcpy@s^0,w,c
  5721  00C446  6E05               	movwf	??_strcpy^0,c
  5722  00C448  5008               	movf	(strcpy@s+1)^0,w,c
  5723  00C44A  6E06               	movwf	(??_strcpy+1)^0,c
  5724  00C44C  4A07               	infsnz	strcpy@s^0,f,c
  5725  00C44E  2A08               	incf	(strcpy@s+1)^0,f,c
  5726  00C450  C005  FFF6         	movff	??_strcpy,tblptrl
  5727  00C454  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5728  00C458  0E00               	movlw	low (__mediumconst shr (0+16))
  5729  00C45A  6EF8               	movwf	tblptru,c
  5730  00C45C  C009  FFD9         	movff	strcpy@d,fsr2l
  5731  00C460  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5732  00C464  4A09               	infsnz	strcpy@d^0,f,c
  5733  00C466  2A0A               	incf	(strcpy@d+1)^0,f,c
  5734  00C468  0E0F               	movlw	(high __ramtop+-1)
  5735  00C46A  64F7               	cpfsgt	tblptrh,c
  5736  00C46C  D003               	bra	u4707
  5737  00C46E  0008               	tblrd		*
  5738  00C470  50F5               	movf	tablat,w,c
  5739  00C472  D005               	bra	u4700
  5740  00C474                     u4707:
  5741  00C474  CFF6 FFE1          	movff	tblptrl,fsr1l
  5742  00C478  CFF7 FFE2          	movff	tblptrh,fsr1h
  5743  00C47C  50E7               	movf	indf1,w,c
  5744  00C47E                     u4700:
  5745  00C47E  6EDF               	movwf	indf2,c
  5746  00C480  50DF               	movf	indf2,w,c
  5747  00C482  A4D8               	btfss	status,2,c
  5748  00C484  EF46  F062         	goto	u4711
  5749  00C488  EF48  F062         	goto	u4710
  5750  00C48C                     u4711:
  5751  00C48C  EF22  F062         	goto	l3904
  5752  00C490                     u4710:
  5753  00C490  0012               	return		;funcret
  5754  00C492                     __end_of_strcpy:
  5755                           	callstack 0
  5756                           
  5757 ;; *************** function _floorf *****************
  5758 ;; Defined at:
  5759 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;  x               4   25[COMRAM] float 
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;  u               4   41[COMRAM] struct .
  5764 ;;  m               4   35[COMRAM] unsigned long 
  5765 ;;  e               2   39[COMRAM] int 
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  4   25[COMRAM] float 
  5768 ;; Registers used:
  5769 ;;		wreg, status,2, status,0
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  5775 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5776 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5777 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5778 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  5779 ;;Total ram usage:       20 bytes
  5780 ;; Hardware stack levels used: 1
  5781 ;; This function calls:
  5782 ;;		Nothing
  5783 ;; This function is called by:
  5784 ;;		_efgtoa
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           	psect	text13
  5789  00D4D2                     __ptext13:
  5790                           	callstack 0
  5791  00D4D2                     _floorf:
  5792                           	callstack 26
  5793  00D4D2  C0F0  F02A         	movff	floorf@F527,floorf@u
  5794  00D4D6  C0F1  F02B         	movff	floorf@F527+1,floorf@u+1
  5795  00D4DA  C0F2  F02C         	movff	floorf@F527+2,floorf@u+2
  5796  00D4DE  C0F3  F02D         	movff	floorf@F527+3,floorf@u+3
  5797  00D4E2  C01A  F02A         	movff	floorf@x,floorf@u
  5798  00D4E6  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  5799  00D4EA  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  5800  00D4EE  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  5801  00D4F2  0E81               	movlw	129
  5802  00D4F4  6E1E               	movwf	??_floorf^0,c
  5803  00D4F6  0EFF               	movlw	255
  5804  00D4F8  6E1F               	movwf	(??_floorf+1)^0,c
  5805  00D4FA  C02A  F020         	movff	floorf@u,??_floorf+2
  5806  00D4FE  C02B  F021         	movff	floorf@u+1,??_floorf+3
  5807  00D502  C02C  F022         	movff	floorf@u+2,??_floorf+4
  5808  00D506  C02D  F023         	movff	floorf@u+3,??_floorf+5
  5809  00D50A  0E18               	movlw	24
  5810  00D50C  EF8D  F06A         	goto	u4750
  5811  00D510                     u4755:
  5812  00D510  90D8               	bcf	status,0,c
  5813  00D512  3223               	rrcf	(??_floorf+5)^0,f,c
  5814  00D514  3222               	rrcf	(??_floorf+4)^0,f,c
  5815  00D516  3221               	rrcf	(??_floorf+3)^0,f,c
  5816  00D518  3220               	rrcf	(??_floorf+2)^0,f,c
  5817  00D51A                     u4750:
  5818  00D51A  2EE8               	decfsz	wreg,f,c
  5819  00D51C  EF88  F06A         	goto	u4755
  5820  00D520  5020               	movf	(??_floorf+2)^0,w,c
  5821  00D522  241E               	addwf	??_floorf^0,w,c
  5822  00D524  6E28               	movwf	floorf@e^0,c
  5823  00D526  0E00               	movlw	0
  5824  00D528  201F               	addwfc	(??_floorf+1)^0,w,c
  5825  00D52A  6E29               	movwf	(floorf@e+1)^0,c
  5826  00D52C  BE29               	btfsc	(floorf@e+1)^0,7,c
  5827  00D52E  EFA2  F06A         	goto	u4761
  5828  00D532  5029               	movf	(floorf@e+1)^0,w,c
  5829  00D534  E109               	bnz	u4760
  5830  00D536  0E17               	movlw	23
  5831  00D538  5C28               	subwf	floorf@e^0,w,c
  5832  00D53A  A0D8               	btfss	status,0,c
  5833  00D53C  EFA2  F06A         	goto	u4761
  5834  00D540  EFA4  F06A         	goto	u4760
  5835  00D544                     u4761:
  5836  00D544  EFAE  F06A         	goto	l3922
  5837  00D548                     u4760:
  5838  00D548                     l3920:
  5839  00D548  C01A  F01A         	movff	floorf@x,?_floorf
  5840  00D54C  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  5841  00D550  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  5842  00D554  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  5843  00D558  EF71  F06B         	goto	l1139
  5844  00D55C                     l3922:
  5845  00D55C  BE29               	btfsc	(floorf@e+1)^0,7,c
  5846  00D55E  EFB3  F06A         	goto	u4771
  5847  00D562  EFB5  F06A         	goto	u4770
  5848  00D566                     u4771:
  5849  00D566  EF25  F06B         	goto	l3932
  5850  00D56A                     u4770:
  5851  00D56A  C028  F01E         	movff	floorf@e,??_floorf
  5852  00D56E  0EFF               	movlw	255
  5853  00D570  6E1F               	movwf	(??_floorf+1)^0,c
  5854  00D572  0EFF               	movlw	255
  5855  00D574  6E20               	movwf	(??_floorf+2)^0,c
  5856  00D576  0E7F               	movlw	127
  5857  00D578  6E21               	movwf	(??_floorf+3)^0,c
  5858  00D57A  0E00               	movlw	0
  5859  00D57C  6E22               	movwf	(??_floorf+4)^0,c
  5860  00D57E                     u4785:
  5861  00D57E  661E               	tstfsz	??_floorf^0,c
  5862  00D580  EFC4  F06A         	goto	u4786
  5863  00D584  EFCC  F06A         	goto	u4787
  5864  00D588                     u4786:
  5865  00D588  3422               	rlcf	(??_floorf+4)^0,w,c
  5866  00D58A  3222               	rrcf	(??_floorf+4)^0,f,c
  5867  00D58C  3221               	rrcf	(??_floorf+3)^0,f,c
  5868  00D58E  3220               	rrcf	(??_floorf+2)^0,f,c
  5869  00D590  321F               	rrcf	(??_floorf+1)^0,f,c
  5870  00D592  2E1E               	decfsz	??_floorf^0,f,c
  5871  00D594  EFBF  F06A         	goto	u4785
  5872  00D598                     u4787:
  5873  00D598  C01F  F024         	movff	??_floorf+1,floorf@m
  5874  00D59C  C020  F025         	movff	??_floorf+2,floorf@m+1
  5875  00D5A0  C021  F026         	movff	??_floorf+3,floorf@m+2
  5876  00D5A4  C022  F027         	movff	??_floorf+4,floorf@m+3
  5877  00D5A8  5024               	movf	floorf@m^0,w,c
  5878  00D5AA  142A               	andwf	floorf@u^0,w,c
  5879  00D5AC  6E1E               	movwf	??_floorf^0,c
  5880  00D5AE  5025               	movf	(floorf@m+1)^0,w,c
  5881  00D5B0  142B               	andwf	(floorf@u+1)^0,w,c
  5882  00D5B2  6E1F               	movwf	(??_floorf+1)^0,c
  5883  00D5B4  5026               	movf	(floorf@m+2)^0,w,c
  5884  00D5B6  142C               	andwf	(floorf@u+2)^0,w,c
  5885  00D5B8  6E20               	movwf	(??_floorf+2)^0,c
  5886  00D5BA  5027               	movf	(floorf@m+3)^0,w,c
  5887  00D5BC  142D               	andwf	(floorf@u+3)^0,w,c
  5888  00D5BE  6E21               	movwf	(??_floorf+3)^0,c
  5889  00D5C0  501E               	movf	??_floorf^0,w,c
  5890  00D5C2  101F               	iorwf	(??_floorf+1)^0,w,c
  5891  00D5C4  1020               	iorwf	(??_floorf+2)^0,w,c
  5892  00D5C6  1021               	iorwf	(??_floorf+3)^0,w,c
  5893  00D5C8  A4D8               	btfss	status,2,c
  5894  00D5CA  EFE9  F06A         	goto	u4791
  5895  00D5CE  EFEB  F06A         	goto	u4790
  5896  00D5D2                     u4791:
  5897  00D5D2  EFED  F06A         	goto	l3928
  5898  00D5D6                     u4790:
  5899  00D5D6  EFA4  F06A         	goto	l3920
  5900  00D5DA                     l3928:
  5901  00D5DA  C02A  F01E         	movff	floorf@u,??_floorf
  5902  00D5DE  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5903  00D5E2  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5904  00D5E6  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5905  00D5EA  0E20               	movlw	32
  5906  00D5EC  EFFD  F06A         	goto	u4800
  5907  00D5F0                     u4805:
  5908  00D5F0  90D8               	bcf	status,0,c
  5909  00D5F2  3221               	rrcf	(??_floorf+3)^0,f,c
  5910  00D5F4  3220               	rrcf	(??_floorf+2)^0,f,c
  5911  00D5F6  321F               	rrcf	(??_floorf+1)^0,f,c
  5912  00D5F8  321E               	rrcf	??_floorf^0,f,c
  5913  00D5FA                     u4800:
  5914  00D5FA  2EE8               	decfsz	wreg,f,c
  5915  00D5FC  EFF8  F06A         	goto	u4805
  5916  00D600  501E               	movf	??_floorf^0,w,c
  5917  00D602  101F               	iorwf	(??_floorf+1)^0,w,c
  5918  00D604  1020               	iorwf	(??_floorf+2)^0,w,c
  5919  00D606  1021               	iorwf	(??_floorf+3)^0,w,c
  5920  00D608  B4D8               	btfsc	status,2,c
  5921  00D60A  EF09  F06B         	goto	u4811
  5922  00D60E  EF0B  F06B         	goto	u4810
  5923  00D612                     u4811:
  5924  00D612  EF13  F06B         	goto	l1142
  5925  00D616                     u4810:
  5926  00D616  5024               	movf	floorf@m^0,w,c
  5927  00D618  262A               	addwf	floorf@u^0,f,c
  5928  00D61A  5025               	movf	(floorf@m+1)^0,w,c
  5929  00D61C  222B               	addwfc	(floorf@u+1)^0,f,c
  5930  00D61E  5026               	movf	(floorf@m+2)^0,w,c
  5931  00D620  222C               	addwfc	(floorf@u+2)^0,f,c
  5932  00D622  5027               	movf	(floorf@m+3)^0,w,c
  5933  00D624  222D               	addwfc	(floorf@u+3)^0,f,c
  5934  00D626                     l1142:
  5935  00D626  1C24               	comf	floorf@m^0,w,c
  5936  00D628  6E1E               	movwf	??_floorf^0,c
  5937  00D62A  1C25               	comf	(floorf@m+1)^0,w,c
  5938  00D62C  6E1F               	movwf	(??_floorf+1)^0,c
  5939  00D62E  1C26               	comf	(floorf@m+2)^0,w,c
  5940  00D630  6E20               	movwf	(??_floorf+2)^0,c
  5941  00D632  1C27               	comf	(floorf@m+3)^0,w,c
  5942  00D634  6E21               	movwf	(??_floorf+3)^0,c
  5943  00D636  501E               	movf	??_floorf^0,w,c
  5944  00D638  162A               	andwf	floorf@u^0,f,c
  5945  00D63A  501F               	movf	(??_floorf+1)^0,w,c
  5946  00D63C  162B               	andwf	(floorf@u+1)^0,f,c
  5947  00D63E  5020               	movf	(??_floorf+2)^0,w,c
  5948  00D640  162C               	andwf	(floorf@u+2)^0,f,c
  5949  00D642  5021               	movf	(??_floorf+3)^0,w,c
  5950  00D644  162D               	andwf	(floorf@u+3)^0,f,c
  5951  00D646  EF69  F06B         	goto	l3940
  5952  00D64A                     l3932:
  5953  00D64A  C02A  F01E         	movff	floorf@u,??_floorf
  5954  00D64E  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5955  00D652  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5956  00D656  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5957  00D65A  0E20               	movlw	32
  5958  00D65C  EF35  F06B         	goto	u4820
  5959  00D660                     u4825:
  5960  00D660  90D8               	bcf	status,0,c
  5961  00D662  3221               	rrcf	(??_floorf+3)^0,f,c
  5962  00D664  3220               	rrcf	(??_floorf+2)^0,f,c
  5963  00D666  321F               	rrcf	(??_floorf+1)^0,f,c
  5964  00D668  321E               	rrcf	??_floorf^0,f,c
  5965  00D66A                     u4820:
  5966  00D66A  2EE8               	decfsz	wreg,f,c
  5967  00D66C  EF30  F06B         	goto	u4825
  5968  00D670  501E               	movf	??_floorf^0,w,c
  5969  00D672  101F               	iorwf	(??_floorf+1)^0,w,c
  5970  00D674  1020               	iorwf	(??_floorf+2)^0,w,c
  5971  00D676  1021               	iorwf	(??_floorf+3)^0,w,c
  5972  00D678  A4D8               	btfss	status,2,c
  5973  00D67A  EF41  F06B         	goto	u4831
  5974  00D67E  EF43  F06B         	goto	u4830
  5975  00D682                     u4831:
  5976  00D682  EF4D  F06B         	goto	l3936
  5977  00D686                     u4830:
  5978  00D686  0E00               	movlw	0
  5979  00D688  6E2A               	movwf	floorf@u^0,c
  5980  00D68A  0E00               	movlw	0
  5981  00D68C  6E2B               	movwf	(floorf@u+1)^0,c
  5982  00D68E  0E00               	movlw	0
  5983  00D690  6E2C               	movwf	(floorf@u+2)^0,c
  5984  00D692  0E00               	movlw	0
  5985  00D694  6E2D               	movwf	(floorf@u+3)^0,c
  5986  00D696  EF69  F06B         	goto	l3940
  5987  00D69A                     l3936:
  5988  00D69A  90D8               	bcf	status,0,c
  5989  00D69C  342A               	rlcf	floorf@u^0,w,c
  5990  00D69E  6E1E               	movwf	??_floorf^0,c
  5991  00D6A0  342B               	rlcf	(floorf@u+1)^0,w,c
  5992  00D6A2  6E1F               	movwf	(??_floorf+1)^0,c
  5993  00D6A4  342C               	rlcf	(floorf@u+2)^0,w,c
  5994  00D6A6  6E20               	movwf	(??_floorf+2)^0,c
  5995  00D6A8  342D               	rlcf	(floorf@u+3)^0,w,c
  5996  00D6AA  6E21               	movwf	(??_floorf+3)^0,c
  5997  00D6AC  501E               	movf	??_floorf^0,w,c
  5998  00D6AE  101F               	iorwf	(??_floorf+1)^0,w,c
  5999  00D6B0  1020               	iorwf	(??_floorf+2)^0,w,c
  6000  00D6B2  1021               	iorwf	(??_floorf+3)^0,w,c
  6001  00D6B4  B4D8               	btfsc	status,2,c
  6002  00D6B6  EF5F  F06B         	goto	u4841
  6003  00D6BA  EF61  F06B         	goto	u4840
  6004  00D6BE                     u4841:
  6005  00D6BE  EF69  F06B         	goto	l3940
  6006  00D6C2                     u4840:
  6007  00D6C2  0E00               	movlw	0
  6008  00D6C4  6E2A               	movwf	floorf@u^0,c
  6009  00D6C6  0E00               	movlw	0
  6010  00D6C8  6E2B               	movwf	(floorf@u+1)^0,c
  6011  00D6CA  0E80               	movlw	128
  6012  00D6CC  6E2C               	movwf	(floorf@u+2)^0,c
  6013  00D6CE  0EBF               	movlw	191
  6014  00D6D0  6E2D               	movwf	(floorf@u+3)^0,c
  6015  00D6D2                     l3940:
  6016  00D6D2  C02A  F01A         	movff	floorf@u,?_floorf
  6017  00D6D6  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  6018  00D6DA  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  6019  00D6DE  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  6020  00D6E2                     l1139:
  6021  00D6E2  0012               	return		;funcret
  6022  00D6E4                     __end_of_floorf:
  6023                           	callstack 0
  6024                           
  6025 ;; *************** function ___fpclassifyf *****************
  6026 ;; Defined at:
  6027 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;  x               4    0[COMRAM] float 
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;  u               4   10[COMRAM] struct .
  6032 ;;  e               2    8[COMRAM] int 
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  2    0[COMRAM] int 
  6035 ;; Registers used:
  6036 ;;		wreg, status,2, status,0
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  6042 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6043 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6044 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6045 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6046 ;;Total ram usage:       14 bytes
  6047 ;; Hardware stack levels used: 1
  6048 ;; This function calls:
  6049 ;;		Nothing
  6050 ;; This function is called by:
  6051 ;;		_efgtoa
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text14
  6056  00CA94                     __ptext14:
  6057                           	callstack 0
  6058  00CA94                     ___fpclassifyf:
  6059                           	callstack 26
  6060  00CA94  C0F4  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  6061  00CA98  C0F5  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  6062  00CA9C  C0F6  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  6063  00CAA0  C0F7  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  6064  00CAA4  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6065  00CAA8  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6066  00CAAC  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6067  00CAB0  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6068  00CAB4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6069  00CAB8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6070  00CABC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6071  00CAC0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6072  00CAC4  0E18               	movlw	24
  6073  00CAC6  EF6A  F065         	goto	u4630
  6074  00CACA                     u4635:
  6075  00CACA  90D8               	bcf	status,0,c
  6076  00CACC  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6077  00CACE  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6078  00CAD0  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6079  00CAD2  3205               	rrcf	??___fpclassifyf^0,f,c
  6080  00CAD4                     u4630:
  6081  00CAD4  2EE8               	decfsz	wreg,f,c
  6082  00CAD6  EF65  F065         	goto	u4635
  6083  00CADA  5005               	movf	??___fpclassifyf^0,w,c
  6084  00CADC  6E09               	movwf	___fpclassifyf@e^0,c
  6085  00CADE  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6086  00CAE0  5009               	movf	___fpclassifyf@e^0,w,c
  6087  00CAE2  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6088  00CAE4  A4D8               	btfss	status,2,c
  6089  00CAE6  EF77  F065         	goto	u4641
  6090  00CAEA  EF79  F065         	goto	u4640
  6091  00CAEE                     u4641:
  6092  00CAEE  EF99  F065         	goto	l3892
  6093  00CAF2                     u4640:
  6094  00CAF2  90D8               	bcf	status,0,c
  6095  00CAF4  340B               	rlcf	___fpclassifyf@u^0,w,c
  6096  00CAF6  6E05               	movwf	??___fpclassifyf^0,c
  6097  00CAF8  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6098  00CAFA  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6099  00CAFC  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6100  00CAFE  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6101  00CB00  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6102  00CB02  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6103  00CB04  5005               	movf	??___fpclassifyf^0,w,c
  6104  00CB06  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6105  00CB08  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6106  00CB0A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6107  00CB0C  A4D8               	btfss	status,2,c
  6108  00CB0E  EF8B  F065         	goto	u4651
  6109  00CB12  EF8D  F065         	goto	u4650
  6110  00CB16                     u4651:
  6111  00CB16  EF93  F065         	goto	l3888
  6112  00CB1A                     u4650:
  6113  00CB1A  0E00               	movlw	0
  6114  00CB1C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6115  00CB1E  0E02               	movlw	2
  6116  00CB20  6E01               	movwf	?___fpclassifyf^0,c
  6117  00CB22  EFC8  F065         	goto	l1094
  6118  00CB26                     l3888:
  6119  00CB26  0E00               	movlw	0
  6120  00CB28  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6121  00CB2A  0E03               	movlw	3
  6122  00CB2C  6E01               	movwf	?___fpclassifyf^0,c
  6123  00CB2E  EFC8  F065         	goto	l1094
  6124  00CB32                     l3892:
  6125  00CB32  2809               	incf	___fpclassifyf@e^0,w,c
  6126  00CB34  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6127  00CB36  A4D8               	btfss	status,2,c
  6128  00CB38  EFA0  F065         	goto	u4661
  6129  00CB3C  EFA2  F065         	goto	u4660
  6130  00CB40                     u4661:
  6131  00CB40  EFC4  F065         	goto	l3898
  6132  00CB44                     u4660:
  6133  00CB44  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6134  00CB48  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6135  00CB4C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6136  00CB50  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6137  00CB54  0E09               	movlw	9
  6138  00CB56                     u4675:
  6139  00CB56  90D8               	bcf	status,0,c
  6140  00CB58  3605               	rlcf	??___fpclassifyf^0,f,c
  6141  00CB5A  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6142  00CB5C  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6143  00CB5E  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6144  00CB60  2EE8               	decfsz	wreg,f,c
  6145  00CB62  EFAB  F065         	goto	u4675
  6146  00CB66  5005               	movf	??___fpclassifyf^0,w,c
  6147  00CB68  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6148  00CB6A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6149  00CB6C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6150  00CB6E  B4D8               	btfsc	status,2,c
  6151  00CB70  EFBC  F065         	goto	u4681
  6152  00CB74  EFBF  F065         	goto	u4680
  6153  00CB78                     u4681:
  6154  00CB78  0E01               	movlw	1
  6155  00CB7A  EFC0  F065         	goto	u4690
  6156  00CB7E                     u4680:
  6157  00CB7E  0E00               	movlw	0
  6158  00CB80                     u4690:
  6159  00CB80  6E01               	movwf	?___fpclassifyf^0,c
  6160  00CB82  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6161  00CB84  EFC8  F065         	goto	l1094
  6162  00CB88                     l3898:
  6163  00CB88  0E00               	movlw	0
  6164  00CB8A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6165  00CB8C  0E04               	movlw	4
  6166  00CB8E  6E01               	movwf	?___fpclassifyf^0,c
  6167  00CB90                     l1094:
  6168  00CB90  0012               	return		;funcret
  6169  00CB92                     __end_of___fpclassifyf:
  6170                           	callstack 0
  6171                           
  6172 ;; *************** function ___fltol *****************
  6173 ;; Defined at:
  6174 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;  f1              4    0[COMRAM] int 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  exp1            1    9[COMRAM] unsigned char 
  6179 ;;  sign1           1    8[COMRAM] unsigned char 
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  4    0[COMRAM] long 
  6182 ;; Registers used:
  6183 ;;		wreg, status,2, status,0
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  6189 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6190 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6191 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6192 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6193 ;;Total ram usage:       10 bytes
  6194 ;; Hardware stack levels used: 1
  6195 ;; This function calls:
  6196 ;;		Nothing
  6197 ;; This function is called by:
  6198 ;;		_efgtoa
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           	psect	text15
  6203  00CC96                     __ptext15:
  6204                           	callstack 0
  6205  00CC96                     ___fltol:
  6206                           	callstack 26
  6207  00CC96  3403               	rlcf	(___fltol@f1+2)^0,w,c
  6208  00CC98  3404               	rlcf	(___fltol@f1+3)^0,w,c
  6209  00CC9A  6E0A               	movwf	___fltol@exp1^0,c
  6210  00CC9C  500A               	movf	___fltol@exp1^0,w,c
  6211  00CC9E  A4D8               	btfss	status,2,c
  6212  00CCA0  EF54  F066         	goto	u4511
  6213  00CCA4  EF56  F066         	goto	u4510
  6214  00CCA8                     u4511:
  6215  00CCA8  EF60  F066         	goto	l3816
  6216  00CCAC                     u4510:
  6217  00CCAC                     l3812:
  6218  00CCAC  0E00               	movlw	0
  6219  00CCAE  6E01               	movwf	?___fltol^0,c
  6220  00CCB0  0E00               	movlw	0
  6221  00CCB2  6E02               	movwf	(?___fltol+1)^0,c
  6222  00CCB4  0E00               	movlw	0
  6223  00CCB6  6E03               	movwf	(?___fltol+2)^0,c
  6224  00CCB8  0E00               	movlw	0
  6225  00CCBA  6E04               	movwf	(?___fltol+3)^0,c
  6226  00CCBC  EFCD  F066         	goto	l430
  6227  00CCC0                     l3816:
  6228  00CCC0  C001  F005         	movff	___fltol@f1,??___fltol
  6229  00CCC4  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  6230  00CCC8  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  6231  00CCCC  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  6232  00CCD0  0E20               	movlw	32
  6233  00CCD2  EF70  F066         	goto	u4520
  6234  00CCD6                     u4525:
  6235  00CCD6  90D8               	bcf	status,0,c
  6236  00CCD8  3208               	rrcf	(??___fltol+3)^0,f,c
  6237  00CCDA  3207               	rrcf	(??___fltol+2)^0,f,c
  6238  00CCDC  3206               	rrcf	(??___fltol+1)^0,f,c
  6239  00CCDE  3205               	rrcf	??___fltol^0,f,c
  6240  00CCE0                     u4520:
  6241  00CCE0  2EE8               	decfsz	wreg,f,c
  6242  00CCE2  EF6B  F066         	goto	u4525
  6243  00CCE6  5005               	movf	??___fltol^0,w,c
  6244  00CCE8  6E09               	movwf	___fltol@sign1^0,c
  6245  00CCEA  8E03               	bsf	(___fltol@f1+2)^0,7,c
  6246  00CCEC  0EFF               	movlw	255
  6247  00CCEE  1601               	andwf	___fltol@f1^0,f,c
  6248  00CCF0  0EFF               	movlw	255
  6249  00CCF2  1602               	andwf	(___fltol@f1+1)^0,f,c
  6250  00CCF4  0EFF               	movlw	255
  6251  00CCF6  1603               	andwf	(___fltol@f1+2)^0,f,c
  6252  00CCF8  0E00               	movlw	0
  6253  00CCFA  1604               	andwf	(___fltol@f1+3)^0,f,c
  6254  00CCFC  0E96               	movlw	150
  6255  00CCFE  5E0A               	subwf	___fltol@exp1^0,f,c
  6256  00CD00  BE0A               	btfsc	___fltol@exp1^0,7,c
  6257  00CD02  EF87  F066         	goto	u4530
  6258  00CD06  EF85  F066         	goto	u4531
  6259  00CD0A                     u4531:
  6260  00CD0A  EF9D  F066         	goto	l3836
  6261  00CD0E                     u4530:
  6262  00CD0E  500A               	movf	___fltol@exp1^0,w,c
  6263  00CD10  0A80               	xorlw	128
  6264  00CD12  0F97               	addlw	151
  6265  00CD14  B0D8               	btfsc	status,0,c
  6266  00CD16  EF8F  F066         	goto	u4541
  6267  00CD1A  EF91  F066         	goto	u4540
  6268  00CD1E                     u4541:
  6269  00CD1E  EF93  F066         	goto	l3832
  6270  00CD22                     u4540:
  6271  00CD22  EF56  F066         	goto	l3812
  6272  00CD26                     l3832:
  6273  00CD26  90D8               	bcf	status,0,c
  6274  00CD28  3204               	rrcf	(___fltol@f1+3)^0,f,c
  6275  00CD2A  3203               	rrcf	(___fltol@f1+2)^0,f,c
  6276  00CD2C  3202               	rrcf	(___fltol@f1+1)^0,f,c
  6277  00CD2E  3201               	rrcf	___fltol@f1^0,f,c
  6278  00CD30  3E0A               	incfsz	___fltol@exp1^0,f,c
  6279  00CD32  EF93  F066         	goto	l3832
  6280  00CD36  EFB5  F066         	goto	l3846
  6281  00CD3A                     l3836:
  6282  00CD3A  0E1F               	movlw	31
  6283  00CD3C  640A               	cpfsgt	___fltol@exp1^0,c
  6284  00CD3E  EFA3  F066         	goto	u4551
  6285  00CD42  EFA5  F066         	goto	u4550
  6286  00CD46                     u4551:
  6287  00CD46  EFAD  F066         	goto	l3844
  6288  00CD4A                     u4550:
  6289  00CD4A  EF56  F066         	goto	l3812
  6290  00CD4E                     l3842:
  6291  00CD4E  90D8               	bcf	status,0,c
  6292  00CD50  3601               	rlcf	___fltol@f1^0,f,c
  6293  00CD52  3602               	rlcf	(___fltol@f1+1)^0,f,c
  6294  00CD54  3603               	rlcf	(___fltol@f1+2)^0,f,c
  6295  00CD56  3604               	rlcf	(___fltol@f1+3)^0,f,c
  6296  00CD58  060A               	decf	___fltol@exp1^0,f,c
  6297  00CD5A                     l3844:
  6298  00CD5A  500A               	movf	___fltol@exp1^0,w,c
  6299  00CD5C  A4D8               	btfss	status,2,c
  6300  00CD5E  EFB3  F066         	goto	u4561
  6301  00CD62  EFB5  F066         	goto	u4560
  6302  00CD66                     u4561:
  6303  00CD66  EFA7  F066         	goto	l3842
  6304  00CD6A                     u4560:
  6305  00CD6A                     l3846:
  6306  00CD6A  5009               	movf	___fltol@sign1^0,w,c
  6307  00CD6C  B4D8               	btfsc	status,2,c
  6308  00CD6E  EFBB  F066         	goto	u4571
  6309  00CD72  EFBD  F066         	goto	u4570
  6310  00CD76                     u4571:
  6311  00CD76  EFC5  F066         	goto	l3850
  6312  00CD7A                     u4570:
  6313  00CD7A  1E04               	comf	(___fltol@f1+3)^0,f,c
  6314  00CD7C  1E03               	comf	(___fltol@f1+2)^0,f,c
  6315  00CD7E  1E02               	comf	(___fltol@f1+1)^0,f,c
  6316  00CD80  6C01               	negf	___fltol@f1^0,c
  6317  00CD82  0E00               	movlw	0
  6318  00CD84  2202               	addwfc	(___fltol@f1+1)^0,f,c
  6319  00CD86  2203               	addwfc	(___fltol@f1+2)^0,f,c
  6320  00CD88  2204               	addwfc	(___fltol@f1+3)^0,f,c
  6321  00CD8A                     l3850:
  6322  00CD8A  C001  F001         	movff	___fltol@f1,?___fltol
  6323  00CD8E  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  6324  00CD92  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  6325  00CD96  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  6326  00CD9A                     l430:
  6327  00CD9A  0012               	return		;funcret
  6328  00CD9C                     __end_of___fltol:
  6329                           	callstack 0
  6330                           
  6331 ;; *************** function ___flsub *****************
  6332 ;; Defined at:
  6333 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;  b               4   25[COMRAM] long 
  6336 ;;  a               4   29[COMRAM] long 
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;		None
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  4   25[COMRAM] long 
  6341 ;; Registers used:
  6342 ;;		wreg, status,2, status,0, cstack
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  6348 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6351 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6352 ;;Total ram usage:        8 bytes
  6353 ;; Hardware stack levels used: 1
  6354 ;; Hardware stack levels required when called: 1
  6355 ;; This function calls:
  6356 ;;		___fladd
  6357 ;; This function is called by:
  6358 ;;		_efgtoa
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           	psect	text16
  6363  00C34A                     __ptext16:
  6364                           	callstack 0
  6365  00C34A                     ___flsub:
  6366                           	callstack 25
  6367  00C34A  0E00               	movlw	0
  6368  00C34C  1A1E               	xorwf	___flsub@a^0,f,c
  6369  00C34E  0E00               	movlw	0
  6370  00C350  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  6371  00C352  0E00               	movlw	0
  6372  00C354  1A20               	xorwf	(___flsub@a+2)^0,f,c
  6373  00C356  0E80               	movlw	128
  6374  00C358  1A21               	xorwf	(___flsub@a+3)^0,f,c
  6375  00C35A  C01A  F001         	movff	___flsub@b,___fladd@b
  6376  00C35E  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  6377  00C362  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  6378  00C366  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  6379  00C36A  C01E  F005         	movff	___flsub@a,___fladd@a
  6380  00C36E  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  6381  00C372  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  6382  00C376  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  6383  00C37A  EC2F  F072         	call	___fladd	;wreg free
  6384  00C37E  C001  F01A         	movff	?___fladd,?___flsub
  6385  00C382  C002  F01B         	movff	?___fladd+1,?___flsub+1
  6386  00C386  C003  F01C         	movff	?___fladd+2,?___flsub+2
  6387  00C38A  C004  F01D         	movff	?___fladd+3,?___flsub+3
  6388  00C38E  0012               	return		;funcret
  6389  00C390                     __end_of___flsub:
  6390                           	callstack 0
  6391                           
  6392 ;; *************** function ___fladd *****************
  6393 ;; Defined at:
  6394 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;  b               4    0[COMRAM] long 
  6397 ;;  a               4    4[COMRAM] long 
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;  grs             1   15[COMRAM] unsigned char 
  6400 ;;  bexp            1   14[COMRAM] unsigned char 
  6401 ;;  aexp            1   13[COMRAM] unsigned char 
  6402 ;;  signs           1   12[COMRAM] unsigned char 
  6403 ;; Return value:  Size  Location     Type
  6404 ;;                  4    0[COMRAM] unsigned char 
  6405 ;; Registers used:
  6406 ;;		wreg, status,2, status,0
  6407 ;; Tracked objects:
  6408 ;;		On entry : 0/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  6412 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6413 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6414 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6415 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  6416 ;;Total ram usage:       16 bytes
  6417 ;; Hardware stack levels used: 1
  6418 ;; This function calls:
  6419 ;;		Nothing
  6420 ;; This function is called by:
  6421 ;;		___flsub
  6422 ;;		_efgtoa
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text17
  6427  00E45E                     __ptext17:
  6428                           	callstack 0
  6429  00E45E                     ___fladd:
  6430                           	callstack 25
  6431  00E45E  5004               	movf	(___fladd@b+3)^0,w,c
  6432  00E460  0B80               	andlw	128
  6433  00E462  6E0D               	movwf	___fladd@signs^0,c
  6434  00E464  5004               	movf	(___fladd@b+3)^0,w,c
  6435  00E466  2404               	addwf	(___fladd@b+3)^0,w,c
  6436  00E468  6E0F               	movwf	___fladd@bexp^0,c
  6437  00E46A  AE03               	btfss	(___fladd@b+2)^0,7,c
  6438  00E46C  EF3A  F072         	goto	u3301
  6439  00E470  EF3C  F072         	goto	u3300
  6440  00E474                     u3301:
  6441  00E474  EF3D  F072         	goto	l3102
  6442  00E478                     u3300:
  6443  00E478  800F               	bsf	___fladd@bexp^0,0,c
  6444  00E47A                     l3102:
  6445  00E47A  500F               	movf	___fladd@bexp^0,w,c
  6446  00E47C  B4D8               	btfsc	status,2,c
  6447  00E47E  EF43  F072         	goto	u3311
  6448  00E482  EF45  F072         	goto	u3310
  6449  00E486                     u3311:
  6450  00E486  EF5A  F072         	goto	l3112
  6451  00E48A                     u3310:
  6452  00E48A  280F               	incf	___fladd@bexp^0,w,c
  6453  00E48C  A4D8               	btfss	status,2,c
  6454  00E48E  EF4B  F072         	goto	u3321
  6455  00E492  EF4D  F072         	goto	u3320
  6456  00E496                     u3321:
  6457  00E496  EF55  F072         	goto	l3108
  6458  00E49A                     u3320:
  6459  00E49A  0E00               	movlw	0
  6460  00E49C  6E01               	movwf	___fladd@b^0,c
  6461  00E49E  0E00               	movlw	0
  6462  00E4A0  6E02               	movwf	(___fladd@b+1)^0,c
  6463  00E4A2  0E00               	movlw	0
  6464  00E4A4  6E03               	movwf	(___fladd@b+2)^0,c
  6465  00E4A6  0E00               	movlw	0
  6466  00E4A8  6E04               	movwf	(___fladd@b+3)^0,c
  6467  00E4AA                     l3108:
  6468  00E4AA  8E03               	bsf	(___fladd@b+2)^0,7,c
  6469  00E4AC  0E00               	movlw	0
  6470  00E4AE  6E04               	movwf	(___fladd@b+3)^0,c
  6471  00E4B0  EF62  F072         	goto	l3114
  6472  00E4B4                     l3112:
  6473  00E4B4  0E00               	movlw	0
  6474  00E4B6  6E01               	movwf	___fladd@b^0,c
  6475  00E4B8  0E00               	movlw	0
  6476  00E4BA  6E02               	movwf	(___fladd@b+1)^0,c
  6477  00E4BC  0E00               	movlw	0
  6478  00E4BE  6E03               	movwf	(___fladd@b+2)^0,c
  6479  00E4C0  0E00               	movlw	0
  6480  00E4C2  6E04               	movwf	(___fladd@b+3)^0,c
  6481  00E4C4                     l3114:
  6482  00E4C4  5008               	movf	(___fladd@a+3)^0,w,c
  6483  00E4C6  0B80               	andlw	128
  6484  00E4C8  6E0E               	movwf	___fladd@aexp^0,c
  6485  00E4CA  500D               	movf	___fladd@signs^0,w,c
  6486  00E4CC  180E               	xorwf	___fladd@aexp^0,w,c
  6487  00E4CE  B4D8               	btfsc	status,2,c
  6488  00E4D0  EF6C  F072         	goto	u3331
  6489  00E4D4  EF6E  F072         	goto	u3330
  6490  00E4D8                     u3331:
  6491  00E4D8  EF6F  F072         	goto	l3120
  6492  00E4DC                     u3330:
  6493  00E4DC  8C0D               	bsf	___fladd@signs^0,6,c
  6494  00E4DE                     l3120:
  6495  00E4DE  5008               	movf	(___fladd@a+3)^0,w,c
  6496  00E4E0  2408               	addwf	(___fladd@a+3)^0,w,c
  6497  00E4E2  6E0E               	movwf	___fladd@aexp^0,c
  6498  00E4E4  AE07               	btfss	(___fladd@a+2)^0,7,c
  6499  00E4E6  EF77  F072         	goto	u3341
  6500  00E4EA  EF79  F072         	goto	u3340
  6501  00E4EE                     u3341:
  6502  00E4EE  EF7A  F072         	goto	l3126
  6503  00E4F2                     u3340:
  6504  00E4F2  800E               	bsf	___fladd@aexp^0,0,c
  6505  00E4F4                     l3126:
  6506  00E4F4  500E               	movf	___fladd@aexp^0,w,c
  6507  00E4F6  B4D8               	btfsc	status,2,c
  6508  00E4F8  EF80  F072         	goto	u3351
  6509  00E4FC  EF82  F072         	goto	u3350
  6510  00E500                     u3351:
  6511  00E500  EF97  F072         	goto	l3136
  6512  00E504                     u3350:
  6513  00E504  280E               	incf	___fladd@aexp^0,w,c
  6514  00E506  A4D8               	btfss	status,2,c
  6515  00E508  EF88  F072         	goto	u3361
  6516  00E50C  EF8A  F072         	goto	u3360
  6517  00E510                     u3361:
  6518  00E510  EF92  F072         	goto	l3132
  6519  00E514                     u3360:
  6520  00E514  0E00               	movlw	0
  6521  00E516  6E05               	movwf	___fladd@a^0,c
  6522  00E518  0E00               	movlw	0
  6523  00E51A  6E06               	movwf	(___fladd@a+1)^0,c
  6524  00E51C  0E00               	movlw	0
  6525  00E51E  6E07               	movwf	(___fladd@a+2)^0,c
  6526  00E520  0E00               	movlw	0
  6527  00E522  6E08               	movwf	(___fladd@a+3)^0,c
  6528  00E524                     l3132:
  6529  00E524  8E07               	bsf	(___fladd@a+2)^0,7,c
  6530  00E526  0E00               	movlw	0
  6531  00E528  6E08               	movwf	(___fladd@a+3)^0,c
  6532  00E52A  EF9F  F072         	goto	l3138
  6533  00E52E                     l3136:
  6534  00E52E  0E00               	movlw	0
  6535  00E530  6E05               	movwf	___fladd@a^0,c
  6536  00E532  0E00               	movlw	0
  6537  00E534  6E06               	movwf	(___fladd@a+1)^0,c
  6538  00E536  0E00               	movlw	0
  6539  00E538  6E07               	movwf	(___fladd@a+2)^0,c
  6540  00E53A  0E00               	movlw	0
  6541  00E53C  6E08               	movwf	(___fladd@a+3)^0,c
  6542  00E53E                     l3138:
  6543  00E53E  500F               	movf	___fladd@bexp^0,w,c
  6544  00E540  5C0E               	subwf	___fladd@aexp^0,w,c
  6545  00E542  B0D8               	btfsc	status,0,c
  6546  00E544  EFA6  F072         	goto	u3371
  6547  00E548  EFA8  F072         	goto	u3370
  6548  00E54C                     u3371:
  6549  00E54C  EFCF  F072         	goto	l3174
  6550  00E550                     u3370:
  6551  00E550  AC0D               	btfss	___fladd@signs^0,6,c
  6552  00E552  EFAD  F072         	goto	u3381
  6553  00E556  EFAF  F072         	goto	u3380
  6554  00E55A                     u3381:
  6555  00E55A  EFB1  F072         	goto	l3144
  6556  00E55E                     u3380:
  6557  00E55E  0E80               	movlw	128
  6558  00E560  1A0D               	xorwf	___fladd@signs^0,f,c
  6559  00E562                     l3144:
  6560  00E562  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6561  00E566  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6562  00E56A  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6563  00E56E  C001  F010         	movff	___fladd@b,___fladd@grs
  6564  00E572  C005  F001         	movff	___fladd@a,___fladd@b
  6565  00E576  C010  F005         	movff	___fladd@grs,___fladd@a
  6566  00E57A  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6567  00E57E  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6568  00E582  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6569  00E586  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6570  00E58A  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6571  00E58E  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6572  00E592  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6573  00E596  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6574  00E59A  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6575  00E59E                     l3174:
  6576  00E59E  0E00               	movlw	0
  6577  00E5A0  6E10               	movwf	___fladd@grs^0,c
  6578  00E5A2  500F               	movf	___fladd@bexp^0,w,c
  6579  00E5A4  C00E  F009         	movff	___fladd@aexp,??___fladd
  6580  00E5A8  6A0A               	clrf	(??___fladd+1)^0,c
  6581  00E5AA  5E09               	subwf	??___fladd^0,f,c
  6582  00E5AC  0E00               	movlw	0
  6583  00E5AE  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6584  00E5B0  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6585  00E5B2  EFE4  F072         	goto	u3391
  6586  00E5B6  500A               	movf	(??___fladd+1)^0,w,c
  6587  00E5B8  E109               	bnz	u3390
  6588  00E5BA  0E1A               	movlw	26
  6589  00E5BC  5C09               	subwf	??___fladd^0,w,c
  6590  00E5BE  A0D8               	btfss	status,0,c
  6591  00E5C0  EFE4  F072         	goto	u3391
  6592  00E5C4  EFE6  F072         	goto	u3390
  6593  00E5C8                     u3391:
  6594  00E5C8  EF1D  F073         	goto	l662
  6595  00E5CC                     u3390:
  6596  00E5CC  5001               	movf	___fladd@b^0,w,c
  6597  00E5CE  1002               	iorwf	(___fladd@b+1)^0,w,c
  6598  00E5D0  1003               	iorwf	(___fladd@b+2)^0,w,c
  6599  00E5D2  1004               	iorwf	(___fladd@b+3)^0,w,c
  6600  00E5D4  A4D8               	btfss	status,2,c
  6601  00E5D6  EFEF  F072         	goto	u3401
  6602  00E5DA  EFF2  F072         	goto	u3400
  6603  00E5DE                     u3401:
  6604  00E5DE  0E01               	movlw	1
  6605  00E5E0  EFF3  F072         	goto	u3410
  6606  00E5E4                     u3400:
  6607  00E5E4  0E00               	movlw	0
  6608  00E5E6                     u3410:
  6609  00E5E6  6E10               	movwf	___fladd@grs^0,c
  6610  00E5E8  0E00               	movlw	0
  6611  00E5EA  6E01               	movwf	___fladd@b^0,c
  6612  00E5EC  0E00               	movlw	0
  6613  00E5EE  6E02               	movwf	(___fladd@b+1)^0,c
  6614  00E5F0  0E00               	movlw	0
  6615  00E5F2  6E03               	movwf	(___fladd@b+2)^0,c
  6616  00E5F4  0E00               	movlw	0
  6617  00E5F6  6E04               	movwf	(___fladd@b+3)^0,c
  6618  00E5F8  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6619  00E5FC  EF26  F073         	goto	l661
  6620  00E600                     l663:
  6621  00E600  A010               	btfss	___fladd@grs^0,0,c
  6622  00E602  EF05  F073         	goto	u3421
  6623  00E606  EF07  F073         	goto	u3420
  6624  00E60A                     u3421:
  6625  00E60A  EF0D  F073         	goto	l3186
  6626  00E60E                     u3420:
  6627  00E60E  90D8               	bcf	status,0,c
  6628  00E610  3010               	rrcf	___fladd@grs^0,w,c
  6629  00E612  0901               	iorlw	1
  6630  00E614  6E10               	movwf	___fladd@grs^0,c
  6631  00E616  EF0F  F073         	goto	l3188
  6632  00E61A                     l3186:
  6633  00E61A  90D8               	bcf	status,0,c
  6634  00E61C  3210               	rrcf	___fladd@grs^0,f,c
  6635  00E61E                     l3188:
  6636  00E61E  A001               	btfss	___fladd@b^0,0,c
  6637  00E620  EF14  F073         	goto	u3431
  6638  00E624  EF16  F073         	goto	u3430
  6639  00E628                     u3431:
  6640  00E628  EF17  F073         	goto	l3192
  6641  00E62C                     u3430:
  6642  00E62C  8E10               	bsf	___fladd@grs^0,7,c
  6643  00E62E                     l3192:
  6644  00E62E  3404               	rlcf	(___fladd@b+3)^0,w,c
  6645  00E630  3204               	rrcf	(___fladd@b+3)^0,f,c
  6646  00E632  3203               	rrcf	(___fladd@b+2)^0,f,c
  6647  00E634  3202               	rrcf	(___fladd@b+1)^0,f,c
  6648  00E636  3201               	rrcf	___fladd@b^0,f,c
  6649  00E638  2A0F               	incf	___fladd@bexp^0,f,c
  6650  00E63A                     l662:
  6651  00E63A  500E               	movf	___fladd@aexp^0,w,c
  6652  00E63C  5C0F               	subwf	___fladd@bexp^0,w,c
  6653  00E63E  A0D8               	btfss	status,0,c
  6654  00E640  EF24  F073         	goto	u3441
  6655  00E644  EF26  F073         	goto	u3440
  6656  00E648                     u3441:
  6657  00E648  EF00  F073         	goto	l663
  6658  00E64C                     u3440:
  6659  00E64C                     l661:
  6660  00E64C  BC0D               	btfsc	___fladd@signs^0,6,c
  6661  00E64E  EF2B  F073         	goto	u3451
  6662  00E652  EF2D  F073         	goto	u3450
  6663  00E656                     u3451:
  6664  00E656  EF6D  F073         	goto	l3220
  6665  00E65A                     u3450:
  6666  00E65A  500F               	movf	___fladd@bexp^0,w,c
  6667  00E65C  A4D8               	btfss	status,2,c
  6668  00E65E  EF33  F073         	goto	u3461
  6669  00E662  EF35  F073         	goto	u3460
  6670  00E666                     u3461:
  6671  00E666  EF3F  F073         	goto	l3202
  6672  00E66A                     u3460:
  6673  00E66A  0E00               	movlw	0
  6674  00E66C  6E01               	movwf	?___fladd^0,c
  6675  00E66E  0E00               	movlw	0
  6676  00E670  6E02               	movwf	(?___fladd+1)^0,c
  6677  00E672  0E00               	movlw	0
  6678  00E674  6E03               	movwf	(?___fladd+2)^0,c
  6679  00E676  0E00               	movlw	0
  6680  00E678  6E04               	movwf	(?___fladd+3)^0,c
  6681  00E67A  EF8E  F074         	goto	l670
  6682  00E67E                     l3202:
  6683  00E67E  5005               	movf	___fladd@a^0,w,c
  6684  00E680  2601               	addwf	___fladd@b^0,f,c
  6685  00E682  5006               	movf	(___fladd@a+1)^0,w,c
  6686  00E684  2202               	addwfc	(___fladd@b+1)^0,f,c
  6687  00E686  5007               	movf	(___fladd@a+2)^0,w,c
  6688  00E688  2203               	addwfc	(___fladd@b+2)^0,f,c
  6689  00E68A  5008               	movf	(___fladd@a+3)^0,w,c
  6690  00E68C  2204               	addwfc	(___fladd@b+3)^0,f,c
  6691  00E68E  A004               	btfss	(___fladd@b+3)^0,0,c
  6692  00E690  EF4C  F073         	goto	u3471
  6693  00E694  EF4E  F073         	goto	u3470
  6694  00E698                     u3471:
  6695  00E698  EFFA  F073         	goto	l3256
  6696  00E69C                     u3470:
  6697  00E69C  A010               	btfss	___fladd@grs^0,0,c
  6698  00E69E  EF53  F073         	goto	u3481
  6699  00E6A2  EF55  F073         	goto	u3480
  6700  00E6A6                     u3481:
  6701  00E6A6  EF5B  F073         	goto	l3210
  6702  00E6AA                     u3480:
  6703  00E6AA  90D8               	bcf	status,0,c
  6704  00E6AC  3010               	rrcf	___fladd@grs^0,w,c
  6705  00E6AE  0901               	iorlw	1
  6706  00E6B0  6E10               	movwf	___fladd@grs^0,c
  6707  00E6B2  EF5D  F073         	goto	l3212
  6708  00E6B6                     l3210:
  6709  00E6B6  90D8               	bcf	status,0,c
  6710  00E6B8  3210               	rrcf	___fladd@grs^0,f,c
  6711  00E6BA                     l3212:
  6712  00E6BA  A001               	btfss	___fladd@b^0,0,c
  6713  00E6BC  EF62  F073         	goto	u3491
  6714  00E6C0  EF64  F073         	goto	u3490
  6715  00E6C4                     u3491:
  6716  00E6C4  EF65  F073         	goto	l3216
  6717  00E6C8                     u3490:
  6718  00E6C8  8E10               	bsf	___fladd@grs^0,7,c
  6719  00E6CA                     l3216:
  6720  00E6CA  3404               	rlcf	(___fladd@b+3)^0,w,c
  6721  00E6CC  3204               	rrcf	(___fladd@b+3)^0,f,c
  6722  00E6CE  3203               	rrcf	(___fladd@b+2)^0,f,c
  6723  00E6D0  3202               	rrcf	(___fladd@b+1)^0,f,c
  6724  00E6D2  3201               	rrcf	___fladd@b^0,f,c
  6725  00E6D4  2A0F               	incf	___fladd@bexp^0,f,c
  6726  00E6D6  EFFA  F073         	goto	l3256
  6727  00E6DA                     l3220:
  6728  00E6DA  5005               	movf	___fladd@a^0,w,c
  6729  00E6DC  5C01               	subwf	___fladd@b^0,w,c
  6730  00E6DE  5006               	movf	(___fladd@a+1)^0,w,c
  6731  00E6E0  5802               	subwfb	(___fladd@b+1)^0,w,c
  6732  00E6E2  5007               	movf	(___fladd@a+2)^0,w,c
  6733  00E6E4  5803               	subwfb	(___fladd@b+2)^0,w,c
  6734  00E6E6  5004               	movf	(___fladd@b+3)^0,w,c
  6735  00E6E8  0A80               	xorlw	128
  6736  00E6EA  6E09               	movwf	??___fladd^0,c
  6737  00E6EC  5008               	movf	(___fladd@a+3)^0,w,c
  6738  00E6EE  0A80               	xorlw	128
  6739  00E6F0  5809               	subwfb	??___fladd^0,w,c
  6740  00E6F2  B0D8               	btfsc	status,0,c
  6741  00E6F4  EF7E  F073         	goto	u3501
  6742  00E6F8  EF80  F073         	goto	u3500
  6743  00E6FC                     u3501:
  6744  00E6FC  EFAB  F073         	goto	l3230
  6745  00E700                     u3500:
  6746  00E700  5001               	movf	___fladd@b^0,w,c
  6747  00E702  5C05               	subwf	___fladd@a^0,w,c
  6748  00E704  6E09               	movwf	??___fladd^0,c
  6749  00E706  5002               	movf	(___fladd@b+1)^0,w,c
  6750  00E708  5806               	subwfb	(___fladd@a+1)^0,w,c
  6751  00E70A  6E0A               	movwf	(??___fladd+1)^0,c
  6752  00E70C  5003               	movf	(___fladd@b+2)^0,w,c
  6753  00E70E  5807               	subwfb	(___fladd@a+2)^0,w,c
  6754  00E710  6E0B               	movwf	(??___fladd+2)^0,c
  6755  00E712  5004               	movf	(___fladd@b+3)^0,w,c
  6756  00E714  5808               	subwfb	(___fladd@a+3)^0,w,c
  6757  00E716  6E0C               	movwf	(??___fladd+3)^0,c
  6758  00E718  0EFF               	movlw	255
  6759  00E71A  2409               	addwf	??___fladd^0,w,c
  6760  00E71C  6E01               	movwf	___fladd@b^0,c
  6761  00E71E  0EFF               	movlw	255
  6762  00E720  200A               	addwfc	(??___fladd+1)^0,w,c
  6763  00E722  6E02               	movwf	(___fladd@b+1)^0,c
  6764  00E724  0EFF               	movlw	255
  6765  00E726  200B               	addwfc	(??___fladd+2)^0,w,c
  6766  00E728  6E03               	movwf	(___fladd@b+2)^0,c
  6767  00E72A  0EFF               	movlw	255
  6768  00E72C  200C               	addwfc	(??___fladd+3)^0,w,c
  6769  00E72E  6E04               	movwf	(___fladd@b+3)^0,c
  6770  00E730  0E80               	movlw	128
  6771  00E732  1A0D               	xorwf	___fladd@signs^0,f,c
  6772  00E734  6C10               	negf	___fladd@grs^0,c
  6773  00E736  5010               	movf	___fladd@grs^0,w,c
  6774  00E738  A4D8               	btfss	status,2,c
  6775  00E73A  EFA1  F073         	goto	u3511
  6776  00E73E  EFA3  F073         	goto	u3510
  6777  00E742                     u3511:
  6778  00E742  EFB3  F073         	goto	l678
  6779  00E746                     u3510:
  6780  00E746  0E01               	movlw	1
  6781  00E748  2601               	addwf	___fladd@b^0,f,c
  6782  00E74A  0E00               	movlw	0
  6783  00E74C  2202               	addwfc	(___fladd@b+1)^0,f,c
  6784  00E74E  2203               	addwfc	(___fladd@b+2)^0,f,c
  6785  00E750  2204               	addwfc	(___fladd@b+3)^0,f,c
  6786  00E752  EFB3  F073         	goto	l678
  6787  00E756                     l3230:
  6788  00E756  5005               	movf	___fladd@a^0,w,c
  6789  00E758  5E01               	subwf	___fladd@b^0,f,c
  6790  00E75A  5006               	movf	(___fladd@a+1)^0,w,c
  6791  00E75C  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6792  00E75E  5007               	movf	(___fladd@a+2)^0,w,c
  6793  00E760  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6794  00E762  5008               	movf	(___fladd@a+3)^0,w,c
  6795  00E764  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6796  00E766                     l678:
  6797  00E766  5001               	movf	___fladd@b^0,w,c
  6798  00E768  1002               	iorwf	(___fladd@b+1)^0,w,c
  6799  00E76A  1003               	iorwf	(___fladd@b+2)^0,w,c
  6800  00E76C  1004               	iorwf	(___fladd@b+3)^0,w,c
  6801  00E76E  A4D8               	btfss	status,2,c
  6802  00E770  EFBC  F073         	goto	u3521
  6803  00E774  EFBE  F073         	goto	u3520
  6804  00E778                     u3521:
  6805  00E778  EFF3  F073         	goto	l3254
  6806  00E77C                     u3520:
  6807  00E77C  5010               	movf	___fladd@grs^0,w,c
  6808  00E77E  A4D8               	btfss	status,2,c
  6809  00E780  EFC4  F073         	goto	u3531
  6810  00E784  EFC6  F073         	goto	u3530
  6811  00E788                     u3531:
  6812  00E788  EFF3  F073         	goto	l3254
  6813  00E78C                     u3530:
  6814  00E78C  0E00               	movlw	0
  6815  00E78E  6E01               	movwf	?___fladd^0,c
  6816  00E790  0E00               	movlw	0
  6817  00E792  6E02               	movwf	(?___fladd+1)^0,c
  6818  00E794  0E00               	movlw	0
  6819  00E796  6E03               	movwf	(?___fladd+2)^0,c
  6820  00E798  0E00               	movlw	0
  6821  00E79A  6E04               	movwf	(?___fladd+3)^0,c
  6822  00E79C  EF8E  F074         	goto	l670
  6823  00E7A0                     l3238:
  6824  00E7A0  90D8               	bcf	status,0,c
  6825  00E7A2  3601               	rlcf	___fladd@b^0,f,c
  6826  00E7A4  3602               	rlcf	(___fladd@b+1)^0,f,c
  6827  00E7A6  3603               	rlcf	(___fladd@b+2)^0,f,c
  6828  00E7A8  3604               	rlcf	(___fladd@b+3)^0,f,c
  6829  00E7AA  AE10               	btfss	___fladd@grs^0,7,c
  6830  00E7AC  EFDA  F073         	goto	u3541
  6831  00E7B0  EFDC  F073         	goto	u3540
  6832  00E7B4                     u3541:
  6833  00E7B4  EFDD  F073         	goto	l3244
  6834  00E7B8                     u3540:
  6835  00E7B8  8001               	bsf	___fladd@b^0,0,c
  6836  00E7BA                     l3244:
  6837  00E7BA  A010               	btfss	___fladd@grs^0,0,c
  6838  00E7BC  EFE2  F073         	goto	u3551
  6839  00E7C0  EFE4  F073         	goto	u3550
  6840  00E7C4                     u3551:
  6841  00E7C4  EFE8  F073         	goto	l3248
  6842  00E7C8                     u3550:
  6843  00E7C8  80D8               	bsf	status,0,c
  6844  00E7CA  3610               	rlcf	___fladd@grs^0,f,c
  6845  00E7CC  EFEA  F073         	goto	l3250
  6846  00E7D0                     l3248:
  6847  00E7D0  90D8               	bcf	status,0,c
  6848  00E7D2  3610               	rlcf	___fladd@grs^0,f,c
  6849  00E7D4                     l3250:
  6850  00E7D4  500F               	movf	___fladd@bexp^0,w,c
  6851  00E7D6  B4D8               	btfsc	status,2,c
  6852  00E7D8  EFF0  F073         	goto	u3561
  6853  00E7DC  EFF2  F073         	goto	u3560
  6854  00E7E0                     u3561:
  6855  00E7E0  EFF3  F073         	goto	l3254
  6856  00E7E4                     u3560:
  6857  00E7E4  060F               	decf	___fladd@bexp^0,f,c
  6858  00E7E6                     l3254:
  6859  00E7E6  AE03               	btfss	(___fladd@b+2)^0,7,c
  6860  00E7E8  EFF8  F073         	goto	u3571
  6861  00E7EC  EFFA  F073         	goto	u3570
  6862  00E7F0                     u3571:
  6863  00E7F0  EFD0  F073         	goto	l3238
  6864  00E7F4                     u3570:
  6865  00E7F4                     l3256:
  6866  00E7F4  0E00               	movlw	0
  6867  00E7F6  6E0E               	movwf	___fladd@aexp^0,c
  6868  00E7F8  AE10               	btfss	___fladd@grs^0,7,c
  6869  00E7FA  EF01  F074         	goto	u3581
  6870  00E7FE  EF03  F074         	goto	u3580
  6871  00E802                     u3581:
  6872  00E802  EF1B  F074         	goto	l687
  6873  00E806                     u3580:
  6874  00E806  C010  F009         	movff	___fladd@grs,??___fladd
  6875  00E80A  0E7F               	movlw	127
  6876  00E80C  1609               	andwf	??___fladd^0,f,c
  6877  00E80E  B4D8               	btfsc	status,2,c
  6878  00E810  EF0C  F074         	goto	u3591
  6879  00E814  EF0E  F074         	goto	u3590
  6880  00E818                     u3591:
  6881  00E818  EF12  F074         	goto	l688
  6882  00E81C                     u3590:
  6883  00E81C                     l3262:
  6884  00E81C  0E01               	movlw	1
  6885  00E81E  6E0E               	movwf	___fladd@aexp^0,c
  6886  00E820  EF1B  F074         	goto	l687
  6887  00E824                     l688:
  6888  00E824  A001               	btfss	___fladd@b^0,0,c
  6889  00E826  EF17  F074         	goto	u3601
  6890  00E82A  EF19  F074         	goto	u3600
  6891  00E82E                     u3601:
  6892  00E82E  EF1B  F074         	goto	l687
  6893  00E832                     u3600:
  6894  00E832  EF0E  F074         	goto	l3262
  6895  00E836                     l687:
  6896  00E836  500E               	movf	___fladd@aexp^0,w,c
  6897  00E838  B4D8               	btfsc	status,2,c
  6898  00E83A  EF21  F074         	goto	u3611
  6899  00E83E  EF23  F074         	goto	u3610
  6900  00E842                     u3611:
  6901  00E842  EF4E  F074         	goto	l3274
  6902  00E846                     u3610:
  6903  00E846  0E01               	movlw	1
  6904  00E848  2601               	addwf	___fladd@b^0,f,c
  6905  00E84A  0E00               	movlw	0
  6906  00E84C  2202               	addwfc	(___fladd@b+1)^0,f,c
  6907  00E84E  2203               	addwfc	(___fladd@b+2)^0,f,c
  6908  00E850  2204               	addwfc	(___fladd@b+3)^0,f,c
  6909  00E852  A004               	btfss	(___fladd@b+3)^0,0,c
  6910  00E854  EF2E  F074         	goto	u3621
  6911  00E858  EF30  F074         	goto	u3620
  6912  00E85C                     u3621:
  6913  00E85C  EF4E  F074         	goto	l3274
  6914  00E860                     u3620:
  6915  00E860  C001  F009         	movff	___fladd@b,??___fladd
  6916  00E864  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6917  00E868  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6918  00E86C  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6919  00E870  340C               	rlcf	(??___fladd+3)^0,w,c
  6920  00E872  320C               	rrcf	(??___fladd+3)^0,f,c
  6921  00E874  320B               	rrcf	(??___fladd+2)^0,f,c
  6922  00E876  320A               	rrcf	(??___fladd+1)^0,f,c
  6923  00E878  3209               	rrcf	??___fladd^0,f,c
  6924  00E87A  C009  F001         	movff	??___fladd,___fladd@b
  6925  00E87E  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6926  00E882  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6927  00E886  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6928  00E88A  280F               	incf	___fladd@bexp^0,w,c
  6929  00E88C  B4D8               	btfsc	status,2,c
  6930  00E88E  EF4B  F074         	goto	u3631
  6931  00E892  EF4D  F074         	goto	u3630
  6932  00E896                     u3631:
  6933  00E896  EF4E  F074         	goto	l3274
  6934  00E89A                     u3630:
  6935  00E89A  2A0F               	incf	___fladd@bexp^0,f,c
  6936  00E89C                     l3274:
  6937  00E89C  280F               	incf	___fladd@bexp^0,w,c
  6938  00E89E  B4D8               	btfsc	status,2,c
  6939  00E8A0  EF54  F074         	goto	u3641
  6940  00E8A4  EF56  F074         	goto	u3640
  6941  00E8A8                     u3641:
  6942  00E8A8  EF5E  F074         	goto	l3278
  6943  00E8AC                     u3640:
  6944  00E8AC  500F               	movf	___fladd@bexp^0,w,c
  6945  00E8AE  A4D8               	btfss	status,2,c
  6946  00E8B0  EF5C  F074         	goto	u3651
  6947  00E8B4  EF5E  F074         	goto	u3650
  6948  00E8B8                     u3651:
  6949  00E8B8  EF70  F074         	goto	l3282
  6950  00E8BC                     u3650:
  6951  00E8BC                     l3278:
  6952  00E8BC  0E00               	movlw	0
  6953  00E8BE  6E01               	movwf	___fladd@b^0,c
  6954  00E8C0  0E00               	movlw	0
  6955  00E8C2  6E02               	movwf	(___fladd@b+1)^0,c
  6956  00E8C4  0E00               	movlw	0
  6957  00E8C6  6E03               	movwf	(___fladd@b+2)^0,c
  6958  00E8C8  0E00               	movlw	0
  6959  00E8CA  6E04               	movwf	(___fladd@b+3)^0,c
  6960  00E8CC  500F               	movf	___fladd@bexp^0,w,c
  6961  00E8CE  A4D8               	btfss	status,2,c
  6962  00E8D0  EF6C  F074         	goto	u3661
  6963  00E8D4  EF6E  F074         	goto	u3660
  6964  00E8D8                     u3661:
  6965  00E8D8  EF70  F074         	goto	l3282
  6966  00E8DC                     u3660:
  6967  00E8DC  0E00               	movlw	0
  6968  00E8DE  6E0D               	movwf	___fladd@signs^0,c
  6969  00E8E0                     l3282:
  6970  00E8E0  A00F               	btfss	___fladd@bexp^0,0,c
  6971  00E8E2  EF75  F074         	goto	u3671
  6972  00E8E6  EF77  F074         	goto	u3670
  6973  00E8EA                     u3671:
  6974  00E8EA  EF7A  F074         	goto	l3286
  6975  00E8EE                     u3670:
  6976  00E8EE  8E03               	bsf	(___fladd@b+2)^0,7,c
  6977  00E8F0  EF7B  F074         	goto	l3288
  6978  00E8F4                     l3286:
  6979  00E8F4  9E03               	bcf	(___fladd@b+2)^0,7,c
  6980  00E8F6                     l3288:
  6981  00E8F6  90D8               	bcf	status,0,c
  6982  00E8F8  300F               	rrcf	___fladd@bexp^0,w,c
  6983  00E8FA  6E04               	movwf	(___fladd@b+3)^0,c
  6984  00E8FC  AE0D               	btfss	___fladd@signs^0,7,c
  6985  00E8FE  EF83  F074         	goto	u3681
  6986  00E902  EF85  F074         	goto	u3680
  6987  00E906                     u3681:
  6988  00E906  EF86  F074         	goto	l3294
  6989  00E90A                     u3680:
  6990  00E90A  8E04               	bsf	(___fladd@b+3)^0,7,c
  6991  00E90C                     l3294:
  6992  00E90C  C001  F001         	movff	___fladd@b,?___fladd
  6993  00E910  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6994  00E914  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6995  00E918  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6996  00E91C                     l670:
  6997  00E91C  0012               	return		;funcret
  6998  00E91E                     __end_of___fladd:
  6999                           	callstack 0
  7000                           
  7001 ;; *************** function ___flneg *****************
  7002 ;; Defined at:
  7003 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  f1              4    0[COMRAM] unsigned char 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;		None
  7008 ;; Return value:  Size  Location     Type
  7009 ;;                  4    0[COMRAM] unsigned char 
  7010 ;; Registers used:
  7011 ;;		wreg, status,2, status,0
  7012 ;; Tracked objects:
  7013 ;;		On entry : 0/0
  7014 ;;		On exit  : 0/0
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  7017 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7020 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7021 ;;Total ram usage:        4 bytes
  7022 ;; Hardware stack levels used: 1
  7023 ;; This function calls:
  7024 ;;		Nothing
  7025 ;; This function is called by:
  7026 ;;		_efgtoa
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           	psect	text18
  7031  00C1A0                     __ptext18:
  7032                           	callstack 0
  7033  00C1A0                     ___flneg:
  7034                           	callstack 26
  7035  00C1A0  5001               	movf	___flneg@f1^0,w,c
  7036  00C1A2  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7037  00C1A4  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7038  00C1A6  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7039  00C1A8  B4D8               	btfsc	status,2,c
  7040  00C1AA  EFD9  F060         	goto	u4501
  7041  00C1AE  EFDB  F060         	goto	u4500
  7042  00C1B2                     u4501:
  7043  00C1B2  EFE3  F060         	goto	l3806
  7044  00C1B6                     u4500:
  7045  00C1B6  0E00               	movlw	0
  7046  00C1B8  1A01               	xorwf	___flneg@f1^0,f,c
  7047  00C1BA  0E00               	movlw	0
  7048  00C1BC  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7049  00C1BE  0E00               	movlw	0
  7050  00C1C0  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7051  00C1C2  0E80               	movlw	128
  7052  00C1C4  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7053  00C1C6                     l3806:
  7054  00C1C6  C001  F001         	movff	___flneg@f1,?___flneg
  7055  00C1CA  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7056  00C1CE  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7057  00C1D2  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7058  00C1D6  0012               	return		;funcret
  7059  00C1D8                     __end_of___flneg:
  7060                           	callstack 0
  7061                           
  7062 ;; *************** function ___flmul *****************
  7063 ;; Defined at:
  7064 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  7065 ;; Parameters:    Size  Location     Type
  7066 ;;  b               4    0[COMRAM] unsigned char 
  7067 ;;  a               4    4[COMRAM] unsigned char 
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;  prod            4   19[COMRAM] struct .
  7070 ;;  grs             4   13[COMRAM] unsigned long 
  7071 ;;  temp            2   23[COMRAM] struct .
  7072 ;;  bexp            1   18[COMRAM] unsigned char 
  7073 ;;  aexp            1   17[COMRAM] unsigned char 
  7074 ;;  sign            1   12[COMRAM] unsigned char 
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  4    0[COMRAM] unsigned char 
  7077 ;; Registers used:
  7078 ;;		wreg, status,2, status,0, prodl, prodh
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  7084 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7085 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7086 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7087 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7088 ;;Total ram usage:       25 bytes
  7089 ;; Hardware stack levels used: 1
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_efgtoa
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           	psect	text19
  7098  00E034                     __ptext19:
  7099                           	callstack 0
  7100  00E034                     ___flmul:
  7101                           	callstack 26
  7102  00E034  5004               	movf	(___flmul@b+3)^0,w,c
  7103  00E036  0B80               	andlw	128
  7104  00E038  6E0D               	movwf	___flmul@sign^0,c
  7105  00E03A  5004               	movf	(___flmul@b+3)^0,w,c
  7106  00E03C  2404               	addwf	(___flmul@b+3)^0,w,c
  7107  00E03E  6E13               	movwf	___flmul@bexp^0,c
  7108  00E040  AE03               	btfss	(___flmul@b+2)^0,7,c
  7109  00E042  EF25  F070         	goto	u4111
  7110  00E046  EF27  F070         	goto	u4110
  7111  00E04A                     u4111:
  7112  00E04A  EF28  F070         	goto	l3554
  7113  00E04E                     u4110:
  7114  00E04E  8013               	bsf	___flmul@bexp^0,0,c
  7115  00E050                     l3554:
  7116  00E050  5013               	movf	___flmul@bexp^0,w,c
  7117  00E052  B4D8               	btfsc	status,2,c
  7118  00E054  EF2E  F070         	goto	u4121
  7119  00E058  EF30  F070         	goto	u4120
  7120  00E05C                     u4121:
  7121  00E05C  EF43  F070         	goto	l3562
  7122  00E060                     u4120:
  7123  00E060  2813               	incf	___flmul@bexp^0,w,c
  7124  00E062  A4D8               	btfss	status,2,c
  7125  00E064  EF36  F070         	goto	u4131
  7126  00E068  EF38  F070         	goto	u4130
  7127  00E06C                     u4131:
  7128  00E06C  EF40  F070         	goto	l3560
  7129  00E070                     u4130:
  7130  00E070  0E00               	movlw	0
  7131  00E072  6E01               	movwf	___flmul@b^0,c
  7132  00E074  0E00               	movlw	0
  7133  00E076  6E02               	movwf	(___flmul@b+1)^0,c
  7134  00E078  0E00               	movlw	0
  7135  00E07A  6E03               	movwf	(___flmul@b+2)^0,c
  7136  00E07C  0E00               	movlw	0
  7137  00E07E  6E04               	movwf	(___flmul@b+3)^0,c
  7138  00E080                     l3560:
  7139  00E080  8E03               	bsf	(___flmul@b+2)^0,7,c
  7140  00E082  EF4B  F070         	goto	l3564
  7141  00E086                     l3562:
  7142  00E086  0E00               	movlw	0
  7143  00E088  6E01               	movwf	___flmul@b^0,c
  7144  00E08A  0E00               	movlw	0
  7145  00E08C  6E02               	movwf	(___flmul@b+1)^0,c
  7146  00E08E  0E00               	movlw	0
  7147  00E090  6E03               	movwf	(___flmul@b+2)^0,c
  7148  00E092  0E00               	movlw	0
  7149  00E094  6E04               	movwf	(___flmul@b+3)^0,c
  7150  00E096                     l3564:
  7151  00E096  5008               	movf	(___flmul@a+3)^0,w,c
  7152  00E098  0B80               	andlw	128
  7153  00E09A  1A0D               	xorwf	___flmul@sign^0,f,c
  7154  00E09C  5008               	movf	(___flmul@a+3)^0,w,c
  7155  00E09E  2408               	addwf	(___flmul@a+3)^0,w,c
  7156  00E0A0  6E12               	movwf	___flmul@aexp^0,c
  7157  00E0A2  AE07               	btfss	(___flmul@a+2)^0,7,c
  7158  00E0A4  EF56  F070         	goto	u4141
  7159  00E0A8  EF58  F070         	goto	u4140
  7160  00E0AC                     u4141:
  7161  00E0AC  EF59  F070         	goto	l3572
  7162  00E0B0                     u4140:
  7163  00E0B0  8012               	bsf	___flmul@aexp^0,0,c
  7164  00E0B2                     l3572:
  7165  00E0B2  5012               	movf	___flmul@aexp^0,w,c
  7166  00E0B4  B4D8               	btfsc	status,2,c
  7167  00E0B6  EF5F  F070         	goto	u4151
  7168  00E0BA  EF61  F070         	goto	u4150
  7169  00E0BE                     u4151:
  7170  00E0BE  EF74  F070         	goto	l3580
  7171  00E0C2                     u4150:
  7172  00E0C2  2812               	incf	___flmul@aexp^0,w,c
  7173  00E0C4  A4D8               	btfss	status,2,c
  7174  00E0C6  EF67  F070         	goto	u4161
  7175  00E0CA  EF69  F070         	goto	u4160
  7176  00E0CE                     u4161:
  7177  00E0CE  EF71  F070         	goto	l3578
  7178  00E0D2                     u4160:
  7179  00E0D2  0E00               	movlw	0
  7180  00E0D4  6E05               	movwf	___flmul@a^0,c
  7181  00E0D6  0E00               	movlw	0
  7182  00E0D8  6E06               	movwf	(___flmul@a+1)^0,c
  7183  00E0DA  0E00               	movlw	0
  7184  00E0DC  6E07               	movwf	(___flmul@a+2)^0,c
  7185  00E0DE  0E00               	movlw	0
  7186  00E0E0  6E08               	movwf	(___flmul@a+3)^0,c
  7187  00E0E2                     l3578:
  7188  00E0E2  8E07               	bsf	(___flmul@a+2)^0,7,c
  7189  00E0E4  EF7C  F070         	goto	l747
  7190  00E0E8                     l3580:
  7191  00E0E8  0E00               	movlw	0
  7192  00E0EA  6E05               	movwf	___flmul@a^0,c
  7193  00E0EC  0E00               	movlw	0
  7194  00E0EE  6E06               	movwf	(___flmul@a+1)^0,c
  7195  00E0F0  0E00               	movlw	0
  7196  00E0F2  6E07               	movwf	(___flmul@a+2)^0,c
  7197  00E0F4  0E00               	movlw	0
  7198  00E0F6  6E08               	movwf	(___flmul@a+3)^0,c
  7199  00E0F8                     l747:
  7200  00E0F8  5012               	movf	___flmul@aexp^0,w,c
  7201  00E0FA  B4D8               	btfsc	status,2,c
  7202  00E0FC  EF82  F070         	goto	u4171
  7203  00E100  EF84  F070         	goto	u4170
  7204  00E104                     u4171:
  7205  00E104  EF8C  F070         	goto	l3584
  7206  00E108                     u4170:
  7207  00E108  5013               	movf	___flmul@bexp^0,w,c
  7208  00E10A  A4D8               	btfss	status,2,c
  7209  00E10C  EF8A  F070         	goto	u4181
  7210  00E110  EF8C  F070         	goto	u4180
  7211  00E114                     u4181:
  7212  00E114  EF96  F070         	goto	l3588
  7213  00E118                     u4180:
  7214  00E118                     l3584:
  7215  00E118  0E00               	movlw	0
  7216  00E11A  6E01               	movwf	?___flmul^0,c
  7217  00E11C  0E00               	movlw	0
  7218  00E11E  6E02               	movwf	(?___flmul+1)^0,c
  7219  00E120  0E00               	movlw	0
  7220  00E122  6E03               	movwf	(?___flmul+2)^0,c
  7221  00E124  0E00               	movlw	0
  7222  00E126  6E04               	movwf	(?___flmul+3)^0,c
  7223  00E128  EF2E  F072         	goto	l751
  7224  00E12C                     l3588:
  7225  00E12C  5007               	movf	(___flmul@a+2)^0,w,c
  7226  00E12E  0201               	mulwf	___flmul@b^0,c
  7227  00E130  CFF3 F018          	movff	prodl,___flmul@temp
  7228  00E134  CFF4 F019          	movff	prodh,___flmul@temp+1
  7229  00E138  5018               	movf	___flmul@temp^0,w,c
  7230  00E13A  6E0E               	movwf	___flmul@grs^0,c
  7231  00E13C  6A0F               	clrf	(___flmul@grs+1)^0,c
  7232  00E13E  6A10               	clrf	(___flmul@grs+2)^0,c
  7233  00E140  6A11               	clrf	(___flmul@grs+3)^0,c
  7234  00E142  5019               	movf	(___flmul@temp+1)^0,w,c
  7235  00E144  6E14               	movwf	___flmul@prod^0,c
  7236  00E146  6A15               	clrf	(___flmul@prod+1)^0,c
  7237  00E148  6A16               	clrf	(___flmul@prod+2)^0,c
  7238  00E14A  6A17               	clrf	(___flmul@prod+3)^0,c
  7239  00E14C  5006               	movf	(___flmul@a+1)^0,w,c
  7240  00E14E  0202               	mulwf	(___flmul@b+1)^0,c
  7241  00E150  CFF3 F018          	movff	prodl,___flmul@temp
  7242  00E154  CFF4 F019          	movff	prodh,___flmul@temp+1
  7243  00E158  5018               	movf	___flmul@temp^0,w,c
  7244  00E15A  260E               	addwf	___flmul@grs^0,f,c
  7245  00E15C  0E00               	movlw	0
  7246  00E15E  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7247  00E160  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7248  00E162  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7249  00E164  5019               	movf	(___flmul@temp+1)^0,w,c
  7250  00E166  2614               	addwf	___flmul@prod^0,f,c
  7251  00E168  0E00               	movlw	0
  7252  00E16A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7253  00E16C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7254  00E16E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7255  00E170  5005               	movf	___flmul@a^0,w,c
  7256  00E172  0203               	mulwf	(___flmul@b+2)^0,c
  7257  00E174  CFF3 F018          	movff	prodl,___flmul@temp
  7258  00E178  CFF4 F019          	movff	prodh,___flmul@temp+1
  7259  00E17C  5018               	movf	___flmul@temp^0,w,c
  7260  00E17E  260E               	addwf	___flmul@grs^0,f,c
  7261  00E180  0E00               	movlw	0
  7262  00E182  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7263  00E184  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7264  00E186  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7265  00E188  5019               	movf	(___flmul@temp+1)^0,w,c
  7266  00E18A  2614               	addwf	___flmul@prod^0,f,c
  7267  00E18C  0E00               	movlw	0
  7268  00E18E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7269  00E190  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7270  00E192  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7271  00E194  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7272  00E198  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7273  00E19C  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7274  00E1A0  6A0E               	clrf	___flmul@grs^0,c
  7275  00E1A2  5005               	movf	___flmul@a^0,w,c
  7276  00E1A4  0202               	mulwf	(___flmul@b+1)^0,c
  7277  00E1A6  CFF3 F018          	movff	prodl,___flmul@temp
  7278  00E1AA  CFF4 F019          	movff	prodh,___flmul@temp+1
  7279  00E1AE  5018               	movf	___flmul@temp^0,w,c
  7280  00E1B0  260E               	addwf	___flmul@grs^0,f,c
  7281  00E1B2  5019               	movf	(___flmul@temp+1)^0,w,c
  7282  00E1B4  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7283  00E1B6  0E00               	movlw	0
  7284  00E1B8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7285  00E1BA  0E00               	movlw	0
  7286  00E1BC  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7287  00E1BE  5006               	movf	(___flmul@a+1)^0,w,c
  7288  00E1C0  0201               	mulwf	___flmul@b^0,c
  7289  00E1C2  CFF3 F018          	movff	prodl,___flmul@temp
  7290  00E1C6  CFF4 F019          	movff	prodh,___flmul@temp+1
  7291  00E1CA  5018               	movf	___flmul@temp^0,w,c
  7292  00E1CC  260E               	addwf	___flmul@grs^0,f,c
  7293  00E1CE  5019               	movf	(___flmul@temp+1)^0,w,c
  7294  00E1D0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7295  00E1D2  0E00               	movlw	0
  7296  00E1D4  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7297  00E1D6  0E00               	movlw	0
  7298  00E1D8  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7299  00E1DA  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7300  00E1DE  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7301  00E1E2  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7302  00E1E6  6A0E               	clrf	___flmul@grs^0,c
  7303  00E1E8  5005               	movf	___flmul@a^0,w,c
  7304  00E1EA  0201               	mulwf	___flmul@b^0,c
  7305  00E1EC  CFF3 F018          	movff	prodl,___flmul@temp
  7306  00E1F0  CFF4 F019          	movff	prodh,___flmul@temp+1
  7307  00E1F4  5018               	movf	___flmul@temp^0,w,c
  7308  00E1F6  260E               	addwf	___flmul@grs^0,f,c
  7309  00E1F8  5019               	movf	(___flmul@temp+1)^0,w,c
  7310  00E1FA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7311  00E1FC  0E00               	movlw	0
  7312  00E1FE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7313  00E200  0E00               	movlw	0
  7314  00E202  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7315  00E204  5007               	movf	(___flmul@a+2)^0,w,c
  7316  00E206  0202               	mulwf	(___flmul@b+1)^0,c
  7317  00E208  CFF3 F018          	movff	prodl,___flmul@temp
  7318  00E20C  CFF4 F019          	movff	prodh,___flmul@temp+1
  7319  00E210  5018               	movf	___flmul@temp^0,w,c
  7320  00E212  2614               	addwf	___flmul@prod^0,f,c
  7321  00E214  5019               	movf	(___flmul@temp+1)^0,w,c
  7322  00E216  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7323  00E218  0E00               	movlw	0
  7324  00E21A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7325  00E21C  0E00               	movlw	0
  7326  00E21E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7327  00E220  5006               	movf	(___flmul@a+1)^0,w,c
  7328  00E222  0203               	mulwf	(___flmul@b+2)^0,c
  7329  00E224  CFF3 F018          	movff	prodl,___flmul@temp
  7330  00E228  CFF4 F019          	movff	prodh,___flmul@temp+1
  7331  00E22C  5018               	movf	___flmul@temp^0,w,c
  7332  00E22E  2614               	addwf	___flmul@prod^0,f,c
  7333  00E230  5019               	movf	(___flmul@temp+1)^0,w,c
  7334  00E232  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7335  00E234  0E00               	movlw	0
  7336  00E236  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7337  00E238  0E00               	movlw	0
  7338  00E23A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7339  00E23C  5007               	movf	(___flmul@a+2)^0,w,c
  7340  00E23E  0203               	mulwf	(___flmul@b+2)^0,c
  7341  00E240  CFF3 F018          	movff	prodl,___flmul@temp
  7342  00E244  CFF4 F019          	movff	prodh,___flmul@temp+1
  7343  00E248  5018               	movf	___flmul@temp^0,w,c
  7344  00E24A  6E09               	movwf	??___flmul^0,c
  7345  00E24C  5019               	movf	(___flmul@temp+1)^0,w,c
  7346  00E24E  6E0A               	movwf	(??___flmul+1)^0,c
  7347  00E250  6A0B               	clrf	(??___flmul+2)^0,c
  7348  00E252  6A0C               	clrf	(??___flmul+3)^0,c
  7349  00E254  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  7350  00E258  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  7351  00E25C  C009  F00A         	movff	??___flmul,??___flmul+1
  7352  00E260  6A09               	clrf	??___flmul^0,c
  7353  00E262  5009               	movf	??___flmul^0,w,c
  7354  00E264  2614               	addwf	___flmul@prod^0,f,c
  7355  00E266  500A               	movf	(??___flmul+1)^0,w,c
  7356  00E268  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7357  00E26A  500B               	movf	(??___flmul+2)^0,w,c
  7358  00E26C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7359  00E26E  500C               	movf	(??___flmul+3)^0,w,c
  7360  00E270  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7361  00E272  C00E  F009         	movff	___flmul@grs,??___flmul
  7362  00E276  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  7363  00E27A  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  7364  00E27E  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  7365  00E282  0E19               	movlw	25
  7366  00E284  EF49  F071         	goto	u4190
  7367  00E288                     u4195:
  7368  00E288  90D8               	bcf	status,0,c
  7369  00E28A  320C               	rrcf	(??___flmul+3)^0,f,c
  7370  00E28C  320B               	rrcf	(??___flmul+2)^0,f,c
  7371  00E28E  320A               	rrcf	(??___flmul+1)^0,f,c
  7372  00E290  3209               	rrcf	??___flmul^0,f,c
  7373  00E292                     u4190:
  7374  00E292  2EE8               	decfsz	wreg,f,c
  7375  00E294  EF44  F071         	goto	u4195
  7376  00E298  5009               	movf	??___flmul^0,w,c
  7377  00E29A  2614               	addwf	___flmul@prod^0,f,c
  7378  00E29C  500A               	movf	(??___flmul+1)^0,w,c
  7379  00E29E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7380  00E2A0  500B               	movf	(??___flmul+2)^0,w,c
  7381  00E2A2  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7382  00E2A4  500C               	movf	(??___flmul+3)^0,w,c
  7383  00E2A6  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7384  00E2A8  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7385  00E2AC  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7386  00E2B0  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7387  00E2B4  6A0E               	clrf	___flmul@grs^0,c
  7388  00E2B6  5012               	movf	___flmul@aexp^0,w,c
  7389  00E2B8  C013  F009         	movff	___flmul@bexp,??___flmul
  7390  00E2BC  6A0A               	clrf	(??___flmul+1)^0,c
  7391  00E2BE  2609               	addwf	??___flmul^0,f,c
  7392  00E2C0  0E00               	movlw	0
  7393  00E2C2  220A               	addwfc	(??___flmul+1)^0,f,c
  7394  00E2C4  0E82               	movlw	130
  7395  00E2C6  2409               	addwf	??___flmul^0,w,c
  7396  00E2C8  6E18               	movwf	___flmul@temp^0,c
  7397  00E2CA  0EFF               	movlw	255
  7398  00E2CC  200A               	addwfc	(??___flmul+1)^0,w,c
  7399  00E2CE  6E19               	movwf	(___flmul@temp+1)^0,c
  7400  00E2D0  EF7F  F071         	goto	l3636
  7401  00E2D4                     l3630:
  7402  00E2D4  90D8               	bcf	status,0,c
  7403  00E2D6  3614               	rlcf	___flmul@prod^0,f,c
  7404  00E2D8  3615               	rlcf	(___flmul@prod+1)^0,f,c
  7405  00E2DA  3616               	rlcf	(___flmul@prod+2)^0,f,c
  7406  00E2DC  3617               	rlcf	(___flmul@prod+3)^0,f,c
  7407  00E2DE  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7408  00E2E0  EF74  F071         	goto	u4201
  7409  00E2E4  EF76  F071         	goto	u4200
  7410  00E2E8                     u4201:
  7411  00E2E8  EF77  F071         	goto	l754
  7412  00E2EC                     u4200:
  7413  00E2EC  8014               	bsf	___flmul@prod^0,0,c
  7414  00E2EE                     l754:
  7415  00E2EE  90D8               	bcf	status,0,c
  7416  00E2F0  360E               	rlcf	___flmul@grs^0,f,c
  7417  00E2F2  360F               	rlcf	(___flmul@grs+1)^0,f,c
  7418  00E2F4  3610               	rlcf	(___flmul@grs+2)^0,f,c
  7419  00E2F6  3611               	rlcf	(___flmul@grs+3)^0,f,c
  7420  00E2F8  0618               	decf	___flmul@temp^0,f,c
  7421  00E2FA  A0D8               	btfss	status,0,c
  7422  00E2FC  0619               	decf	(___flmul@temp+1)^0,f,c
  7423  00E2FE                     l3636:
  7424  00E2FE  AE16               	btfss	(___flmul@prod+2)^0,7,c
  7425  00E300  EF84  F071         	goto	u4211
  7426  00E304  EF86  F071         	goto	u4210
  7427  00E308                     u4211:
  7428  00E308  EF6A  F071         	goto	l3630
  7429  00E30C                     u4210:
  7430  00E30C  0E00               	movlw	0
  7431  00E30E  6E12               	movwf	___flmul@aexp^0,c
  7432  00E310  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7433  00E312  EF8D  F071         	goto	u4221
  7434  00E316  EF8F  F071         	goto	u4220
  7435  00E31A                     u4221:
  7436  00E31A  EFB3  F071         	goto	l756
  7437  00E31E                     u4220:
  7438  00E31E  0EFF               	movlw	255
  7439  00E320  140E               	andwf	___flmul@grs^0,w,c
  7440  00E322  6E09               	movwf	??___flmul^0,c
  7441  00E324  0EFF               	movlw	255
  7442  00E326  140F               	andwf	(___flmul@grs+1)^0,w,c
  7443  00E328  6E0A               	movwf	(??___flmul+1)^0,c
  7444  00E32A  0EFF               	movlw	255
  7445  00E32C  1410               	andwf	(___flmul@grs+2)^0,w,c
  7446  00E32E  6E0B               	movwf	(??___flmul+2)^0,c
  7447  00E330  0E7F               	movlw	127
  7448  00E332  1411               	andwf	(___flmul@grs+3)^0,w,c
  7449  00E334  6E0C               	movwf	(??___flmul+3)^0,c
  7450  00E336  5009               	movf	??___flmul^0,w,c
  7451  00E338  100A               	iorwf	(??___flmul+1)^0,w,c
  7452  00E33A  100B               	iorwf	(??___flmul+2)^0,w,c
  7453  00E33C  100C               	iorwf	(??___flmul+3)^0,w,c
  7454  00E33E  B4D8               	btfsc	status,2,c
  7455  00E340  EFA4  F071         	goto	u4231
  7456  00E344  EFA6  F071         	goto	u4230
  7457  00E348                     u4231:
  7458  00E348  EFAA  F071         	goto	l757
  7459  00E34C                     u4230:
  7460  00E34C                     l3644:
  7461  00E34C  0E01               	movlw	1
  7462  00E34E  6E12               	movwf	___flmul@aexp^0,c
  7463  00E350  EFB3  F071         	goto	l756
  7464  00E354                     l757:
  7465  00E354  A014               	btfss	___flmul@prod^0,0,c
  7466  00E356  EFAF  F071         	goto	u4241
  7467  00E35A  EFB1  F071         	goto	u4240
  7468  00E35E                     u4241:
  7469  00E35E  EFB3  F071         	goto	l756
  7470  00E362                     u4240:
  7471  00E362  EFA6  F071         	goto	l3644
  7472  00E366                     l756:
  7473  00E366  5012               	movf	___flmul@aexp^0,w,c
  7474  00E368  B4D8               	btfsc	status,2,c
  7475  00E36A  EFB9  F071         	goto	u4251
  7476  00E36E  EFBB  F071         	goto	u4250
  7477  00E372                     u4251:
  7478  00E372  EFDF  F071         	goto	l3656
  7479  00E376                     u4250:
  7480  00E376  0E01               	movlw	1
  7481  00E378  2614               	addwf	___flmul@prod^0,f,c
  7482  00E37A  0E00               	movlw	0
  7483  00E37C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7484  00E37E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7485  00E380  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7486  00E382  A017               	btfss	(___flmul@prod+3)^0,0,c
  7487  00E384  EFC6  F071         	goto	u4261
  7488  00E388  EFC8  F071         	goto	u4260
  7489  00E38C                     u4261:
  7490  00E38C  EFDF  F071         	goto	l3656
  7491  00E390                     u4260:
  7492  00E390  C014  F009         	movff	___flmul@prod,??___flmul
  7493  00E394  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  7494  00E398  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  7495  00E39C  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  7496  00E3A0  340C               	rlcf	(??___flmul+3)^0,w,c
  7497  00E3A2  320C               	rrcf	(??___flmul+3)^0,f,c
  7498  00E3A4  320B               	rrcf	(??___flmul+2)^0,f,c
  7499  00E3A6  320A               	rrcf	(??___flmul+1)^0,f,c
  7500  00E3A8  3209               	rrcf	??___flmul^0,f,c
  7501  00E3AA  C009  F014         	movff	??___flmul,___flmul@prod
  7502  00E3AE  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  7503  00E3B2  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  7504  00E3B6  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  7505  00E3BA  4A18               	infsnz	___flmul@temp^0,f,c
  7506  00E3BC  2A19               	incf	(___flmul@temp+1)^0,f,c
  7507  00E3BE                     l3656:
  7508  00E3BE  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7509  00E3C0  EFEA  F071         	goto	u4271
  7510  00E3C4  5019               	movf	(___flmul@temp+1)^0,w,c
  7511  00E3C6  E108               	bnz	u4270
  7512  00E3C8  2818               	incf	___flmul@temp^0,w,c
  7513  00E3CA  A0D8               	btfss	status,0,c
  7514  00E3CC  EFEA  F071         	goto	u4271
  7515  00E3D0  EFEC  F071         	goto	u4270
  7516  00E3D4                     u4271:
  7517  00E3D4  EFF6  F071         	goto	l3660
  7518  00E3D8                     u4270:
  7519  00E3D8  0E00               	movlw	0
  7520  00E3DA  6E14               	movwf	___flmul@prod^0,c
  7521  00E3DC  0E00               	movlw	0
  7522  00E3DE  6E15               	movwf	(___flmul@prod+1)^0,c
  7523  00E3E0  0E80               	movlw	128
  7524  00E3E2  6E16               	movwf	(___flmul@prod+2)^0,c
  7525  00E3E4  0E7F               	movlw	127
  7526  00E3E6  6E17               	movwf	(___flmul@prod+3)^0,c
  7527  00E3E8  EF24  F072         	goto	l3672
  7528  00E3EC                     l3660:
  7529  00E3EC  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7530  00E3EE  EF03  F072         	goto	u4280
  7531  00E3F2  5019               	movf	(___flmul@temp+1)^0,w,c
  7532  00E3F4  E106               	bnz	u4281
  7533  00E3F6  0418               	decf	___flmul@temp^0,w,c
  7534  00E3F8  B0D8               	btfsc	status,0,c
  7535  00E3FA  EF01  F072         	goto	u4281
  7536  00E3FE  EF03  F072         	goto	u4280
  7537  00E402                     u4281:
  7538  00E402  EF0F  F072         	goto	l764
  7539  00E406                     u4280:
  7540  00E406  0E00               	movlw	0
  7541  00E408  6E14               	movwf	___flmul@prod^0,c
  7542  00E40A  0E00               	movlw	0
  7543  00E40C  6E15               	movwf	(___flmul@prod+1)^0,c
  7544  00E40E  0E00               	movlw	0
  7545  00E410  6E16               	movwf	(___flmul@prod+2)^0,c
  7546  00E412  0E00               	movlw	0
  7547  00E414  6E17               	movwf	(___flmul@prod+3)^0,c
  7548  00E416  0E00               	movlw	0
  7549  00E418  6E0D               	movwf	___flmul@sign^0,c
  7550  00E41A  EF24  F072         	goto	l3672
  7551  00E41E                     l764:
  7552  00E41E  C018  F013         	movff	___flmul@temp,___flmul@bexp
  7553  00E422  0EFF               	movlw	255
  7554  00E424  1614               	andwf	___flmul@prod^0,f,c
  7555  00E426  0EFF               	movlw	255
  7556  00E428  1615               	andwf	(___flmul@prod+1)^0,f,c
  7557  00E42A  0E7F               	movlw	127
  7558  00E42C  1616               	andwf	(___flmul@prod+2)^0,f,c
  7559  00E42E  0E00               	movlw	0
  7560  00E430  1617               	andwf	(___flmul@prod+3)^0,f,c
  7561  00E432  A013               	btfss	___flmul@bexp^0,0,c
  7562  00E434  EF1E  F072         	goto	u4291
  7563  00E438  EF20  F072         	goto	u4290
  7564  00E43C                     u4291:
  7565  00E43C  EF21  F072         	goto	l3670
  7566  00E440                     u4290:
  7567  00E440  8E16               	bsf	(___flmul@prod+2)^0,7,c
  7568  00E442                     l3670:
  7569  00E442  90D8               	bcf	status,0,c
  7570  00E444  3013               	rrcf	___flmul@bexp^0,w,c
  7571  00E446  6E17               	movwf	(___flmul@prod+3)^0,c
  7572  00E448                     l3672:
  7573  00E448  500D               	movf	___flmul@sign^0,w,c
  7574  00E44A  1217               	iorwf	(___flmul@prod+3)^0,f,c
  7575  00E44C  C014  F001         	movff	___flmul@prod,?___flmul
  7576  00E450  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  7577  00E454  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  7578  00E458  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  7579  00E45C                     l751:
  7580  00E45C  0012               	return		;funcret
  7581  00E45E                     __end_of___flmul:
  7582                           	callstack 0
  7583                           
  7584 ;; *************** function ___flge *****************
  7585 ;; Defined at:
  7586 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;  ff1             4   25[COMRAM] unsigned char 
  7589 ;;  ff2             4   29[COMRAM] unsigned char 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;		None               void
  7594 ;; Registers used:
  7595 ;;		wreg, status,2, status,0
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  7601 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7603 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7604 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7605 ;;Total ram usage:       12 bytes
  7606 ;; Hardware stack levels used: 1
  7607 ;; This function calls:
  7608 ;;		Nothing
  7609 ;; This function is called by:
  7610 ;;		_efgtoa
  7611 ;; This function uses a non-reentrant model
  7612 ;;
  7613                           
  7614                           	psect	text20
  7615  00CB92                     __ptext20:
  7616                           	callstack 0
  7617  00CB92                     ___flge:
  7618                           	callstack 26
  7619  00CB92  0E00               	movlw	0
  7620  00CB94  141A               	andwf	___flge@ff1^0,w,c
  7621  00CB96  6E22               	movwf	??___flge^0,c
  7622  00CB98  0E00               	movlw	0
  7623  00CB9A  141B               	andwf	(___flge@ff1+1)^0,w,c
  7624  00CB9C  6E23               	movwf	(??___flge+1)^0,c
  7625  00CB9E  0E80               	movlw	128
  7626  00CBA0  141C               	andwf	(___flge@ff1+2)^0,w,c
  7627  00CBA2  6E24               	movwf	(??___flge+2)^0,c
  7628  00CBA4  0E7F               	movlw	127
  7629  00CBA6  141D               	andwf	(___flge@ff1+3)^0,w,c
  7630  00CBA8  6E25               	movwf	(??___flge+3)^0,c
  7631  00CBAA  5022               	movf	??___flge^0,w,c
  7632  00CBAC  1023               	iorwf	(??___flge+1)^0,w,c
  7633  00CBAE  1024               	iorwf	(??___flge+2)^0,w,c
  7634  00CBB0  1025               	iorwf	(??___flge+3)^0,w,c
  7635  00CBB2  A4D8               	btfss	status,2,c
  7636  00CBB4  EFDE  F065         	goto	u4451
  7637  00CBB8  EFE0  F065         	goto	u4450
  7638  00CBBC                     u4451:
  7639  00CBBC  EFE8  F065         	goto	l3784
  7640  00CBC0                     u4450:
  7641  00CBC0  0E00               	movlw	0
  7642  00CBC2  6E1A               	movwf	___flge@ff1^0,c
  7643  00CBC4  0E00               	movlw	0
  7644  00CBC6  6E1B               	movwf	(___flge@ff1+1)^0,c
  7645  00CBC8  0E00               	movlw	0
  7646  00CBCA  6E1C               	movwf	(___flge@ff1+2)^0,c
  7647  00CBCC  0E00               	movlw	0
  7648  00CBCE  6E1D               	movwf	(___flge@ff1+3)^0,c
  7649  00CBD0                     l3784:
  7650  00CBD0  0E00               	movlw	0
  7651  00CBD2  141E               	andwf	___flge@ff2^0,w,c
  7652  00CBD4  6E22               	movwf	??___flge^0,c
  7653  00CBD6  0E00               	movlw	0
  7654  00CBD8  141F               	andwf	(___flge@ff2+1)^0,w,c
  7655  00CBDA  6E23               	movwf	(??___flge+1)^0,c
  7656  00CBDC  0E80               	movlw	128
  7657  00CBDE  1420               	andwf	(___flge@ff2+2)^0,w,c
  7658  00CBE0  6E24               	movwf	(??___flge+2)^0,c
  7659  00CBE2  0E7F               	movlw	127
  7660  00CBE4  1421               	andwf	(___flge@ff2+3)^0,w,c
  7661  00CBE6  6E25               	movwf	(??___flge+3)^0,c
  7662  00CBE8  5022               	movf	??___flge^0,w,c
  7663  00CBEA  1023               	iorwf	(??___flge+1)^0,w,c
  7664  00CBEC  1024               	iorwf	(??___flge+2)^0,w,c
  7665  00CBEE  1025               	iorwf	(??___flge+3)^0,w,c
  7666  00CBF0  A4D8               	btfss	status,2,c
  7667  00CBF2  EFFD  F065         	goto	u4461
  7668  00CBF6  EFFF  F065         	goto	u4460
  7669  00CBFA                     u4461:
  7670  00CBFA  EF07  F066         	goto	l3788
  7671  00CBFE                     u4460:
  7672  00CBFE  0E00               	movlw	0
  7673  00CC00  6E1E               	movwf	___flge@ff2^0,c
  7674  00CC02  0E00               	movlw	0
  7675  00CC04  6E1F               	movwf	(___flge@ff2+1)^0,c
  7676  00CC06  0E00               	movlw	0
  7677  00CC08  6E20               	movwf	(___flge@ff2+2)^0,c
  7678  00CC0A  0E00               	movlw	0
  7679  00CC0C  6E21               	movwf	(___flge@ff2+3)^0,c
  7680  00CC0E                     l3788:
  7681  00CC0E  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  7682  00CC10  EF0C  F066         	goto	u4471
  7683  00CC14  EF0E  F066         	goto	u4470
  7684  00CC18                     u4471:
  7685  00CC18  EF17  F066         	goto	l3792
  7686  00CC1C                     u4470:
  7687  00CC1C  6C1A               	negf	___flge@ff1^0,c
  7688  00CC1E  1E1B               	comf	(___flge@ff1+1)^0,f,c
  7689  00CC20  B0D8               	btfsc	status,0,c
  7690  00CC22  2A1B               	incf	(___flge@ff1+1)^0,f,c
  7691  00CC24  1E1C               	comf	(___flge@ff1+2)^0,f,c
  7692  00CC26  B0D8               	btfsc	status,0,c
  7693  00CC28  2A1C               	incf	(___flge@ff1+2)^0,f,c
  7694  00CC2A  0E80               	movlw	128
  7695  00CC2C  561D               	subfwb	(___flge@ff1+3)^0,f,c
  7696  00CC2E                     l3792:
  7697  00CC2E  AE21               	btfss	(___flge@ff2+3)^0,7,c
  7698  00CC30  EF1C  F066         	goto	u4481
  7699  00CC34  EF1E  F066         	goto	u4480
  7700  00CC38                     u4481:
  7701  00CC38  EF27  F066         	goto	l398
  7702  00CC3C                     u4480:
  7703  00CC3C  6C1E               	negf	___flge@ff2^0,c
  7704  00CC3E  1E1F               	comf	(___flge@ff2+1)^0,f,c
  7705  00CC40  B0D8               	btfsc	status,0,c
  7706  00CC42  2A1F               	incf	(___flge@ff2+1)^0,f,c
  7707  00CC44  1E20               	comf	(___flge@ff2+2)^0,f,c
  7708  00CC46  B0D8               	btfsc	status,0,c
  7709  00CC48  2A20               	incf	(___flge@ff2+2)^0,f,c
  7710  00CC4A  0E80               	movlw	128
  7711  00CC4C  5621               	subfwb	(___flge@ff2+3)^0,f,c
  7712  00CC4E                     l398:
  7713  00CC4E  0E00               	movlw	0
  7714  00CC50  1A1A               	xorwf	___flge@ff1^0,f,c
  7715  00CC52  0E00               	movlw	0
  7716  00CC54  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  7717  00CC56  0E00               	movlw	0
  7718  00CC58  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  7719  00CC5A  0E80               	movlw	128
  7720  00CC5C  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  7721  00CC5E  0E00               	movlw	0
  7722  00CC60  1A1E               	xorwf	___flge@ff2^0,f,c
  7723  00CC62  0E00               	movlw	0
  7724  00CC64  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  7725  00CC66  0E00               	movlw	0
  7726  00CC68  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  7727  00CC6A  0E80               	movlw	128
  7728  00CC6C  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  7729  00CC6E  501E               	movf	___flge@ff2^0,w,c
  7730  00CC70  5C1A               	subwf	___flge@ff1^0,w,c
  7731  00CC72  501F               	movf	(___flge@ff2+1)^0,w,c
  7732  00CC74  581B               	subwfb	(___flge@ff1+1)^0,w,c
  7733  00CC76  5020               	movf	(___flge@ff2+2)^0,w,c
  7734  00CC78  581C               	subwfb	(___flge@ff1+2)^0,w,c
  7735  00CC7A  5021               	movf	(___flge@ff2+3)^0,w,c
  7736  00CC7C  581D               	subwfb	(___flge@ff1+3)^0,w,c
  7737  00CC7E  B0D8               	btfsc	status,0,c
  7738  00CC80  EF44  F066         	goto	u4491
  7739  00CC84  EF46  F066         	goto	u4490
  7740  00CC88                     u4491:
  7741  00CC88  EF49  F066         	goto	l3798
  7742  00CC8C                     u4490:
  7743  00CC8C  90D8               	bcf	status,0,c
  7744  00CC8E  EF4A  F066         	goto	l403
  7745  00CC92                     l3798:
  7746  00CC92  80D8               	bsf	status,0,c
  7747  00CC94                     l403:
  7748  00CC94  0012               	return		;funcret
  7749  00CC96                     __end_of___flge:
  7750                           	callstack 0
  7751                           
  7752 ;; *************** function ___fleq *****************
  7753 ;; Defined at:
  7754 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  7755 ;; Parameters:    Size  Location     Type
  7756 ;;  ff1             4    0[COMRAM] unsigned char 
  7757 ;;  ff2             4    4[COMRAM] unsigned char 
  7758 ;; Auto vars:     Size  Location     Type
  7759 ;;		None
  7760 ;; Return value:  Size  Location     Type
  7761 ;;		None               void
  7762 ;; Registers used:
  7763 ;;		wreg, status,2, status,0
  7764 ;; Tracked objects:
  7765 ;;		On entry : 0/0
  7766 ;;		On exit  : 0/0
  7767 ;;		Unchanged: 0/0
  7768 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  7769 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7771 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7772 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7773 ;;Total ram usage:       12 bytes
  7774 ;; Hardware stack levels used: 1
  7775 ;; This function calls:
  7776 ;;		Nothing
  7777 ;; This function is called by:
  7778 ;;		_efgtoa
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           	psect	text21
  7783  00C614                     __ptext21:
  7784                           	callstack 0
  7785  00C614                     ___fleq:
  7786                           	callstack 26
  7787  00C614  0E00               	movlw	0
  7788  00C616  1401               	andwf	___fleq@ff1^0,w,c
  7789  00C618  6E09               	movwf	??___fleq^0,c
  7790  00C61A  0E00               	movlw	0
  7791  00C61C  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7792  00C61E  6E0A               	movwf	(??___fleq+1)^0,c
  7793  00C620  0E80               	movlw	128
  7794  00C622  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7795  00C624  6E0B               	movwf	(??___fleq+2)^0,c
  7796  00C626  0E7F               	movlw	127
  7797  00C628  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7798  00C62A  6E0C               	movwf	(??___fleq+3)^0,c
  7799  00C62C  5009               	movf	??___fleq^0,w,c
  7800  00C62E  100A               	iorwf	(??___fleq+1)^0,w,c
  7801  00C630  100B               	iorwf	(??___fleq+2)^0,w,c
  7802  00C632  100C               	iorwf	(??___fleq+3)^0,w,c
  7803  00C634  A4D8               	btfss	status,2,c
  7804  00C636  EF1F  F063         	goto	u4421
  7805  00C63A  EF21  F063         	goto	u4420
  7806  00C63E                     u4421:
  7807  00C63E  EF29  F063         	goto	l3768
  7808  00C642                     u4420:
  7809  00C642  0E00               	movlw	0
  7810  00C644  6E01               	movwf	___fleq@ff1^0,c
  7811  00C646  0E00               	movlw	0
  7812  00C648  6E02               	movwf	(___fleq@ff1+1)^0,c
  7813  00C64A  0E00               	movlw	0
  7814  00C64C  6E03               	movwf	(___fleq@ff1+2)^0,c
  7815  00C64E  0E00               	movlw	0
  7816  00C650  6E04               	movwf	(___fleq@ff1+3)^0,c
  7817  00C652                     l3768:
  7818  00C652  0E00               	movlw	0
  7819  00C654  1405               	andwf	___fleq@ff2^0,w,c
  7820  00C656  6E09               	movwf	??___fleq^0,c
  7821  00C658  0E00               	movlw	0
  7822  00C65A  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7823  00C65C  6E0A               	movwf	(??___fleq+1)^0,c
  7824  00C65E  0E80               	movlw	128
  7825  00C660  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7826  00C662  6E0B               	movwf	(??___fleq+2)^0,c
  7827  00C664  0E7F               	movlw	127
  7828  00C666  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7829  00C668  6E0C               	movwf	(??___fleq+3)^0,c
  7830  00C66A  5009               	movf	??___fleq^0,w,c
  7831  00C66C  100A               	iorwf	(??___fleq+1)^0,w,c
  7832  00C66E  100B               	iorwf	(??___fleq+2)^0,w,c
  7833  00C670  100C               	iorwf	(??___fleq+3)^0,w,c
  7834  00C672  A4D8               	btfss	status,2,c
  7835  00C674  EF3E  F063         	goto	u4431
  7836  00C678  EF40  F063         	goto	u4430
  7837  00C67C                     u4431:
  7838  00C67C  EF48  F063         	goto	l3772
  7839  00C680                     u4430:
  7840  00C680  0E00               	movlw	0
  7841  00C682  6E05               	movwf	___fleq@ff2^0,c
  7842  00C684  0E00               	movlw	0
  7843  00C686  6E06               	movwf	(___fleq@ff2+1)^0,c
  7844  00C688  0E00               	movlw	0
  7845  00C68A  6E07               	movwf	(___fleq@ff2+2)^0,c
  7846  00C68C  0E00               	movlw	0
  7847  00C68E  6E08               	movwf	(___fleq@ff2+3)^0,c
  7848  00C690                     l3772:
  7849  00C690  5005               	movf	___fleq@ff2^0,w,c
  7850  00C692  1801               	xorwf	___fleq@ff1^0,w,c
  7851  00C694  E10F               	bnz	u4440
  7852  00C696  5006               	movf	(___fleq@ff2+1)^0,w,c
  7853  00C698  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7854  00C69A  E10C               	bnz	u4440
  7855  00C69C  5007               	movf	(___fleq@ff2+2)^0,w,c
  7856  00C69E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7857  00C6A0  E109               	bnz	u4440
  7858  00C6A2  5008               	movf	(___fleq@ff2+3)^0,w,c
  7859  00C6A4  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7860  00C6A6  B4D8               	btfsc	status,2,c
  7861  00C6A8  EF58  F063         	goto	u4441
  7862  00C6AC  EF5A  F063         	goto	u4440
  7863  00C6B0                     u4441:
  7864  00C6B0  EF5D  F063         	goto	l3776
  7865  00C6B4                     u4440:
  7866  00C6B4  90D8               	bcf	status,0,c
  7867  00C6B6  EF5E  F063         	goto	l392
  7868  00C6BA                     l3776:
  7869  00C6BA  80D8               	bsf	status,0,c
  7870  00C6BC                     l392:
  7871  00C6BC  0012               	return		;funcret
  7872  00C6BE                     __end_of___fleq:
  7873                           	callstack 0
  7874                           
  7875 ;; *************** function ___fldiv *****************
  7876 ;; Defined at:
  7877 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;  b               4    0[COMRAM] unsigned char 
  7880 ;;  a               4    4[COMRAM] unsigned char 
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;  grs             4   19[COMRAM] unsigned long 
  7883 ;;  rem             4   12[COMRAM] unsigned long 
  7884 ;;  new_exp         2   17[COMRAM] short 
  7885 ;;  aexp            1   24[COMRAM] unsigned char 
  7886 ;;  bexp            1   23[COMRAM] unsigned char 
  7887 ;;  sign            1   16[COMRAM] unsigned char 
  7888 ;; Return value:  Size  Location     Type
  7889 ;;                  4    0[COMRAM] unsigned char 
  7890 ;; Registers used:
  7891 ;;		wreg, status,2, status,0
  7892 ;; Tracked objects:
  7893 ;;		On entry : 0/0
  7894 ;;		On exit  : 0/0
  7895 ;;		Unchanged: 0/0
  7896 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  7897 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7898 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7899 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7900 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  7901 ;;Total ram usage:       25 bytes
  7902 ;; Hardware stack levels used: 1
  7903 ;; This function calls:
  7904 ;;		Nothing
  7905 ;; This function is called by:
  7906 ;;		_efgtoa
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           	psect	text22
  7911  00DC9A                     __ptext22:
  7912                           	callstack 0
  7913  00DC9A                     ___fldiv:
  7914                           	callstack 26
  7915  00DC9A  5004               	movf	(___fldiv@b+3)^0,w,c
  7916  00DC9C  0B80               	andlw	128
  7917  00DC9E  6E11               	movwf	___fldiv@sign^0,c
  7918  00DCA0  5004               	movf	(___fldiv@b+3)^0,w,c
  7919  00DCA2  2404               	addwf	(___fldiv@b+3)^0,w,c
  7920  00DCA4  6E18               	movwf	___fldiv@bexp^0,c
  7921  00DCA6  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7922  00DCA8  EF58  F06E         	goto	u3881
  7923  00DCAC  EF5A  F06E         	goto	u3880
  7924  00DCB0                     u3881:
  7925  00DCB0  EF5B  F06E         	goto	l3416
  7926  00DCB4                     u3880:
  7927  00DCB4  8018               	bsf	___fldiv@bexp^0,0,c
  7928  00DCB6                     l3416:
  7929  00DCB6  5018               	movf	___fldiv@bexp^0,w,c
  7930  00DCB8  B4D8               	btfsc	status,2,c
  7931  00DCBA  EF61  F06E         	goto	u3891
  7932  00DCBE  EF63  F06E         	goto	u3890
  7933  00DCC2                     u3891:
  7934  00DCC2  EF78  F06E         	goto	l3426
  7935  00DCC6                     u3890:
  7936  00DCC6  2818               	incf	___fldiv@bexp^0,w,c
  7937  00DCC8  A4D8               	btfss	status,2,c
  7938  00DCCA  EF69  F06E         	goto	u3901
  7939  00DCCE  EF6B  F06E         	goto	u3900
  7940  00DCD2                     u3901:
  7941  00DCD2  EF73  F06E         	goto	l3422
  7942  00DCD6                     u3900:
  7943  00DCD6  0E00               	movlw	0
  7944  00DCD8  6E01               	movwf	___fldiv@b^0,c
  7945  00DCDA  0E00               	movlw	0
  7946  00DCDC  6E02               	movwf	(___fldiv@b+1)^0,c
  7947  00DCDE  0E00               	movlw	0
  7948  00DCE0  6E03               	movwf	(___fldiv@b+2)^0,c
  7949  00DCE2  0E00               	movlw	0
  7950  00DCE4  6E04               	movwf	(___fldiv@b+3)^0,c
  7951  00DCE6                     l3422:
  7952  00DCE6  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7953  00DCE8  0E00               	movlw	0
  7954  00DCEA  6E04               	movwf	(___fldiv@b+3)^0,c
  7955  00DCEC  EF80  F06E         	goto	l3428
  7956  00DCF0                     l3426:
  7957  00DCF0  0E00               	movlw	0
  7958  00DCF2  6E01               	movwf	___fldiv@b^0,c
  7959  00DCF4  0E00               	movlw	0
  7960  00DCF6  6E02               	movwf	(___fldiv@b+1)^0,c
  7961  00DCF8  0E00               	movlw	0
  7962  00DCFA  6E03               	movwf	(___fldiv@b+2)^0,c
  7963  00DCFC  0E00               	movlw	0
  7964  00DCFE  6E04               	movwf	(___fldiv@b+3)^0,c
  7965  00DD00                     l3428:
  7966  00DD00  5008               	movf	(___fldiv@a+3)^0,w,c
  7967  00DD02  0B80               	andlw	128
  7968  00DD04  1A11               	xorwf	___fldiv@sign^0,f,c
  7969  00DD06  5008               	movf	(___fldiv@a+3)^0,w,c
  7970  00DD08  2408               	addwf	(___fldiv@a+3)^0,w,c
  7971  00DD0A  6E19               	movwf	___fldiv@aexp^0,c
  7972  00DD0C  AE07               	btfss	(___fldiv@a+2)^0,7,c
  7973  00DD0E  EF8B  F06E         	goto	u3911
  7974  00DD12  EF8D  F06E         	goto	u3910
  7975  00DD16                     u3911:
  7976  00DD16  EF8E  F06E         	goto	l3436
  7977  00DD1A                     u3910:
  7978  00DD1A  8019               	bsf	___fldiv@aexp^0,0,c
  7979  00DD1C                     l3436:
  7980  00DD1C  5019               	movf	___fldiv@aexp^0,w,c
  7981  00DD1E  B4D8               	btfsc	status,2,c
  7982  00DD20  EF94  F06E         	goto	u3921
  7983  00DD24  EF96  F06E         	goto	u3920
  7984  00DD28                     u3921:
  7985  00DD28  EFAB  F06E         	goto	l3446
  7986  00DD2C                     u3920:
  7987  00DD2C  2819               	incf	___fldiv@aexp^0,w,c
  7988  00DD2E  A4D8               	btfss	status,2,c
  7989  00DD30  EF9C  F06E         	goto	u3931
  7990  00DD34  EF9E  F06E         	goto	u3930
  7991  00DD38                     u3931:
  7992  00DD38  EFA6  F06E         	goto	l3442
  7993  00DD3C                     u3930:
  7994  00DD3C  0E00               	movlw	0
  7995  00DD3E  6E05               	movwf	___fldiv@a^0,c
  7996  00DD40  0E00               	movlw	0
  7997  00DD42  6E06               	movwf	(___fldiv@a+1)^0,c
  7998  00DD44  0E00               	movlw	0
  7999  00DD46  6E07               	movwf	(___fldiv@a+2)^0,c
  8000  00DD48  0E00               	movlw	0
  8001  00DD4A  6E08               	movwf	(___fldiv@a+3)^0,c
  8002  00DD4C                     l3442:
  8003  00DD4C  8E07               	bsf	(___fldiv@a+2)^0,7,c
  8004  00DD4E  0E00               	movlw	0
  8005  00DD50  6E08               	movwf	(___fldiv@a+3)^0,c
  8006  00DD52  EFB3  F06E         	goto	l3448
  8007  00DD56                     l3446:
  8008  00DD56  0E00               	movlw	0
  8009  00DD58  6E05               	movwf	___fldiv@a^0,c
  8010  00DD5A  0E00               	movlw	0
  8011  00DD5C  6E06               	movwf	(___fldiv@a+1)^0,c
  8012  00DD5E  0E00               	movlw	0
  8013  00DD60  6E07               	movwf	(___fldiv@a+2)^0,c
  8014  00DD62  0E00               	movlw	0
  8015  00DD64  6E08               	movwf	(___fldiv@a+3)^0,c
  8016  00DD66                     l3448:
  8017  00DD66  5005               	movf	___fldiv@a^0,w,c
  8018  00DD68  1006               	iorwf	(___fldiv@a+1)^0,w,c
  8019  00DD6A  1007               	iorwf	(___fldiv@a+2)^0,w,c
  8020  00DD6C  1008               	iorwf	(___fldiv@a+3)^0,w,c
  8021  00DD6E  A4D8               	btfss	status,2,c
  8022  00DD70  EFBC  F06E         	goto	u3941
  8023  00DD74  EFBE  F06E         	goto	u3940
  8024  00DD78                     u3941:
  8025  00DD78  EFD6  F06E         	goto	l3460
  8026  00DD7C                     u3940:
  8027  00DD7C  0E00               	movlw	0
  8028  00DD7E  6E01               	movwf	___fldiv@b^0,c
  8029  00DD80  0E00               	movlw	0
  8030  00DD82  6E02               	movwf	(___fldiv@b+1)^0,c
  8031  00DD84  0E00               	movlw	0
  8032  00DD86  6E03               	movwf	(___fldiv@b+2)^0,c
  8033  00DD88  0E00               	movlw	0
  8034  00DD8A  6E04               	movwf	(___fldiv@b+3)^0,c
  8035  00DD8C  0E80               	movlw	128
  8036  00DD8E  1203               	iorwf	(___fldiv@b+2)^0,f,c
  8037  00DD90  0E7F               	movlw	127
  8038  00DD92  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8039  00DD94                     l3454:
  8040  00DD94  5011               	movf	___fldiv@sign^0,w,c
  8041  00DD96  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8042  00DD98  C001  F001         	movff	___fldiv@b,?___fldiv
  8043  00DD9C  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  8044  00DDA0  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  8045  00DDA4  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  8046  00DDA8  EF19  F070         	goto	l715
  8047  00DDAC                     l3460:
  8048  00DDAC  5018               	movf	___fldiv@bexp^0,w,c
  8049  00DDAE  A4D8               	btfss	status,2,c
  8050  00DDB0  EFDC  F06E         	goto	u3951
  8051  00DDB4  EFDE  F06E         	goto	u3950
  8052  00DDB8                     u3951:
  8053  00DDB8  EFE8  F06E         	goto	l3468
  8054  00DDBC                     u3950:
  8055  00DDBC  0E00               	movlw	0
  8056  00DDBE  6E01               	movwf	?___fldiv^0,c
  8057  00DDC0  0E00               	movlw	0
  8058  00DDC2  6E02               	movwf	(?___fldiv+1)^0,c
  8059  00DDC4  0E00               	movlw	0
  8060  00DDC6  6E03               	movwf	(?___fldiv+2)^0,c
  8061  00DDC8  0E00               	movlw	0
  8062  00DDCA  6E04               	movwf	(?___fldiv+3)^0,c
  8063  00DDCC  EF19  F070         	goto	l715
  8064  00DDD0                     l3468:
  8065  00DDD0  5019               	movf	___fldiv@aexp^0,w,c
  8066  00DDD2  C018  F009         	movff	___fldiv@bexp,??___fldiv
  8067  00DDD6  6A0A               	clrf	(??___fldiv+1)^0,c
  8068  00DDD8  5E09               	subwf	??___fldiv^0,f,c
  8069  00DDDA  0E00               	movlw	0
  8070  00DDDC  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  8071  00DDDE  0E7F               	movlw	127
  8072  00DDE0  2409               	addwf	??___fldiv^0,w,c
  8073  00DDE2  6E12               	movwf	___fldiv@new_exp^0,c
  8074  00DDE4  0E00               	movlw	0
  8075  00DDE6  200A               	addwfc	(??___fldiv+1)^0,w,c
  8076  00DDE8  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8077  00DDEA  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  8078  00DDEE  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  8079  00DDF2  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  8080  00DDF6  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  8081  00DDFA  0E00               	movlw	0
  8082  00DDFC  6E01               	movwf	___fldiv@b^0,c
  8083  00DDFE  0E00               	movlw	0
  8084  00DE00  6E02               	movwf	(___fldiv@b+1)^0,c
  8085  00DE02  0E00               	movlw	0
  8086  00DE04  6E03               	movwf	(___fldiv@b+2)^0,c
  8087  00DE06  0E00               	movlw	0
  8088  00DE08  6E04               	movwf	(___fldiv@b+3)^0,c
  8089  00DE0A  0E00               	movlw	0
  8090  00DE0C  6E14               	movwf	___fldiv@grs^0,c
  8091  00DE0E  0E00               	movlw	0
  8092  00DE10  6E15               	movwf	(___fldiv@grs+1)^0,c
  8093  00DE12  0E00               	movlw	0
  8094  00DE14  6E16               	movwf	(___fldiv@grs+2)^0,c
  8095  00DE16  0E00               	movlw	0
  8096  00DE18  6E17               	movwf	(___fldiv@grs+3)^0,c
  8097  00DE1A  0E00               	movlw	0
  8098  00DE1C  6E19               	movwf	___fldiv@aexp^0,c
  8099  00DE1E  EF49  F06F         	goto	l717
  8100  00DE22                     l3478:
  8101  00DE22  5019               	movf	___fldiv@aexp^0,w,c
  8102  00DE24  B4D8               	btfsc	status,2,c
  8103  00DE26  EF17  F06F         	goto	u3961
  8104  00DE2A  EF19  F06F         	goto	u3960
  8105  00DE2E                     u3961:
  8106  00DE2E  EF30  F06F         	goto	l3486
  8107  00DE32                     u3960:
  8108  00DE32  90D8               	bcf	status,0,c
  8109  00DE34  360D               	rlcf	___fldiv@rem^0,f,c
  8110  00DE36  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  8111  00DE38  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  8112  00DE3A  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  8113  00DE3C  90D8               	bcf	status,0,c
  8114  00DE3E  3601               	rlcf	___fldiv@b^0,f,c
  8115  00DE40  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8116  00DE42  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8117  00DE44  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8118  00DE46  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8119  00DE48  EF28  F06F         	goto	u3971
  8120  00DE4C  EF2A  F06F         	goto	u3970
  8121  00DE50                     u3971:
  8122  00DE50  EF2B  F06F         	goto	l720
  8123  00DE54                     u3970:
  8124  00DE54  8001               	bsf	___fldiv@b^0,0,c
  8125  00DE56                     l720:
  8126  00DE56  90D8               	bcf	status,0,c
  8127  00DE58  3614               	rlcf	___fldiv@grs^0,f,c
  8128  00DE5A  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8129  00DE5C  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8130  00DE5E  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8131  00DE60                     l3486:
  8132  00DE60  5005               	movf	___fldiv@a^0,w,c
  8133  00DE62  5C0D               	subwf	___fldiv@rem^0,w,c
  8134  00DE64  5006               	movf	(___fldiv@a+1)^0,w,c
  8135  00DE66  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  8136  00DE68  5007               	movf	(___fldiv@a+2)^0,w,c
  8137  00DE6A  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  8138  00DE6C  5008               	movf	(___fldiv@a+3)^0,w,c
  8139  00DE6E  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  8140  00DE70  A0D8               	btfss	status,0,c
  8141  00DE72  EF3D  F06F         	goto	u3981
  8142  00DE76  EF3F  F06F         	goto	u3980
  8143  00DE7A                     u3981:
  8144  00DE7A  EF48  F06F         	goto	l3492
  8145  00DE7E                     u3980:
  8146  00DE7E  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  8147  00DE80  5005               	movf	___fldiv@a^0,w,c
  8148  00DE82  5E0D               	subwf	___fldiv@rem^0,f,c
  8149  00DE84  5006               	movf	(___fldiv@a+1)^0,w,c
  8150  00DE86  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  8151  00DE88  5007               	movf	(___fldiv@a+2)^0,w,c
  8152  00DE8A  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  8153  00DE8C  5008               	movf	(___fldiv@a+3)^0,w,c
  8154  00DE8E  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  8155  00DE90                     l3492:
  8156  00DE90  2A19               	incf	___fldiv@aexp^0,f,c
  8157  00DE92                     l717:
  8158  00DE92  0E19               	movlw	25
  8159  00DE94  6419               	cpfsgt	___fldiv@aexp^0,c
  8160  00DE96  EF4F  F06F         	goto	u3991
  8161  00DE9A  EF51  F06F         	goto	u3990
  8162  00DE9E                     u3991:
  8163  00DE9E  EF11  F06F         	goto	l3478
  8164  00DEA2                     u3990:
  8165  00DEA2  500D               	movf	___fldiv@rem^0,w,c
  8166  00DEA4  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  8167  00DEA6  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  8168  00DEA8  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  8169  00DEAA  B4D8               	btfsc	status,2,c
  8170  00DEAC  EF5A  F06F         	goto	u4001
  8171  00DEB0  EF5C  F06F         	goto	u4000
  8172  00DEB4                     u4001:
  8173  00DEB4  EF74  F06F         	goto	l3504
  8174  00DEB8                     u4000:
  8175  00DEB8  8014               	bsf	___fldiv@grs^0,0,c
  8176  00DEBA  EF74  F06F         	goto	l3504
  8177  00DEBE                     l3498:
  8178  00DEBE  90D8               	bcf	status,0,c
  8179  00DEC0  3601               	rlcf	___fldiv@b^0,f,c
  8180  00DEC2  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8181  00DEC4  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8182  00DEC6  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8183  00DEC8  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8184  00DECA  EF69  F06F         	goto	u4011
  8185  00DECE  EF6B  F06F         	goto	u4010
  8186  00DED2                     u4011:
  8187  00DED2  EF6C  F06F         	goto	l726
  8188  00DED6                     u4010:
  8189  00DED6  8001               	bsf	___fldiv@b^0,0,c
  8190  00DED8                     l726:
  8191  00DED8  90D8               	bcf	status,0,c
  8192  00DEDA  3614               	rlcf	___fldiv@grs^0,f,c
  8193  00DEDC  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8194  00DEDE  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8195  00DEE0  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8196  00DEE2  0612               	decf	___fldiv@new_exp^0,f,c
  8197  00DEE4  A0D8               	btfss	status,0,c
  8198  00DEE6  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  8199  00DEE8                     l3504:
  8200  00DEE8  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8201  00DEEA  EF79  F06F         	goto	u4021
  8202  00DEEE  EF7B  F06F         	goto	u4020
  8203  00DEF2                     u4021:
  8204  00DEF2  EF5F  F06F         	goto	l3498
  8205  00DEF6                     u4020:
  8206  00DEF6  0E00               	movlw	0
  8207  00DEF8  6E19               	movwf	___fldiv@aexp^0,c
  8208  00DEFA  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8209  00DEFC  EF82  F06F         	goto	u4031
  8210  00DF00  EF84  F06F         	goto	u4030
  8211  00DF04                     u4031:
  8212  00DF04  EFA8  F06F         	goto	l728
  8213  00DF08                     u4030:
  8214  00DF08  0EFF               	movlw	255
  8215  00DF0A  1414               	andwf	___fldiv@grs^0,w,c
  8216  00DF0C  6E09               	movwf	??___fldiv^0,c
  8217  00DF0E  0EFF               	movlw	255
  8218  00DF10  1415               	andwf	(___fldiv@grs+1)^0,w,c
  8219  00DF12  6E0A               	movwf	(??___fldiv+1)^0,c
  8220  00DF14  0EFF               	movlw	255
  8221  00DF16  1416               	andwf	(___fldiv@grs+2)^0,w,c
  8222  00DF18  6E0B               	movwf	(??___fldiv+2)^0,c
  8223  00DF1A  0E7F               	movlw	127
  8224  00DF1C  1417               	andwf	(___fldiv@grs+3)^0,w,c
  8225  00DF1E  6E0C               	movwf	(??___fldiv+3)^0,c
  8226  00DF20  5009               	movf	??___fldiv^0,w,c
  8227  00DF22  100A               	iorwf	(??___fldiv+1)^0,w,c
  8228  00DF24  100B               	iorwf	(??___fldiv+2)^0,w,c
  8229  00DF26  100C               	iorwf	(??___fldiv+3)^0,w,c
  8230  00DF28  B4D8               	btfsc	status,2,c
  8231  00DF2A  EF99  F06F         	goto	u4041
  8232  00DF2E  EF9B  F06F         	goto	u4040
  8233  00DF32                     u4041:
  8234  00DF32  EF9F  F06F         	goto	l729
  8235  00DF36                     u4040:
  8236  00DF36                     l3512:
  8237  00DF36  0E01               	movlw	1
  8238  00DF38  6E19               	movwf	___fldiv@aexp^0,c
  8239  00DF3A  EFA8  F06F         	goto	l728
  8240  00DF3E                     l729:
  8241  00DF3E  A001               	btfss	___fldiv@b^0,0,c
  8242  00DF40  EFA4  F06F         	goto	u4051
  8243  00DF44  EFA6  F06F         	goto	u4050
  8244  00DF48                     u4051:
  8245  00DF48  EFA8  F06F         	goto	l728
  8246  00DF4C                     u4050:
  8247  00DF4C  EF9B  F06F         	goto	l3512
  8248  00DF50                     l728:
  8249  00DF50  5019               	movf	___fldiv@aexp^0,w,c
  8250  00DF52  B4D8               	btfsc	status,2,c
  8251  00DF54  EFAE  F06F         	goto	u4061
  8252  00DF58  EFB0  F06F         	goto	u4060
  8253  00DF5C                     u4061:
  8254  00DF5C  EFD4  F06F         	goto	l3524
  8255  00DF60                     u4060:
  8256  00DF60  0E01               	movlw	1
  8257  00DF62  2601               	addwf	___fldiv@b^0,f,c
  8258  00DF64  0E00               	movlw	0
  8259  00DF66  2202               	addwfc	(___fldiv@b+1)^0,f,c
  8260  00DF68  2203               	addwfc	(___fldiv@b+2)^0,f,c
  8261  00DF6A  2204               	addwfc	(___fldiv@b+3)^0,f,c
  8262  00DF6C  A004               	btfss	(___fldiv@b+3)^0,0,c
  8263  00DF6E  EFBB  F06F         	goto	u4071
  8264  00DF72  EFBD  F06F         	goto	u4070
  8265  00DF76                     u4071:
  8266  00DF76  EFD4  F06F         	goto	l3524
  8267  00DF7A                     u4070:
  8268  00DF7A  C001  F009         	movff	___fldiv@b,??___fldiv
  8269  00DF7E  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  8270  00DF82  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  8271  00DF86  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  8272  00DF8A  340C               	rlcf	(??___fldiv+3)^0,w,c
  8273  00DF8C  320C               	rrcf	(??___fldiv+3)^0,f,c
  8274  00DF8E  320B               	rrcf	(??___fldiv+2)^0,f,c
  8275  00DF90  320A               	rrcf	(??___fldiv+1)^0,f,c
  8276  00DF92  3209               	rrcf	??___fldiv^0,f,c
  8277  00DF94  C009  F001         	movff	??___fldiv,___fldiv@b
  8278  00DF98  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  8279  00DF9C  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  8280  00DFA0  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  8281  00DFA4  4A12               	infsnz	___fldiv@new_exp^0,f,c
  8282  00DFA6  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  8283  00DFA8                     l3524:
  8284  00DFA8  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8285  00DFAA  EFDF  F06F         	goto	u4081
  8286  00DFAE  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8287  00DFB0  E108               	bnz	u4080
  8288  00DFB2  2812               	incf	___fldiv@new_exp^0,w,c
  8289  00DFB4  A0D8               	btfss	status,0,c
  8290  00DFB6  EFDF  F06F         	goto	u4081
  8291  00DFBA  EFE1  F06F         	goto	u4080
  8292  00DFBE                     u4081:
  8293  00DFBE  EFEC  F06F         	goto	l3528
  8294  00DFC2                     u4080:
  8295  00DFC2  0E00               	movlw	0
  8296  00DFC4  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8297  00DFC6  6812               	setf	___fldiv@new_exp^0,c
  8298  00DFC8  0E00               	movlw	0
  8299  00DFCA  6E01               	movwf	___fldiv@b^0,c
  8300  00DFCC  0E00               	movlw	0
  8301  00DFCE  6E02               	movwf	(___fldiv@b+1)^0,c
  8302  00DFD0  0E00               	movlw	0
  8303  00DFD2  6E03               	movwf	(___fldiv@b+2)^0,c
  8304  00DFD4  0E00               	movlw	0
  8305  00DFD6  6E04               	movwf	(___fldiv@b+3)^0,c
  8306  00DFD8                     l3528:
  8307  00DFD8  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8308  00DFDA  EFF9  F06F         	goto	u4090
  8309  00DFDE  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8310  00DFE0  E106               	bnz	u4091
  8311  00DFE2  0412               	decf	___fldiv@new_exp^0,w,c
  8312  00DFE4  B0D8               	btfsc	status,0,c
  8313  00DFE6  EFF7  F06F         	goto	u4091
  8314  00DFEA  EFF9  F06F         	goto	u4090
  8315  00DFEE                     u4091:
  8316  00DFEE  EF07  F070         	goto	l3532
  8317  00DFF2                     u4090:
  8318  00DFF2  0E00               	movlw	0
  8319  00DFF4  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8320  00DFF6  0E00               	movlw	0
  8321  00DFF8  6E12               	movwf	___fldiv@new_exp^0,c
  8322  00DFFA  0E00               	movlw	0
  8323  00DFFC  6E01               	movwf	___fldiv@b^0,c
  8324  00DFFE  0E00               	movlw	0
  8325  00E000  6E02               	movwf	(___fldiv@b+1)^0,c
  8326  00E002  0E00               	movlw	0
  8327  00E004  6E03               	movwf	(___fldiv@b+2)^0,c
  8328  00E006  0E00               	movlw	0
  8329  00E008  6E04               	movwf	(___fldiv@b+3)^0,c
  8330  00E00A  0E00               	movlw	0
  8331  00E00C  6E11               	movwf	___fldiv@sign^0,c
  8332  00E00E                     l3532:
  8333  00E00E  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  8334  00E012  A018               	btfss	___fldiv@bexp^0,0,c
  8335  00E014  EF0E  F070         	goto	u4101
  8336  00E018  EF10  F070         	goto	u4100
  8337  00E01C                     u4101:
  8338  00E01C  EF13  F070         	goto	l3538
  8339  00E020                     u4100:
  8340  00E020  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8341  00E022  EF14  F070         	goto	l3540
  8342  00E026                     l3538:
  8343  00E026  9E03               	bcf	(___fldiv@b+2)^0,7,c
  8344  00E028                     l3540:
  8345  00E028  90D8               	bcf	status,0,c
  8346  00E02A  3018               	rrcf	___fldiv@bexp^0,w,c
  8347  00E02C  6E04               	movwf	(___fldiv@b+3)^0,c
  8348  00E02E  EFCA  F06E         	goto	l3454
  8349  00E032                     l715:
  8350  00E032  0012               	return		;funcret
  8351  00E034                     __end_of___fldiv:
  8352                           	callstack 0
  8353                           
  8354 ;; *************** function ___awmod *****************
  8355 ;; Defined at:
  8356 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  8357 ;; Parameters:    Size  Location     Type
  8358 ;;  dividend        2    0[COMRAM] int 
  8359 ;;  divisor         2    2[COMRAM] int 
  8360 ;; Auto vars:     Size  Location     Type
  8361 ;;  sign            1    5[COMRAM] unsigned char 
  8362 ;;  counter         1    4[COMRAM] unsigned char 
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  2    0[COMRAM] int 
  8365 ;; Registers used:
  8366 ;;		wreg, status,2, status,0
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  8372 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8373 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8375 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8376 ;;Total ram usage:        6 bytes
  8377 ;; Hardware stack levels used: 1
  8378 ;; This function calls:
  8379 ;;		Nothing
  8380 ;; This function is called by:
  8381 ;;		_efgtoa
  8382 ;; This function uses a non-reentrant model
  8383 ;;
  8384                           
  8385                           	psect	text23
  8386  00C6BE                     __ptext23:
  8387                           	callstack 0
  8388  00C6BE                     ___awmod:
  8389                           	callstack 26
  8390  00C6BE  0E00               	movlw	0
  8391  00C6C0  6E06               	movwf	___awmod@sign^0,c
  8392  00C6C2  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  8393  00C6C4  EF68  F063         	goto	u4360
  8394  00C6C8  EF66  F063         	goto	u4361
  8395  00C6CC                     u4361:
  8396  00C6CC  EF6E  F063         	goto	l3736
  8397  00C6D0                     u4360:
  8398  00C6D0  6C01               	negf	___awmod@dividend^0,c
  8399  00C6D2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8400  00C6D4  B0D8               	btfsc	status,0,c
  8401  00C6D6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8402  00C6D8  0E01               	movlw	1
  8403  00C6DA  6E06               	movwf	___awmod@sign^0,c
  8404  00C6DC                     l3736:
  8405  00C6DC  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  8406  00C6DE  EF75  F063         	goto	u4370
  8407  00C6E2  EF73  F063         	goto	u4371
  8408  00C6E6                     u4371:
  8409  00C6E6  EF79  F063         	goto	l3740
  8410  00C6EA                     u4370:
  8411  00C6EA  6C03               	negf	___awmod@divisor^0,c
  8412  00C6EC  1E04               	comf	(___awmod@divisor+1)^0,f,c
  8413  00C6EE  B0D8               	btfsc	status,0,c
  8414  00C6F0  2A04               	incf	(___awmod@divisor+1)^0,f,c
  8415  00C6F2                     l3740:
  8416  00C6F2  5003               	movf	___awmod@divisor^0,w,c
  8417  00C6F4  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  8418  00C6F6  B4D8               	btfsc	status,2,c
  8419  00C6F8  EF80  F063         	goto	u4381
  8420  00C6FC  EF82  F063         	goto	u4380
  8421  00C700                     u4381:
  8422  00C700  EFA6  F063         	goto	l3756
  8423  00C704                     u4380:
  8424  00C704  0E01               	movlw	1
  8425  00C706  6E05               	movwf	___awmod@counter^0,c
  8426  00C708  EF8A  F063         	goto	l3746
  8427  00C70C                     l3744:
  8428  00C70C  90D8               	bcf	status,0,c
  8429  00C70E  3603               	rlcf	___awmod@divisor^0,f,c
  8430  00C710  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  8431  00C712  2A05               	incf	___awmod@counter^0,f,c
  8432  00C714                     l3746:
  8433  00C714  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  8434  00C716  EF8F  F063         	goto	u4391
  8435  00C71A  EF91  F063         	goto	u4390
  8436  00C71E                     u4391:
  8437  00C71E  EF86  F063         	goto	l3744
  8438  00C722                     u4390:
  8439  00C722                     l3748:
  8440  00C722  5003               	movf	___awmod@divisor^0,w,c
  8441  00C724  5C01               	subwf	___awmod@dividend^0,w,c
  8442  00C726  5004               	movf	(___awmod@divisor+1)^0,w,c
  8443  00C728  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  8444  00C72A  A0D8               	btfss	status,0,c
  8445  00C72C  EF9A  F063         	goto	u4401
  8446  00C730  EF9C  F063         	goto	u4400
  8447  00C734                     u4401:
  8448  00C734  EFA0  F063         	goto	l3752
  8449  00C738                     u4400:
  8450  00C738  5003               	movf	___awmod@divisor^0,w,c
  8451  00C73A  5E01               	subwf	___awmod@dividend^0,f,c
  8452  00C73C  5004               	movf	(___awmod@divisor+1)^0,w,c
  8453  00C73E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  8454  00C740                     l3752:
  8455  00C740  90D8               	bcf	status,0,c
  8456  00C742  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  8457  00C744  3203               	rrcf	___awmod@divisor^0,f,c
  8458  00C746  2E05               	decfsz	___awmod@counter^0,f,c
  8459  00C748  EF91  F063         	goto	l3748
  8460  00C74C                     l3756:
  8461  00C74C  5006               	movf	___awmod@sign^0,w,c
  8462  00C74E  B4D8               	btfsc	status,2,c
  8463  00C750  EFAC  F063         	goto	u4411
  8464  00C754  EFAE  F063         	goto	u4410
  8465  00C758                     u4411:
  8466  00C758  EFB2  F063         	goto	l3760
  8467  00C75C                     u4410:
  8468  00C75C  6C01               	negf	___awmod@dividend^0,c
  8469  00C75E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8470  00C760  B0D8               	btfsc	status,0,c
  8471  00C762  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8472  00C764                     l3760:
  8473  00C764  C001  F001         	movff	___awmod@dividend,?___awmod
  8474  00C768  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  8475  00C76C  0012               	return		;funcret
  8476  00C76E                     __end_of___awmod:
  8477                           	callstack 0
  8478                           
  8479 ;; *************** function ___awdiv *****************
  8480 ;; Defined at:
  8481 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;  dividend        2    0[COMRAM] int 
  8484 ;;  divisor         2    2[COMRAM] int 
  8485 ;; Auto vars:     Size  Location     Type
  8486 ;;  quotient        2    6[COMRAM] int 
  8487 ;;  sign            1    5[COMRAM] unsigned char 
  8488 ;;  counter         1    4[COMRAM] unsigned char 
  8489 ;; Return value:  Size  Location     Type
  8490 ;;                  2    0[COMRAM] int 
  8491 ;; Registers used:
  8492 ;;		wreg, status,2, status,0
  8493 ;; Tracked objects:
  8494 ;;		On entry : 0/0
  8495 ;;		On exit  : 0/0
  8496 ;;		Unchanged: 0/0
  8497 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  8498 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8499 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8501 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8502 ;;Total ram usage:        8 bytes
  8503 ;; Hardware stack levels used: 1
  8504 ;; This function calls:
  8505 ;;		Nothing
  8506 ;; This function is called by:
  8507 ;;		_efgtoa
  8508 ;; This function uses a non-reentrant model
  8509 ;;
  8510                           
  8511                           	psect	text24
  8512  00C830                     __ptext24:
  8513                           	callstack 0
  8514  00C830                     ___awdiv:
  8515                           	callstack 26
  8516  00C830  0E00               	movlw	0
  8517  00C832  6E06               	movwf	___awdiv@sign^0,c
  8518  00C834  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  8519  00C836  EF21  F064         	goto	u4300
  8520  00C83A  EF1F  F064         	goto	u4301
  8521  00C83E                     u4301:
  8522  00C83E  EF27  F064         	goto	l3692
  8523  00C842                     u4300:
  8524  00C842  6C03               	negf	___awdiv@divisor^0,c
  8525  00C844  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  8526  00C846  B0D8               	btfsc	status,0,c
  8527  00C848  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  8528  00C84A  0E01               	movlw	1
  8529  00C84C  6E06               	movwf	___awdiv@sign^0,c
  8530  00C84E                     l3692:
  8531  00C84E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  8532  00C850  EF2E  F064         	goto	u4310
  8533  00C854  EF2C  F064         	goto	u4311
  8534  00C858                     u4311:
  8535  00C858  EF34  F064         	goto	l3698
  8536  00C85C                     u4310:
  8537  00C85C  6C01               	negf	___awdiv@dividend^0,c
  8538  00C85E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  8539  00C860  B0D8               	btfsc	status,0,c
  8540  00C862  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  8541  00C864  0E01               	movlw	1
  8542  00C866  1A06               	xorwf	___awdiv@sign^0,f,c
  8543  00C868                     l3698:
  8544  00C868  0E00               	movlw	0
  8545  00C86A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  8546  00C86C  0E00               	movlw	0
  8547  00C86E  6E07               	movwf	___awdiv@quotient^0,c
  8548  00C870  5003               	movf	___awdiv@divisor^0,w,c
  8549  00C872  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  8550  00C874  B4D8               	btfsc	status,2,c
  8551  00C876  EF3F  F064         	goto	u4321
  8552  00C87A  EF41  F064         	goto	u4320
  8553  00C87E                     u4321:
  8554  00C87E  EF69  F064         	goto	l3720
  8555  00C882                     u4320:
  8556  00C882  0E01               	movlw	1
  8557  00C884  6E05               	movwf	___awdiv@counter^0,c
  8558  00C886  EF49  F064         	goto	l3706
  8559  00C88A                     l3704:
  8560  00C88A  90D8               	bcf	status,0,c
  8561  00C88C  3603               	rlcf	___awdiv@divisor^0,f,c
  8562  00C88E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  8563  00C890  2A05               	incf	___awdiv@counter^0,f,c
  8564  00C892                     l3706:
  8565  00C892  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  8566  00C894  EF4E  F064         	goto	u4331
  8567  00C898  EF50  F064         	goto	u4330
  8568  00C89C                     u4331:
  8569  00C89C  EF45  F064         	goto	l3704
  8570  00C8A0                     u4330:
  8571  00C8A0                     l3708:
  8572  00C8A0  90D8               	bcf	status,0,c
  8573  00C8A2  3607               	rlcf	___awdiv@quotient^0,f,c
  8574  00C8A4  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  8575  00C8A6  5003               	movf	___awdiv@divisor^0,w,c
  8576  00C8A8  5C01               	subwf	___awdiv@dividend^0,w,c
  8577  00C8AA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8578  00C8AC  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8579  00C8AE  A0D8               	btfss	status,0,c
  8580  00C8B0  EF5C  F064         	goto	u4341
  8581  00C8B4  EF5E  F064         	goto	u4340
  8582  00C8B8                     u4341:
  8583  00C8B8  EF63  F064         	goto	l3716
  8584  00C8BC                     u4340:
  8585  00C8BC  5003               	movf	___awdiv@divisor^0,w,c
  8586  00C8BE  5E01               	subwf	___awdiv@dividend^0,f,c
  8587  00C8C0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8588  00C8C2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8589  00C8C4  8007               	bsf	___awdiv@quotient^0,0,c
  8590  00C8C6                     l3716:
  8591  00C8C6  90D8               	bcf	status,0,c
  8592  00C8C8  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8593  00C8CA  3203               	rrcf	___awdiv@divisor^0,f,c
  8594  00C8CC  2E05               	decfsz	___awdiv@counter^0,f,c
  8595  00C8CE  EF50  F064         	goto	l3708
  8596  00C8D2                     l3720:
  8597  00C8D2  5006               	movf	___awdiv@sign^0,w,c
  8598  00C8D4  B4D8               	btfsc	status,2,c
  8599  00C8D6  EF6F  F064         	goto	u4351
  8600  00C8DA  EF71  F064         	goto	u4350
  8601  00C8DE                     u4351:
  8602  00C8DE  EF75  F064         	goto	l3724
  8603  00C8E2                     u4350:
  8604  00C8E2  6C07               	negf	___awdiv@quotient^0,c
  8605  00C8E4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8606  00C8E6  B0D8               	btfsc	status,0,c
  8607  00C8E8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8608  00C8EA                     l3724:
  8609  00C8EA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8610  00C8EE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8611  00C8F2  0012               	return		;funcret
  8612  00C8F4                     __end_of___awdiv:
  8613                           	callstack 0
  8614                           
  8615 ;; *************** function _dtoa *****************
  8616 ;; Defined at:
  8617 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8618 ;; Parameters:    Size  Location     Type
  8619 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  8620 ;;		 -> sprintf@f(6), 
  8621 ;;  d               8   29[COMRAM] long long 
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;  n               8   53[COMRAM] long long 
  8624 ;;  i               2   61[COMRAM] int 
  8625 ;;  s               2   51[COMRAM] int 
  8626 ;;  w               2   49[COMRAM] int 
  8627 ;;  p               2   47[COMRAM] int 
  8628 ;; Return value:  Size  Location     Type
  8629 ;;                  2   27[COMRAM] int 
  8630 ;; Registers used:
  8631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8632 ;; Tracked objects:
  8633 ;;		On entry : 0/0
  8634 ;;		On exit  : 0/0
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  8637 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8638 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8639 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8640 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  8641 ;;Total ram usage:       36 bytes
  8642 ;; Hardware stack levels used: 1
  8643 ;; Hardware stack levels required when called: 4
  8644 ;; This function calls:
  8645 ;;		___aodiv
  8646 ;;		___aomod
  8647 ;;		_abs
  8648 ;;		_pad
  8649 ;; This function is called by:
  8650 ;;		_vfpfcnvrt
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654                           	psect	text25
  8655  00D9BA                     __ptext25:
  8656                           	callstack 0
  8657  00D9BA                     _dtoa:
  8658                           	callstack 23
  8659  00D9BA                     
  8660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  8661  00D9BA  C01E  F036         	movff	dtoa@d,dtoa@n
  8662  00D9BE  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  8663  00D9C2  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  8664  00D9C6  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  8665  00D9CA  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  8666  00D9CE  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  8667  00D9D2  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  8668  00D9D6  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  8669  00D9DA                     
  8670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  8671  00D9DA  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  8672  00D9DC  EFF2  F06C         	goto	u4991
  8673  00D9E0  EFF5  F06C         	goto	u4990
  8674  00D9E4                     u4991:
  8675  00D9E4  0E01               	movlw	1
  8676  00D9E6  EFF6  F06C         	goto	u5000
  8677  00D9EA                     u4990:
  8678  00D9EA  0E00               	movlw	0
  8679  00D9EC                     u5000:
  8680  00D9EC  6E34               	movwf	dtoa@s^0,c
  8681  00D9EE  6A35               	clrf	(dtoa@s+1)^0,c
  8682                           
  8683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  8684  00D9F0  5034               	movf	dtoa@s^0,w,c
  8685  00D9F2  1035               	iorwf	(dtoa@s+1)^0,w,c
  8686  00D9F4  B4D8               	btfsc	status,2,c
  8687  00D9F6  EFFF  F06C         	goto	u5011
  8688  00D9FA  EF01  F06D         	goto	u5010
  8689  00D9FE                     u5011:
  8690  00D9FE  EF11  F06D         	goto	l4008
  8691  00DA02                     u5010:
  8692  00DA02                     
  8693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  8694  00DA02  1E3D               	comf	(dtoa@n+7)^0,f,c
  8695  00DA04  1E3C               	comf	(dtoa@n+6)^0,f,c
  8696  00DA06  1E3B               	comf	(dtoa@n+5)^0,f,c
  8697  00DA08  1E3A               	comf	(dtoa@n+4)^0,f,c
  8698  00DA0A  1E39               	comf	(dtoa@n+3)^0,f,c
  8699  00DA0C  1E38               	comf	(dtoa@n+2)^0,f,c
  8700  00DA0E  1E37               	comf	(dtoa@n+1)^0,f,c
  8701  00DA10  6C36               	negf	dtoa@n^0,c
  8702  00DA12  0E00               	movlw	0
  8703  00DA14  2237               	addwfc	(dtoa@n+1)^0,f,c
  8704  00DA16  2238               	addwfc	(dtoa@n+2)^0,f,c
  8705  00DA18  2239               	addwfc	(dtoa@n+3)^0,f,c
  8706  00DA1A  223A               	addwfc	(dtoa@n+4)^0,f,c
  8707  00DA1C  223B               	addwfc	(dtoa@n+5)^0,f,c
  8708  00DA1E  223C               	addwfc	(dtoa@n+6)^0,f,c
  8709  00DA20  223D               	addwfc	(dtoa@n+7)^0,f,c
  8710  00DA22                     l4008:
  8711                           
  8712                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  8713  00DA22  0100               	movlb	0	; () banked
  8714  00DA24  BFFE               	btfsc	(_prec+1)& (0+255),7,b
  8715  00DA26  EF17  F06D         	goto	u5021
  8716  00DA2A  EF19  F06D         	goto	u5020
  8717  00DA2E                     u5021:
  8718  00DA2E  EF1A  F06D         	goto	l4012
  8719  00DA32                     u5020:
  8720  00DA32                     
  8721                           ; BSR set to: 0
  8722                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  8723  00DA32  927C               	bcf	_flags^0,1,c
  8724  00DA34                     l4012:
  8725                           
  8726                           ; BSR set to: 0
  8727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  8728  00DA34  BFFE               	btfsc	(_prec+1)& (0+255),7,b
  8729  00DA36  EF27  F06D         	goto	u5030
  8730  00DA3A  51FE               	movf	(_prec+1)& (0+255),w,b
  8731  00DA3C  E106               	bnz	u5031
  8732  00DA3E  05FD               	decf	_prec& (0+255),w,b
  8733  00DA40  B0D8               	btfsc	status,0,c
  8734  00DA42  EF25  F06D         	goto	u5031
  8735  00DA46  EF27  F06D         	goto	u5030
  8736  00DA4A                     u5031:
  8737  00DA4A  EF2D  F06D         	goto	l885
  8738  00DA4E                     u5030:
  8739  00DA4E                     
  8740                           ; BSR set to: 0
  8741  00DA4E  0E00               	movlw	0
  8742  00DA50  6E31               	movwf	(dtoa@p+1)^0,c
  8743  00DA52  0E01               	movlw	1
  8744  00DA54  6E30               	movwf	dtoa@p^0,c
  8745  00DA56  EF31  F06D         	goto	l887
  8746  00DA5A                     l885:
  8747                           
  8748                           ; BSR set to: 0
  8749  00DA5A  C0FD  F030         	movff	_prec,dtoa@p
  8750  00DA5E  C0FE  F031         	movff	_prec+1,dtoa@p+1
  8751  00DA62                     l887:
  8752                           
  8753                           ; BSR set to: 0
  8754                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  8755  00DA62  C0FB  F032         	movff	_width,dtoa@w
  8756  00DA66  C0FC  F033         	movff	_width+1,dtoa@w+1
  8757  00DA6A                     
  8758                           ; BSR set to: 0
  8759                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  8760  00DA6A  5034               	movf	dtoa@s^0,w,c
  8761  00DA6C  1035               	iorwf	(dtoa@s+1)^0,w,c
  8762  00DA6E  A4D8               	btfss	status,2,c
  8763  00DA70  EF3C  F06D         	goto	u5041
  8764  00DA74  EF3E  F06D         	goto	u5040
  8765  00DA78                     u5041:
  8766  00DA78  EF45  F06D         	goto	l4020
  8767  00DA7C                     u5040:
  8768  00DA7C                     
  8769                           ; BSR set to: 0
  8770  00DA7C  A47C               	btfss	_flags^0,2,c
  8771  00DA7E  EF43  F06D         	goto	u5051
  8772  00DA82  EF45  F06D         	goto	u5050
  8773  00DA86                     u5051:
  8774  00DA86  EF48  F06D         	goto	l4022
  8775  00DA8A                     u5050:
  8776  00DA8A                     l4020:
  8777                           
  8778                           ; BSR set to: 0
  8779                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  8780  00DA8A  0632               	decf	dtoa@w^0,f,c
  8781  00DA8C  A0D8               	btfss	status,0,c
  8782  00DA8E  0633               	decf	(dtoa@w+1)^0,f,c
  8783  00DA90                     l4022:
  8784                           
  8785                           ; BSR set to: 0
  8786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  8787  00DA90  0E00               	movlw	0
  8788  00DA92  6E3F               	movwf	(dtoa@i+1)^0,c
  8789  00DA94  0E4F               	movlw	79
  8790  00DA96  6E3E               	movwf	dtoa@i^0,c
  8791  00DA98                     
  8792                           ; BSR set to: 0
  8793                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  8794  00DA98  0E00               	movlw	0
  8795  00DA9A  0101               	movlb	1	; () banked
  8796  00DA9C  6F4F               	movwf	(_dbuf+79)& (0+255),b
  8797                           
  8798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8799  00DA9E  EFCD  F06D         	goto	l4036
  8800  00DAA2                     l4026:
  8801                           
  8802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  8803  00DAA2  063E               	decf	dtoa@i^0,f,c
  8804  00DAA4  A0D8               	btfss	status,0,c
  8805  00DAA6  063F               	decf	(dtoa@i+1)^0,f,c
  8806  00DAA8                     
  8807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8808  00DAA8  0E00               	movlw	low _dbuf
  8809  00DAAA  243E               	addwf	dtoa@i^0,w,c
  8810  00DAAC  6ED9               	movwf	fsr2l,c
  8811  00DAAE  0E01               	movlw	high _dbuf
  8812  00DAB0  203F               	addwfc	(dtoa@i+1)^0,w,c
  8813  00DAB2  6EDA               	movwf	fsr2h,c
  8814  00DAB4  C036  F001         	movff	dtoa@n,___aomod@dividend
  8815  00DAB8  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  8816  00DABC  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  8817  00DAC0  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  8818  00DAC4  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  8819  00DAC8  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  8820  00DACC  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  8821  00DAD0  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  8822  00DAD4  0E0A               	movlw	10
  8823  00DAD6  6E09               	movwf	___aomod@divisor^0,c
  8824  00DAD8  0E00               	movlw	0
  8825  00DADA  6E0A               	movwf	(___aomod@divisor+1)^0,c
  8826  00DADC  0E00               	movlw	0
  8827  00DADE  6E0B               	movwf	(___aomod@divisor+2)^0,c
  8828  00DAE0  0E00               	movlw	0
  8829  00DAE2  6E0C               	movwf	(___aomod@divisor+3)^0,c
  8830  00DAE4  0E00               	movlw	0
  8831  00DAE6  6E0D               	movwf	(___aomod@divisor+4)^0,c
  8832  00DAE8  0E00               	movlw	0
  8833  00DAEA  6E0E               	movwf	(___aomod@divisor+5)^0,c
  8834  00DAEC  0E00               	movlw	0
  8835  00DAEE  6E0F               	movwf	(___aomod@divisor+6)^0,c
  8836  00DAF0  0E00               	movlw	0
  8837  00DAF2  6E10               	movwf	(___aomod@divisor+7)^0,c
  8838  00DAF4  EC5E  F067         	call	___aomod	;wreg free
  8839  00DAF8  C001  F026         	movff	?___aomod,??_dtoa
  8840  00DAFC  C002  F027         	movff	?___aomod+1,??_dtoa+1
  8841  00DB00  C003  F028         	movff	?___aomod+2,??_dtoa+2
  8842  00DB04  C004  F029         	movff	?___aomod+3,??_dtoa+3
  8843  00DB08  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  8844  00DB0C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  8845  00DB10  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  8846  00DB14  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  8847  00DB18  C026  F013         	movff	??_dtoa,abs@a
  8848  00DB1C  C028  F014         	movff	??_dtoa+2,abs@a+1
  8849  00DB20  EC42  F061         	call	_abs	;wreg free
  8850  00DB24  5013               	movf	?_abs^0,w,c
  8851  00DB26  0F30               	addlw	48
  8852  00DB28  6EDF               	movwf	indf2,c
  8853  00DB2A                     
  8854                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  8855  00DB2A  0630               	decf	dtoa@p^0,f,c
  8856  00DB2C  A0D8               	btfss	status,0,c
  8857  00DB2E  0631               	decf	(dtoa@p+1)^0,f,c
  8858  00DB30                     
  8859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  8860  00DB30  0632               	decf	dtoa@w^0,f,c
  8861  00DB32  A0D8               	btfss	status,0,c
  8862  00DB34  0633               	decf	(dtoa@w+1)^0,f,c
  8863  00DB36                     
  8864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8865  00DB36  C036  F001         	movff	dtoa@n,___aodiv@dividend
  8866  00DB3A  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  8867  00DB3E  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  8868  00DB42  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  8869  00DB46  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  8870  00DB4A  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  8871  00DB4E  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  8872  00DB52  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  8873  00DB56  0E0A               	movlw	10
  8874  00DB58  6E09               	movwf	___aodiv@divisor^0,c
  8875  00DB5A  0E00               	movlw	0
  8876  00DB5C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  8877  00DB5E  0E00               	movlw	0
  8878  00DB60  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  8879  00DB62  0E00               	movlw	0
  8880  00DB64  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  8881  00DB66  0E00               	movlw	0
  8882  00DB68  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  8883  00DB6A  0E00               	movlw	0
  8884  00DB6C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  8885  00DB6E  0E00               	movlw	0
  8886  00DB70  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  8887  00DB72  0E00               	movlw	0
  8888  00DB74  6E10               	movwf	(___aodiv@divisor+7)^0,c
  8889  00DB76  EC10  F068         	call	___aodiv	;wreg free
  8890  00DB7A  C001  F036         	movff	?___aodiv,dtoa@n
  8891  00DB7E  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  8892  00DB82  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  8893  00DB86  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  8894  00DB8A  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  8895  00DB8E  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  8896  00DB92  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  8897  00DB96  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  8898  00DB9A                     l4036:
  8899                           
  8900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8901  00DB9A  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  8902  00DB9C  EFD8  F06D         	goto	u5061
  8903  00DBA0  503F               	movf	(dtoa@i+1)^0,w,c
  8904  00DBA2  E108               	bnz	u5060
  8905  00DBA4  043E               	decf	dtoa@i^0,w,c
  8906  00DBA6  A0D8               	btfss	status,0,c
  8907  00DBA8  EFD8  F06D         	goto	u5061
  8908  00DBAC  EFDA  F06D         	goto	u5060
  8909  00DBB0                     u5061:
  8910  00DBB0  EF0A  F06E         	goto	l4046
  8911  00DBB4                     u5060:
  8912  00DBB4  5036               	movf	dtoa@n^0,w,c
  8913  00DBB6  1037               	iorwf	(dtoa@n+1)^0,w,c
  8914  00DBB8  1038               	iorwf	(dtoa@n+2)^0,w,c
  8915  00DBBA  1039               	iorwf	(dtoa@n+3)^0,w,c
  8916  00DBBC  103A               	iorwf	(dtoa@n+4)^0,w,c
  8917  00DBBE  103B               	iorwf	(dtoa@n+5)^0,w,c
  8918  00DBC0  103C               	iorwf	(dtoa@n+6)^0,w,c
  8919  00DBC2  103D               	iorwf	(dtoa@n+7)^0,w,c
  8920  00DBC4  A4D8               	btfss	status,2,c
  8921  00DBC6  EFE7  F06D         	goto	u5071
  8922  00DBCA  EFE9  F06D         	goto	u5070
  8923  00DBCE                     u5071:
  8924  00DBCE  EF51  F06D         	goto	l4026
  8925  00DBD2                     u5070:
  8926  00DBD2  BE31               	btfsc	(dtoa@p+1)^0,7,c
  8927  00DBD4  EFF6  F06D         	goto	u5080
  8928  00DBD8  5031               	movf	(dtoa@p+1)^0,w,c
  8929  00DBDA  E106               	bnz	u5081
  8930  00DBDC  0430               	decf	dtoa@p^0,w,c
  8931  00DBDE  B0D8               	btfsc	status,0,c
  8932  00DBE0  EFF4  F06D         	goto	u5081
  8933  00DBE4  EFF6  F06D         	goto	u5080
  8934  00DBE8                     u5081:
  8935  00DBE8  EF51  F06D         	goto	l4026
  8936  00DBEC                     u5080:
  8937  00DBEC  BE33               	btfsc	(dtoa@w+1)^0,7,c
  8938  00DBEE  EF01  F06E         	goto	u5091
  8939  00DBF2  5033               	movf	(dtoa@w+1)^0,w,c
  8940  00DBF4  E108               	bnz	u5090
  8941  00DBF6  0432               	decf	dtoa@w^0,w,c
  8942  00DBF8  A0D8               	btfss	status,0,c
  8943  00DBFA  EF01  F06E         	goto	u5091
  8944  00DBFE  EF03  F06E         	goto	u5090
  8945  00DC02                     u5091:
  8946  00DC02  EF0A  F06E         	goto	l4046
  8947  00DC06                     u5090:
  8948  00DC06  B27C               	btfsc	_flags^0,1,c
  8949  00DC08  EF08  F06E         	goto	u5101
  8950  00DC0C  EF0A  F06E         	goto	u5100
  8951  00DC10                     u5101:
  8952  00DC10  EF51  F06D         	goto	l4026
  8953  00DC14                     u5100:
  8954  00DC14                     l4046:
  8955                           
  8956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8957  00DC14  5034               	movf	dtoa@s^0,w,c
  8958  00DC16  1035               	iorwf	(dtoa@s+1)^0,w,c
  8959  00DC18  A4D8               	btfss	status,2,c
  8960  00DC1A  EF11  F06E         	goto	u5111
  8961  00DC1E  EF13  F06E         	goto	u5110
  8962  00DC22                     u5111:
  8963  00DC22  EF1A  F06E         	goto	l4050
  8964  00DC26                     u5110:
  8965  00DC26  A47C               	btfss	_flags^0,2,c
  8966  00DC28  EF18  F06E         	goto	u5121
  8967  00DC2C  EF1A  F06E         	goto	u5120
  8968  00DC30                     u5121:
  8969  00DC30  EF38  F06E         	goto	l4060
  8970  00DC34                     u5120:
  8971  00DC34                     l4050:
  8972                           
  8973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  8974  00DC34  063E               	decf	dtoa@i^0,f,c
  8975  00DC36  A0D8               	btfss	status,0,c
  8976  00DC38  063F               	decf	(dtoa@i+1)^0,f,c
  8977  00DC3A                     
  8978                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8979  00DC3A  5034               	movf	dtoa@s^0,w,c
  8980  00DC3C  1035               	iorwf	(dtoa@s+1)^0,w,c
  8981  00DC3E  A4D8               	btfss	status,2,c
  8982  00DC40  EF24  F06E         	goto	u5131
  8983  00DC44  EF26  F06E         	goto	u5130
  8984  00DC48                     u5131:
  8985  00DC48  EF2C  F06E         	goto	l4056
  8986  00DC4C                     u5130:
  8987  00DC4C  0E00               	movlw	0
  8988  00DC4E  6E2F               	movwf	(_dtoa$1027+1)^0,c
  8989  00DC50  0E2B               	movlw	43
  8990  00DC52  6E2E               	movwf	_dtoa$1027^0,c
  8991  00DC54  EF30  F06E         	goto	l4058
  8992  00DC58                     l4056:
  8993  00DC58  0E00               	movlw	0
  8994  00DC5A  6E2F               	movwf	(_dtoa$1027+1)^0,c
  8995  00DC5C  0E2D               	movlw	45
  8996  00DC5E  6E2E               	movwf	_dtoa$1027^0,c
  8997  00DC60                     l4058:
  8998  00DC60  0E00               	movlw	low _dbuf
  8999  00DC62  243E               	addwf	dtoa@i^0,w,c
  9000  00DC64  6ED9               	movwf	fsr2l,c
  9001  00DC66  0E01               	movlw	high _dbuf
  9002  00DC68  203F               	addwfc	(dtoa@i+1)^0,w,c
  9003  00DC6A  6EDA               	movwf	fsr2h,c
  9004  00DC6C  C02E  FFDF         	movff	_dtoa$1027,indf2
  9005  00DC70                     l4060:
  9006                           
  9007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  9008  00DC70  C01C  F011         	movff	dtoa@fp,pad@fp
  9009  00DC74  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  9010  00DC78  0E00               	movlw	low _dbuf
  9011  00DC7A  243E               	addwf	dtoa@i^0,w,c
  9012  00DC7C  6E13               	movwf	pad@buf^0,c
  9013  00DC7E  0E01               	movlw	high _dbuf
  9014  00DC80  203F               	addwfc	(dtoa@i+1)^0,w,c
  9015  00DC82  6E14               	movwf	(pad@buf+1)^0,c
  9016  00DC84  C032  F015         	movff	dtoa@w,pad@p
  9017  00DC88  C033  F016         	movff	dtoa@w+1,pad@p+1
  9018  00DC8C  ECB7  F063         	call	_pad	;wreg free
  9019  00DC90  C011  F01C         	movff	?_pad,?_dtoa
  9020  00DC94  C012  F01D         	movff	?_pad+1,?_dtoa+1
  9021  00DC98  0012               	return		;funcret
  9022  00DC9A                     __end_of_dtoa:
  9023                           	callstack 0
  9024                           
  9025 ;; *************** function _pad *****************
  9026 ;; Defined at:
  9027 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9028 ;; Parameters:    Size  Location     Type
  9029 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9030 ;;		 -> sprintf@f(6), 
  9031 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9032 ;;		 -> dbuf(80), 
  9033 ;;  p               2   20[COMRAM] int 
  9034 ;; Auto vars:     Size  Location     Type
  9035 ;;  w               2   25[COMRAM] int 
  9036 ;;  i               2   23[COMRAM] int 
  9037 ;; Return value:  Size  Location     Type
  9038 ;;                  2   16[COMRAM] int 
  9039 ;; Registers used:
  9040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9041 ;; Tracked objects:
  9042 ;;		On entry : 0/0
  9043 ;;		On exit  : 0/0
  9044 ;;		Unchanged: 0/0
  9045 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  9046 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9047 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9048 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9049 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9050 ;;Total ram usage:       11 bytes
  9051 ;; Hardware stack levels used: 1
  9052 ;; Hardware stack levels required when called: 3
  9053 ;; This function calls:
  9054 ;;		_fputc
  9055 ;;		_fputs
  9056 ;;		_strlen
  9057 ;; This function is called by:
  9058 ;;		_dtoa
  9059 ;;		_efgtoa
  9060 ;;		_xtoa
  9061 ;; This function uses a non-reentrant model
  9062 ;;
  9063                           
  9064                           	psect	text26
  9065  00C76E                     __ptext26:
  9066                           	callstack 0
  9067  00C76E                     _pad:
  9068                           	callstack 23
  9069  00C76E                     
  9070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9071  00C76E  A07C               	btfss	_flags^0,0,c
  9072  00C770  EFBC  F063         	goto	u4581
  9073  00C774  EFBE  F063         	goto	u4580
  9074  00C778                     u4581:
  9075  00C778  EFC8  F063         	goto	l3858
  9076  00C77C                     u4580:
  9077  00C77C                     
  9078                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9079  00C77C  C013  F00A         	movff	pad@buf,fputs@s
  9080  00C780  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9081  00C784  C011  F00C         	movff	pad@fp,fputs@fp
  9082  00C788  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9083  00C78C  EC83  F061         	call	_fputs	;wreg free
  9084  00C790                     l3858:
  9085                           
  9086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9087  00C790  BE16               	btfsc	(pad@p+1)^0,7,c
  9088  00C792  EFCD  F063         	goto	u4591
  9089  00C796  EFCF  F063         	goto	u4590
  9090  00C79A                     u4591:
  9091  00C79A  EFD5  F063         	goto	l3862
  9092  00C79E                     u4590:
  9093  00C79E  C015  F01A         	movff	pad@p,pad@w
  9094  00C7A2  C016  F01B         	movff	pad@p+1,pad@w+1
  9095  00C7A6  EFD9  F063         	goto	l858
  9096  00C7AA                     l3862:
  9097  00C7AA  0E00               	movlw	0
  9098  00C7AC  6E1B               	movwf	(pad@w+1)^0,c
  9099  00C7AE  0E00               	movlw	0
  9100  00C7B0  6E1A               	movwf	pad@w^0,c
  9101  00C7B2                     l858:
  9102                           
  9103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9104  00C7B2  0E00               	movlw	0
  9105  00C7B4  6E19               	movwf	(pad@i+1)^0,c
  9106  00C7B6  0E00               	movlw	0
  9107  00C7B8  6E18               	movwf	pad@i^0,c
  9108                           
  9109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9110  00C7BA  EFEB  F063         	goto	l3868
  9111  00C7BE                     l3864:
  9112                           
  9113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9114  00C7BE  0E00               	movlw	0
  9115  00C7C0  6E02               	movwf	(fputc@c+1)^0,c
  9116  00C7C2  0E20               	movlw	32
  9117  00C7C4  6E01               	movwf	fputc@c^0,c
  9118  00C7C6  C011  F003         	movff	pad@fp,fputc@fp
  9119  00C7CA  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9120  00C7CE  EC7A  F064         	call	_fputc	;wreg free
  9121  00C7D2                     
  9122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9123  00C7D2  4A18               	infsnz	pad@i^0,f,c
  9124  00C7D4  2A19               	incf	(pad@i+1)^0,f,c
  9125  00C7D6                     l3868:
  9126                           
  9127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9128  00C7D6  501A               	movf	pad@w^0,w,c
  9129  00C7D8  5C18               	subwf	pad@i^0,w,c
  9130  00C7DA  5019               	movf	(pad@i+1)^0,w,c
  9131  00C7DC  0A80               	xorlw	128
  9132  00C7DE  6E17               	movwf	??_pad^0,c
  9133  00C7E0  501B               	movf	(pad@w+1)^0,w,c
  9134  00C7E2  0A80               	xorlw	128
  9135  00C7E4  5817               	subwfb	??_pad^0,w,c
  9136  00C7E6  A0D8               	btfss	status,0,c
  9137  00C7E8  EFF8  F063         	goto	u4601
  9138  00C7EC  EFFA  F063         	goto	u4600
  9139  00C7F0                     u4601:
  9140  00C7F0  EFDF  F063         	goto	l3864
  9141  00C7F4                     u4600:
  9142  00C7F4                     
  9143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9144  00C7F4  B07C               	btfsc	_flags^0,0,c
  9145  00C7F6  EFFF  F063         	goto	u4611
  9146  00C7FA  EF01  F064         	goto	u4610
  9147  00C7FE                     u4611:
  9148  00C7FE  EF0B  F064         	goto	l3872
  9149  00C802                     u4610:
  9150  00C802                     
  9151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9152  00C802  C013  F00A         	movff	pad@buf,fputs@s
  9153  00C806  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9154  00C80A  C011  F00C         	movff	pad@fp,fputs@fp
  9155  00C80E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9156  00C812  EC83  F061         	call	_fputs	;wreg free
  9157  00C816                     l3872:
  9158                           
  9159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  9160  00C816  C013  F001         	movff	pad@buf,strlen@s
  9161  00C81A  C014  F002         	movff	pad@buf+1,strlen@s+1
  9162  00C81E  EC7D  F060         	call	_strlen	;wreg free
  9163  00C822  501A               	movf	pad@w^0,w,c
  9164  00C824  2401               	addwf	?_strlen^0,w,c
  9165  00C826  6E11               	movwf	?_pad^0,c
  9166  00C828  501B               	movf	(pad@w+1)^0,w,c
  9167  00C82A  2002               	addwfc	(?_strlen+1)^0,w,c
  9168  00C82C  6E12               	movwf	(?_pad+1)^0,c
  9169  00C82E  0012               	return		;funcret
  9170  00C830                     __end_of_pad:
  9171                           	callstack 0
  9172                           
  9173 ;; *************** function _strlen *****************
  9174 ;; Defined at:
  9175 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9178 ;;		 -> dbuf(80), 
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9181 ;;		 -> dbuf(80), 
  9182 ;; Return value:  Size  Location     Type
  9183 ;;                  2    0[COMRAM] unsigned int 
  9184 ;; Registers used:
  9185 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  9191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9194 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9195 ;;Total ram usage:        4 bytes
  9196 ;; Hardware stack levels used: 1
  9197 ;; This function calls:
  9198 ;;		Nothing
  9199 ;; This function is called by:
  9200 ;;		_pad
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           	psect	text27
  9205  00C0FA                     __ptext27:
  9206                           	callstack 0
  9207  00C0FA                     _strlen:
  9208                           	callstack 25
  9209  00C0FA  C001  F003         	movff	strlen@s,strlen@a
  9210  00C0FE  C002  F004         	movff	strlen@s+1,strlen@a+1
  9211  00C102  EF85  F060         	goto	l3310
  9212  00C106                     l3308:
  9213  00C106  4A01               	infsnz	strlen@s^0,f,c
  9214  00C108  2A02               	incf	(strlen@s+1)^0,f,c
  9215  00C10A                     l3310:
  9216  00C10A  C001  FFD9         	movff	strlen@s,fsr2l
  9217  00C10E  C002  FFDA         	movff	strlen@s+1,fsr2h
  9218  00C112  50DF               	movf	indf2,w,c
  9219  00C114  A4D8               	btfss	status,2,c
  9220  00C116  EF8F  F060         	goto	u3701
  9221  00C11A  EF91  F060         	goto	u3700
  9222  00C11E                     u3701:
  9223  00C11E  EF83  F060         	goto	l3308
  9224  00C122                     u3700:
  9225  00C122  5003               	movf	strlen@a^0,w,c
  9226  00C124  5C01               	subwf	strlen@s^0,w,c
  9227  00C126  6E01               	movwf	?_strlen^0,c
  9228  00C128  5004               	movf	(strlen@a+1)^0,w,c
  9229  00C12A  5802               	subwfb	(strlen@s+1)^0,w,c
  9230  00C12C  6E02               	movwf	(?_strlen+1)^0,c
  9231  00C12E  0012               	return		;funcret
  9232  00C130                     __end_of_strlen:
  9233                           	callstack 0
  9234                           
  9235 ;; *************** function _fputs *****************
  9236 ;; Defined at:
  9237 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  9238 ;; Parameters:    Size  Location     Type
  9239 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9240 ;;		 -> dbuf(80), 
  9241 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9242 ;;		 -> sprintf@f(6), 
  9243 ;; Auto vars:     Size  Location     Type
  9244 ;;  i               2   14[COMRAM] int 
  9245 ;;  c               1   13[COMRAM] unsigned char 
  9246 ;; Return value:  Size  Location     Type
  9247 ;;                  2    9[COMRAM] int 
  9248 ;; Registers used:
  9249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9250 ;; Tracked objects:
  9251 ;;		On entry : 0/0
  9252 ;;		On exit  : 0/0
  9253 ;;		Unchanged: 0/0
  9254 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  9255 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9256 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9258 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9259 ;;Total ram usage:        7 bytes
  9260 ;; Hardware stack levels used: 1
  9261 ;; Hardware stack levels required when called: 2
  9262 ;; This function calls:
  9263 ;;		_fputc
  9264 ;; This function is called by:
  9265 ;;		_pad
  9266 ;; This function uses a non-reentrant model
  9267 ;;
  9268                           
  9269                           	psect	text28
  9270  00C306                     __ptext28:
  9271                           	callstack 0
  9272  00C306                     _fputs:
  9273                           	callstack 23
  9274  00C306  0E00               	movlw	0
  9275  00C308  6E10               	movwf	(fputs@i+1)^0,c
  9276  00C30A  0E00               	movlw	0
  9277  00C30C  6E0F               	movwf	fputs@i^0,c
  9278  00C30E  EF94  F061         	goto	l3304
  9279  00C312                     l3300:
  9280  00C312  C00E  F001         	movff	fputs@c,fputc@c
  9281  00C316  6A02               	clrf	(fputc@c+1)^0,c
  9282  00C318  C00C  F003         	movff	fputs@fp,fputc@fp
  9283  00C31C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9284  00C320  EC7A  F064         	call	_fputc	;wreg free
  9285  00C324  4A0F               	infsnz	fputs@i^0,f,c
  9286  00C326  2A10               	incf	(fputs@i+1)^0,f,c
  9287  00C328                     l3304:
  9288  00C328  500F               	movf	fputs@i^0,w,c
  9289  00C32A  240A               	addwf	fputs@s^0,w,c
  9290  00C32C  6ED9               	movwf	fsr2l,c
  9291  00C32E  5010               	movf	(fputs@i+1)^0,w,c
  9292  00C330  200B               	addwfc	(fputs@s+1)^0,w,c
  9293  00C332  6EDA               	movwf	fsr2h,c
  9294  00C334  50DF               	movf	indf2,w,c
  9295  00C336  6E0E               	movwf	fputs@c^0,c
  9296  00C338  500E               	movf	fputs@c^0,w,c
  9297  00C33A  A4D8               	btfss	status,2,c
  9298  00C33C  EFA2  F061         	goto	u3691
  9299  00C340  EFA4  F061         	goto	u3690
  9300  00C344                     u3691:
  9301  00C344  EF89  F061         	goto	l3300
  9302  00C348                     u3690:
  9303  00C348  0012               	return		;funcret
  9304  00C34A                     __end_of_fputs:
  9305                           	callstack 0
  9306                           
  9307 ;; *************** function _abs *****************
  9308 ;; Defined at:
  9309 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  9310 ;; Parameters:    Size  Location     Type
  9311 ;;  a               2   18[COMRAM] int 
  9312 ;; Auto vars:     Size  Location     Type
  9313 ;;		None
  9314 ;; Return value:  Size  Location     Type
  9315 ;;                  2   18[COMRAM] int 
  9316 ;; Registers used:
  9317 ;;		wreg, status,2, status,0
  9318 ;; Tracked objects:
  9319 ;;		On entry : 0/0
  9320 ;;		On exit  : 0/0
  9321 ;;		Unchanged: 0/0
  9322 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  9323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9325 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9326 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9327 ;;Total ram usage:        4 bytes
  9328 ;; Hardware stack levels used: 1
  9329 ;; This function calls:
  9330 ;;		Nothing
  9331 ;; This function is called by:
  9332 ;;		_dtoa
  9333 ;; This function uses a non-reentrant model
  9334 ;;
  9335                           
  9336                           	psect	text29
  9337  00C284                     __ptext29:
  9338                           	callstack 0
  9339  00C284                     _abs:
  9340                           	callstack 26
  9341  00C284  BE14               	btfsc	(abs@a+1)^0,7,c
  9342  00C286  EF4F  F061         	goto	u4620
  9343  00C28A  5014               	movf	(abs@a+1)^0,w,c
  9344  00C28C  E106               	bnz	u4621
  9345  00C28E  0413               	decf	abs@a^0,w,c
  9346  00C290  B0D8               	btfsc	status,0,c
  9347  00C292  EF4D  F061         	goto	u4621
  9348  00C296  EF4F  F061         	goto	u4620
  9349  00C29A                     u4621:
  9350  00C29A  EF5D  F061         	goto	l1099
  9351  00C29E                     u4620:
  9352  00C29E  C013  F015         	movff	abs@a,??_abs
  9353  00C2A2  C014  F016         	movff	abs@a+1,??_abs+1
  9354  00C2A6  1E15               	comf	??_abs^0,f,c
  9355  00C2A8  1E16               	comf	(??_abs+1)^0,f,c
  9356  00C2AA  4A15               	infsnz	??_abs^0,f,c
  9357  00C2AC  2A16               	incf	(??_abs+1)^0,f,c
  9358  00C2AE  C015  F013         	movff	??_abs,?_abs
  9359  00C2B2  C016  F014         	movff	??_abs+1,?_abs+1
  9360  00C2B6  EF61  F061         	goto	l1102
  9361  00C2BA                     l1099:
  9362  00C2BA  C013  F013         	movff	abs@a,?_abs
  9363  00C2BE  C014  F014         	movff	abs@a+1,?_abs+1
  9364  00C2C2                     l1102:
  9365  00C2C2  0012               	return		;funcret
  9366  00C2C4                     __end_of_abs:
  9367                           	callstack 0
  9368                           
  9369 ;; *************** function ___aomod *****************
  9370 ;; Defined at:
  9371 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  9372 ;; Parameters:    Size  Location     Type
  9373 ;;  dividend        8    0[COMRAM] long long 
  9374 ;;  divisor         8    8[COMRAM] long long 
  9375 ;; Auto vars:     Size  Location     Type
  9376 ;;  sign            1   17[COMRAM] unsigned char 
  9377 ;;  counter         1   16[COMRAM] unsigned char 
  9378 ;; Return value:  Size  Location     Type
  9379 ;;                  8    0[COMRAM] long long 
  9380 ;; Registers used:
  9381 ;;		wreg, status,2, status,0
  9382 ;; Tracked objects:
  9383 ;;		On entry : 0/0
  9384 ;;		On exit  : 0/0
  9385 ;;		Unchanged: 0/0
  9386 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  9387 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9388 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9390 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9391 ;;Total ram usage:       18 bytes
  9392 ;; Hardware stack levels used: 1
  9393 ;; This function calls:
  9394 ;;		Nothing
  9395 ;; This function is called by:
  9396 ;;		_dtoa
  9397 ;; This function uses a non-reentrant model
  9398 ;;
  9399                           
  9400                           	psect	text30
  9401  00CEBC                     __ptext30:
  9402                           	callstack 0
  9403  00CEBC                     ___aomod:
  9404                           	callstack 26
  9405  00CEBC  0E00               	movlw	0
  9406  00CEBE  6E12               	movwf	___aomod@sign^0,c
  9407  00CEC0  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  9408  00CEC2  EF67  F067         	goto	u3820
  9409  00CEC6  EF65  F067         	goto	u3821
  9410  00CECA                     u3821:
  9411  00CECA  EF79  F067         	goto	l3382
  9412  00CECE                     u3820:
  9413  00CECE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9414  00CED0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9415  00CED2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9416  00CED4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9417  00CED6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9418  00CED8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9419  00CEDA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9420  00CEDC  6C01               	negf	___aomod@dividend^0,c
  9421  00CEDE  0E00               	movlw	0
  9422  00CEE0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9423  00CEE2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9424  00CEE4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9425  00CEE6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9426  00CEE8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  9427  00CEEA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  9428  00CEEC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  9429  00CEEE  0E01               	movlw	1
  9430  00CEF0  6E12               	movwf	___aomod@sign^0,c
  9431  00CEF2                     l3382:
  9432  00CEF2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  9433  00CEF4  EF80  F067         	goto	u3830
  9434  00CEF8  EF7E  F067         	goto	u3831
  9435  00CEFC                     u3831:
  9436  00CEFC  EF90  F067         	goto	l3386
  9437  00CF00                     u3830:
  9438  00CF00  1E10               	comf	(___aomod@divisor+7)^0,f,c
  9439  00CF02  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  9440  00CF04  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  9441  00CF06  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  9442  00CF08  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  9443  00CF0A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  9444  00CF0C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  9445  00CF0E  6C09               	negf	___aomod@divisor^0,c
  9446  00CF10  0E00               	movlw	0
  9447  00CF12  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  9448  00CF14  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  9449  00CF16  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  9450  00CF18  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  9451  00CF1A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  9452  00CF1C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  9453  00CF1E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  9454  00CF20                     l3386:
  9455  00CF20  5009               	movf	___aomod@divisor^0,w,c
  9456  00CF22  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  9457  00CF24  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  9458  00CF26  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  9459  00CF28  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  9460  00CF2A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  9461  00CF2C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  9462  00CF2E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  9463  00CF30  B4D8               	btfsc	status,2,c
  9464  00CF32  EF9D  F067         	goto	u3841
  9465  00CF36  EF9F  F067         	goto	u3840
  9466  00CF3A                     u3841:
  9467  00CF3A  EFE7  F067         	goto	l3402
  9468  00CF3E                     u3840:
  9469  00CF3E  0E01               	movlw	1
  9470  00CF40  6E11               	movwf	___aomod@counter^0,c
  9471  00CF42  EFAD  F067         	goto	l3392
  9472  00CF46                     l3390:
  9473  00CF46  90D8               	bcf	status,0,c
  9474  00CF48  3609               	rlcf	___aomod@divisor^0,f,c
  9475  00CF4A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  9476  00CF4C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  9477  00CF4E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  9478  00CF50  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  9479  00CF52  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  9480  00CF54  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  9481  00CF56  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  9482  00CF58  2A11               	incf	___aomod@counter^0,f,c
  9483  00CF5A                     l3392:
  9484  00CF5A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  9485  00CF5C  EFB2  F067         	goto	u3851
  9486  00CF60  EFB4  F067         	goto	u3850
  9487  00CF64                     u3851:
  9488  00CF64  EFA3  F067         	goto	l3390
  9489  00CF68                     u3850:
  9490  00CF68                     l3394:
  9491  00CF68  5009               	movf	___aomod@divisor^0,w,c
  9492  00CF6A  5C01               	subwf	___aomod@dividend^0,w,c
  9493  00CF6C  500A               	movf	(___aomod@divisor+1)^0,w,c
  9494  00CF6E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  9495  00CF70  500B               	movf	(___aomod@divisor+2)^0,w,c
  9496  00CF72  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  9497  00CF74  500C               	movf	(___aomod@divisor+3)^0,w,c
  9498  00CF76  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  9499  00CF78  500D               	movf	(___aomod@divisor+4)^0,w,c
  9500  00CF7A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  9501  00CF7C  500E               	movf	(___aomod@divisor+5)^0,w,c
  9502  00CF7E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  9503  00CF80  500F               	movf	(___aomod@divisor+6)^0,w,c
  9504  00CF82  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  9505  00CF84  5010               	movf	(___aomod@divisor+7)^0,w,c
  9506  00CF86  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  9507  00CF88  A0D8               	btfss	status,0,c
  9508  00CF8A  EFC9  F067         	goto	u3861
  9509  00CF8E  EFCB  F067         	goto	u3860
  9510  00CF92                     u3861:
  9511  00CF92  EFDB  F067         	goto	l3398
  9512  00CF96                     u3860:
  9513  00CF96  5009               	movf	___aomod@divisor^0,w,c
  9514  00CF98  5E01               	subwf	___aomod@dividend^0,f,c
  9515  00CF9A  500A               	movf	(___aomod@divisor+1)^0,w,c
  9516  00CF9C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  9517  00CF9E  500B               	movf	(___aomod@divisor+2)^0,w,c
  9518  00CFA0  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  9519  00CFA2  500C               	movf	(___aomod@divisor+3)^0,w,c
  9520  00CFA4  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  9521  00CFA6  500D               	movf	(___aomod@divisor+4)^0,w,c
  9522  00CFA8  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  9523  00CFAA  500E               	movf	(___aomod@divisor+5)^0,w,c
  9524  00CFAC  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  9525  00CFAE  500F               	movf	(___aomod@divisor+6)^0,w,c
  9526  00CFB0  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  9527  00CFB2  5010               	movf	(___aomod@divisor+7)^0,w,c
  9528  00CFB4  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  9529  00CFB6                     l3398:
  9530  00CFB6  90D8               	bcf	status,0,c
  9531  00CFB8  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  9532  00CFBA  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  9533  00CFBC  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  9534  00CFBE  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  9535  00CFC0  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  9536  00CFC2  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  9537  00CFC4  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  9538  00CFC6  3209               	rrcf	___aomod@divisor^0,f,c
  9539  00CFC8  2E11               	decfsz	___aomod@counter^0,f,c
  9540  00CFCA  EFB4  F067         	goto	l3394
  9541  00CFCE                     l3402:
  9542  00CFCE  5012               	movf	___aomod@sign^0,w,c
  9543  00CFD0  B4D8               	btfsc	status,2,c
  9544  00CFD2  EFED  F067         	goto	u3871
  9545  00CFD6  EFEF  F067         	goto	u3870
  9546  00CFDA                     u3871:
  9547  00CFDA  EFFF  F067         	goto	l3406
  9548  00CFDE                     u3870:
  9549  00CFDE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  9550  00CFE0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  9551  00CFE2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  9552  00CFE4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  9553  00CFE6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  9554  00CFE8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  9555  00CFEA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  9556  00CFEC  6C01               	negf	___aomod@dividend^0,c
  9557  00CFEE  0E00               	movlw	0
  9558  00CFF0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  9559  00CFF2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  9560  00CFF4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  9561  00CFF6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  9562  00CFF8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  9563  00CFFA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  9564  00CFFC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  9565  00CFFE                     l3406:
  9566  00CFFE  C001  F001         	movff	___aomod@dividend,?___aomod
  9567  00D002  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  9568  00D006  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  9569  00D00A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  9570  00D00E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  9571  00D012  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  9572  00D016  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  9573  00D01A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  9574  00D01E  0012               	return		;funcret
  9575  00D020                     __end_of___aomod:
  9576                           	callstack 0
  9577                           
  9578 ;; *************** function ___aodiv *****************
  9579 ;; Defined at:
  9580 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  9581 ;; Parameters:    Size  Location     Type
  9582 ;;  dividend        8    0[COMRAM] long long 
  9583 ;;  divisor         8    8[COMRAM] long long 
  9584 ;; Auto vars:     Size  Location     Type
  9585 ;;  quotient        8   18[COMRAM] long long 
  9586 ;;  sign            1   17[COMRAM] unsigned char 
  9587 ;;  counter         1   16[COMRAM] unsigned char 
  9588 ;; Return value:  Size  Location     Type
  9589 ;;                  8    0[COMRAM] long long 
  9590 ;; Registers used:
  9591 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9592 ;; Tracked objects:
  9593 ;;		On entry : 0/0
  9594 ;;		On exit  : 0/0
  9595 ;;		Unchanged: 0/0
  9596 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  9597 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9598 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9600 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9601 ;;Total ram usage:       26 bytes
  9602 ;; Hardware stack levels used: 1
  9603 ;; This function calls:
  9604 ;;		Nothing
  9605 ;; This function is called by:
  9606 ;;		_dtoa
  9607 ;; This function uses a non-reentrant model
  9608 ;;
  9609                           
  9610                           	psect	text31
  9611  00D020                     __ptext31:
  9612                           	callstack 0
  9613  00D020                     ___aodiv:
  9614                           	callstack 26
  9615  00D020  0E00               	movlw	0
  9616  00D022  6E12               	movwf	___aodiv@sign^0,c
  9617  00D024  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  9618  00D026  EF19  F068         	goto	u3750
  9619  00D02A  EF17  F068         	goto	u3751
  9620  00D02E                     u3751:
  9621  00D02E  EF2B  F068         	goto	l3338
  9622  00D032                     u3750:
  9623  00D032  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  9624  00D034  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  9625  00D036  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  9626  00D038  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  9627  00D03A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  9628  00D03C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  9629  00D03E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  9630  00D040  6C09               	negf	___aodiv@divisor^0,c
  9631  00D042  0E00               	movlw	0
  9632  00D044  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  9633  00D046  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  9634  00D048  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  9635  00D04A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  9636  00D04C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  9637  00D04E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  9638  00D050  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  9639  00D052  0E01               	movlw	1
  9640  00D054  6E12               	movwf	___aodiv@sign^0,c
  9641  00D056                     l3338:
  9642  00D056  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  9643  00D058  EF32  F068         	goto	u3760
  9644  00D05C  EF30  F068         	goto	u3761
  9645  00D060                     u3761:
  9646  00D060  EF44  F068         	goto	l3344
  9647  00D064                     u3760:
  9648  00D064  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  9649  00D066  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  9650  00D068  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  9651  00D06A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  9652  00D06C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  9653  00D06E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  9654  00D070  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  9655  00D072  6C01               	negf	___aodiv@dividend^0,c
  9656  00D074  0E00               	movlw	0
  9657  00D076  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  9658  00D078  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  9659  00D07A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  9660  00D07C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  9661  00D07E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  9662  00D080  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  9663  00D082  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  9664  00D084  0E01               	movlw	1
  9665  00D086  1A12               	xorwf	___aodiv@sign^0,f,c
  9666  00D088                     l3344:
  9667  00D088  EE20  F013         	lfsr	2,___aodiv@quotient
  9668  00D08C  0E07               	movlw	7
  9669  00D08E                     u3771:
  9670  00D08E  6ADE               	clrf	postinc2,c
  9671  00D090  06E8               	decf	wreg,f,c
  9672  00D092  E2FD               	bc	u3771
  9673  00D094  5009               	movf	___aodiv@divisor^0,w,c
  9674  00D096  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  9675  00D098  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  9676  00D09A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  9677  00D09C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  9678  00D09E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  9679  00D0A0  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  9680  00D0A2  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  9681  00D0A4  B4D8               	btfsc	status,2,c
  9682  00D0A6  EF57  F068         	goto	u3781
  9683  00D0AA  EF59  F068         	goto	u3780
  9684  00D0AE                     u3781:
  9685  00D0AE  EFAB  F068         	goto	l3366
  9686  00D0B2                     u3780:
  9687  00D0B2  0E01               	movlw	1
  9688  00D0B4  6E11               	movwf	___aodiv@counter^0,c
  9689  00D0B6  EF67  F068         	goto	l3352
  9690  00D0BA                     l3350:
  9691  00D0BA  90D8               	bcf	status,0,c
  9692  00D0BC  3609               	rlcf	___aodiv@divisor^0,f,c
  9693  00D0BE  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  9694  00D0C0  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  9695  00D0C2  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  9696  00D0C4  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  9697  00D0C6  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  9698  00D0C8  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  9699  00D0CA  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  9700  00D0CC  2A11               	incf	___aodiv@counter^0,f,c
  9701  00D0CE                     l3352:
  9702  00D0CE  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  9703  00D0D0  EF6C  F068         	goto	u3791
  9704  00D0D4  EF6E  F068         	goto	u3790
  9705  00D0D8                     u3791:
  9706  00D0D8  EF5D  F068         	goto	l3350
  9707  00D0DC                     u3790:
  9708  00D0DC                     l3354:
  9709  00D0DC  90D8               	bcf	status,0,c
  9710  00D0DE  3613               	rlcf	___aodiv@quotient^0,f,c
  9711  00D0E0  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  9712  00D0E2  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  9713  00D0E4  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  9714  00D0E6  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  9715  00D0E8  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  9716  00D0EA  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  9717  00D0EC  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  9718  00D0EE  5009               	movf	___aodiv@divisor^0,w,c
  9719  00D0F0  5C01               	subwf	___aodiv@dividend^0,w,c
  9720  00D0F2  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9721  00D0F4  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  9722  00D0F6  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9723  00D0F8  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  9724  00D0FA  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9725  00D0FC  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  9726  00D0FE  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9727  00D100  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  9728  00D102  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9729  00D104  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  9730  00D106  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9731  00D108  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  9732  00D10A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9733  00D10C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  9734  00D10E  A0D8               	btfss	status,0,c
  9735  00D110  EF8C  F068         	goto	u3801
  9736  00D114  EF8E  F068         	goto	u3800
  9737  00D118                     u3801:
  9738  00D118  EF9F  F068         	goto	l3362
  9739  00D11C                     u3800:
  9740  00D11C  5009               	movf	___aodiv@divisor^0,w,c
  9741  00D11E  5E01               	subwf	___aodiv@dividend^0,f,c
  9742  00D120  500A               	movf	(___aodiv@divisor+1)^0,w,c
  9743  00D122  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  9744  00D124  500B               	movf	(___aodiv@divisor+2)^0,w,c
  9745  00D126  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  9746  00D128  500C               	movf	(___aodiv@divisor+3)^0,w,c
  9747  00D12A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  9748  00D12C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  9749  00D12E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  9750  00D130  500E               	movf	(___aodiv@divisor+5)^0,w,c
  9751  00D132  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  9752  00D134  500F               	movf	(___aodiv@divisor+6)^0,w,c
  9753  00D136  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  9754  00D138  5010               	movf	(___aodiv@divisor+7)^0,w,c
  9755  00D13A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  9756  00D13C  8013               	bsf	___aodiv@quotient^0,0,c
  9757  00D13E                     l3362:
  9758  00D13E  90D8               	bcf	status,0,c
  9759  00D140  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  9760  00D142  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  9761  00D144  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  9762  00D146  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  9763  00D148  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  9764  00D14A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  9765  00D14C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  9766  00D14E  3209               	rrcf	___aodiv@divisor^0,f,c
  9767  00D150  2E11               	decfsz	___aodiv@counter^0,f,c
  9768  00D152  EF6E  F068         	goto	l3354
  9769  00D156                     l3366:
  9770  00D156  5012               	movf	___aodiv@sign^0,w,c
  9771  00D158  B4D8               	btfsc	status,2,c
  9772  00D15A  EFB1  F068         	goto	u3811
  9773  00D15E  EFB3  F068         	goto	u3810
  9774  00D162                     u3811:
  9775  00D162  EFC3  F068         	goto	l3370
  9776  00D166                     u3810:
  9777  00D166  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  9778  00D168  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  9779  00D16A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  9780  00D16C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  9781  00D16E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  9782  00D170  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  9783  00D172  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  9784  00D174  6C13               	negf	___aodiv@quotient^0,c
  9785  00D176  0E00               	movlw	0
  9786  00D178  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  9787  00D17A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  9788  00D17C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  9789  00D17E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  9790  00D180  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  9791  00D182  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  9792  00D184  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  9793  00D186                     l3370:
  9794  00D186  C013  F001         	movff	___aodiv@quotient,?___aodiv
  9795  00D18A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  9796  00D18E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  9797  00D192  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  9798  00D196  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  9799  00D19A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  9800  00D19E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  9801  00D1A2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  9802  00D1A6  0012               	return		;funcret
  9803  00D1A8                     __end_of___aodiv:
  9804                           	callstack 0
  9805                           
  9806 ;; *************** function _ctoa *****************
  9807 ;; Defined at:
  9808 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9809 ;; Parameters:    Size  Location     Type
  9810 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  9811 ;;		 -> sprintf@f(6), 
  9812 ;;  c               1   11[COMRAM] unsigned char 
  9813 ;; Auto vars:     Size  Location     Type
  9814 ;;  w               2   15[COMRAM] int 
  9815 ;;  l               2   13[COMRAM] int 
  9816 ;; Return value:  Size  Location     Type
  9817 ;;                  2    9[COMRAM] int 
  9818 ;; Registers used:
  9819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9820 ;; Tracked objects:
  9821 ;;		On entry : 0/0
  9822 ;;		On exit  : 0/0
  9823 ;;		Unchanged: 0/0
  9824 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  9825 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9826 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9827 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9828 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9829 ;;Total ram usage:        8 bytes
  9830 ;; Hardware stack levels used: 1
  9831 ;; Hardware stack levels required when called: 2
  9832 ;; This function calls:
  9833 ;;		_fputc
  9834 ;; This function is called by:
  9835 ;;		_vfpfcnvrt
  9836 ;; This function uses a non-reentrant model
  9837 ;;
  9838                           
  9839                           	psect	text32
  9840  00C9BE                     __ptext32:
  9841                           	callstack 0
  9842  00C9BE                     _ctoa:
  9843                           	callstack 25
  9844  00C9BE                     
  9845                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  9846  00C9BE  0100               	movlb	0	; () banked
  9847  00C9C0  51FB               	movf	_width& (0+255),w,b
  9848  00C9C2  11FC               	iorwf	(_width+1)& (0+255),w,b
  9849  00C9C4  A4D8               	btfss	status,2,c
  9850  00C9C6  EFE7  F064         	goto	u4941
  9851  00C9CA  EFE9  F064         	goto	u4940
  9852  00C9CE                     u4941:
  9853  00C9CE  EFEF  F064         	goto	l3978
  9854  00C9D2                     u4940:
  9855  00C9D2                     
  9856                           ; BSR set to: 0
  9857  00C9D2  C0FB  F010         	movff	_width,ctoa@w
  9858  00C9D6  C0FC  F011         	movff	_width+1,ctoa@w+1
  9859  00C9DA  EFF5  F064         	goto	l3980
  9860  00C9DE                     l3978:
  9861                           
  9862                           ; BSR set to: 0
  9863  00C9DE  0EFF               	movlw	255
  9864  00C9E0  25FB               	addwf	_width& (0+255),w,b
  9865  00C9E2  6E10               	movwf	ctoa@w^0,c
  9866  00C9E4  0EFF               	movlw	255
  9867  00C9E6  21FC               	addwfc	(_width+1)& (0+255),w,b
  9868  00C9E8  6E11               	movwf	(ctoa@w+1)^0,c
  9869  00C9EA                     l3980:
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  9873  00C9EA  A07C               	btfss	_flags^0,0,c
  9874  00C9EC  EFFA  F064         	goto	u4951
  9875  00C9F0  EFFC  F064         	goto	u4950
  9876  00C9F4                     u4951:
  9877  00C9F4  EF05  F065         	goto	l3984
  9878  00C9F8                     u4950:
  9879  00C9F8                     
  9880                           ; BSR set to: 0
  9881                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  9882  00C9F8  C00C  F001         	movff	ctoa@c,fputc@c
  9883  00C9FC  6A02               	clrf	(fputc@c+1)^0,c
  9884  00C9FE  C00A  F003         	movff	ctoa@fp,fputc@fp
  9885  00CA02  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  9886  00CA06  EC7A  F064         	call	_fputc	;wreg free
  9887  00CA0A                     l3984:
  9888                           
  9889                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  9890  00CA0A  BE11               	btfsc	(ctoa@w+1)^0,7,c
  9891  00CA0C  EF0A  F065         	goto	u4961
  9892  00CA10  EF0C  F065         	goto	u4960
  9893  00CA14                     u4961:
  9894  00CA14  EF0E  F065         	goto	l3988
  9895  00CA18                     u4960:
  9896  00CA18  EF12  F065         	goto	l874
  9897  00CA1C                     l3988:
  9898  00CA1C  0E00               	movlw	0
  9899  00CA1E  6E11               	movwf	(ctoa@w+1)^0,c
  9900  00CA20  0E00               	movlw	0
  9901  00CA22  6E10               	movwf	ctoa@w^0,c
  9902  00CA24                     l874:
  9903                           
  9904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  9905  00CA24  0E00               	movlw	0
  9906  00CA26  6E0F               	movwf	(ctoa@l+1)^0,c
  9907  00CA28  0E00               	movlw	0
  9908  00CA2A  6E0E               	movwf	ctoa@l^0,c
  9909                           
  9910                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  9911  00CA2C  EF24  F065         	goto	l3994
  9912  00CA30                     l3990:
  9913                           
  9914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  9915  00CA30  0E00               	movlw	0
  9916  00CA32  6E02               	movwf	(fputc@c+1)^0,c
  9917  00CA34  0E20               	movlw	32
  9918  00CA36  6E01               	movwf	fputc@c^0,c
  9919  00CA38  C00A  F003         	movff	ctoa@fp,fputc@fp
  9920  00CA3C  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  9921  00CA40  EC7A  F064         	call	_fputc	;wreg free
  9922  00CA44                     
  9923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 275:         ++l;
  9924  00CA44  4A0E               	infsnz	ctoa@l^0,f,c
  9925  00CA46  2A0F               	incf	(ctoa@l+1)^0,f,c
  9926  00CA48                     l3994:
  9927                           
  9928                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  9929  00CA48  5010               	movf	ctoa@w^0,w,c
  9930  00CA4A  5C0E               	subwf	ctoa@l^0,w,c
  9931  00CA4C  500F               	movf	(ctoa@l+1)^0,w,c
  9932  00CA4E  0A80               	xorlw	128
  9933  00CA50  6E0D               	movwf	??_ctoa^0,c
  9934  00CA52  5011               	movf	(ctoa@w+1)^0,w,c
  9935  00CA54  0A80               	xorlw	128
  9936  00CA56  580D               	subwfb	??_ctoa^0,w,c
  9937  00CA58  A0D8               	btfss	status,0,c
  9938  00CA5A  EF31  F065         	goto	u4971
  9939  00CA5E  EF33  F065         	goto	u4970
  9940  00CA62                     u4971:
  9941  00CA62  EF18  F065         	goto	l3990
  9942  00CA66                     u4970:
  9943  00CA66                     
  9944                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  9945  00CA66  B07C               	btfsc	_flags^0,0,c
  9946  00CA68  EF38  F065         	goto	u4981
  9947  00CA6C  EF3A  F065         	goto	u4980
  9948  00CA70                     u4981:
  9949  00CA70  EF43  F065         	goto	l3998
  9950  00CA74                     u4980:
  9951  00CA74                     
  9952                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  9953  00CA74  C00C  F001         	movff	ctoa@c,fputc@c
  9954  00CA78  6A02               	clrf	(fputc@c+1)^0,c
  9955  00CA7A  C00A  F003         	movff	ctoa@fp,fputc@fp
  9956  00CA7E  C00B  F004         	movff	ctoa@fp+1,fputc@fp+1
  9957  00CA82  EC7A  F064         	call	_fputc	;wreg free
  9958  00CA86                     l3998:
  9959                           
  9960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  9961  00CA86  0E01               	movlw	1
  9962  00CA88  240E               	addwf	ctoa@l^0,w,c
  9963  00CA8A  6E0A               	movwf	?_ctoa^0,c
  9964  00CA8C  0E00               	movlw	0
  9965  00CA8E  200F               	addwfc	(ctoa@l+1)^0,w,c
  9966  00CA90  6E0B               	movwf	(?_ctoa+1)^0,c
  9967  00CA92  0012               	return		;funcret
  9968  00CA94                     __end_of_ctoa:
  9969                           	callstack 0
  9970                           
  9971 ;; *************** function _fputc *****************
  9972 ;; Defined at:
  9973 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  9974 ;; Parameters:    Size  Location     Type
  9975 ;;  c               2    0[COMRAM] int 
  9976 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  9977 ;;		 -> sprintf@f(6), 
  9978 ;; Auto vars:     Size  Location     Type
  9979 ;;		None
  9980 ;; Return value:  Size  Location     Type
  9981 ;;                  2    0[COMRAM] int 
  9982 ;; Registers used:
  9983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9984 ;; Tracked objects:
  9985 ;;		On entry : 0/0
  9986 ;;		On exit  : 0/0
  9987 ;;		Unchanged: 0/0
  9988 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
  9989 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9991 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9992 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
  9993 ;;Total ram usage:        9 bytes
  9994 ;; Hardware stack levels used: 1
  9995 ;; Hardware stack levels required when called: 1
  9996 ;; This function calls:
  9997 ;;		_putch
  9998 ;; This function is called by:
  9999 ;;		_pad
 10000 ;;		_ctoa
 10001 ;;		_vfpfcnvrt
 10002 ;;		_fputs
 10003 ;; This function uses a non-reentrant model
 10004 ;;
 10005                           
 10006                           	psect	text33
 10007  00C8F4                     __ptext33:
 10008                           	callstack 0
 10009  00C8F4                     _fputc:
 10010                           	callstack 23
 10011  00C8F4  5003               	movf	fputc@fp^0,w,c
 10012  00C8F6  1004               	iorwf	(fputc@fp+1)^0,w,c
 10013  00C8F8  B4D8               	btfsc	status,2,c
 10014  00C8FA  EF81  F064         	goto	u3261
 10015  00C8FE  EF83  F064         	goto	u3260
 10016  00C902                     u3261:
 10017  00C902  EF8C  F064         	goto	l3086
 10018  00C906                     u3260:
 10019  00C906  5003               	movf	fputc@fp^0,w,c
 10020  00C908  1004               	iorwf	(fputc@fp+1)^0,w,c
 10021  00C90A  A4D8               	btfss	status,2,c
 10022  00C90C  EF8A  F064         	goto	u3271
 10023  00C910  EF8C  F064         	goto	u3270
 10024  00C914                     u3271:
 10025  00C914  EF91  F064         	goto	l3088
 10026  00C918                     u3270:
 10027  00C918                     l3086:
 10028  00C918  5001               	movf	fputc@c^0,w,c
 10029  00C91A  EC10  F060         	call	_putch
 10030  00C91E  EFDE  F064         	goto	l1184
 10031  00C922                     l3088:
 10032  00C922  EE20 F004          	lfsr	2,4
 10033  00C926  5003               	movf	fputc@fp^0,w,c
 10034  00C928  26D9               	addwf	fsr2l,f,c
 10035  00C92A  5004               	movf	(fputc@fp+1)^0,w,c
 10036  00C92C  22DA               	addwfc	fsr2h,f,c
 10037  00C92E  50DE               	movf	postinc2,w,c
 10038  00C930  10DE               	iorwf	postinc2,w,c
 10039  00C932  B4D8               	btfsc	status,2,c
 10040  00C934  EF9E  F064         	goto	u3281
 10041  00C938  EFA0  F064         	goto	u3280
 10042  00C93C                     u3281:
 10043  00C93C  EFBB  F064         	goto	l3092
 10044  00C940                     u3280:
 10045  00C940  EE20 F004          	lfsr	2,4
 10046  00C944  5003               	movf	fputc@fp^0,w,c
 10047  00C946  26D9               	addwf	fsr2l,f,c
 10048  00C948  5004               	movf	(fputc@fp+1)^0,w,c
 10049  00C94A  22DA               	addwfc	fsr2h,f,c
 10050  00C94C  EE10 F002          	lfsr	1,2
 10051  00C950  5003               	movf	fputc@fp^0,w,c
 10052  00C952  26E1               	addwf	fsr1l,f,c
 10053  00C954  5004               	movf	(fputc@fp+1)^0,w,c
 10054  00C956  22E2               	addwfc	fsr1h,f,c
 10055  00C958  50DE               	movf	postinc2,w,c
 10056  00C95A  5CE6               	subwf	postinc1,w,c
 10057  00C95C  50E6               	movf	postinc1,w,c
 10058  00C95E  0A80               	xorlw	128
 10059  00C960  6E09               	movwf	(??_fputc+4)^0,c
 10060  00C962  50DE               	movf	postinc2,w,c
 10061  00C964  0A80               	xorlw	128
 10062  00C966  5809               	subwfb	(??_fputc+4)^0,w,c
 10063  00C968  B0D8               	btfsc	status,0,c
 10064  00C96A  EFB9  F064         	goto	u3291
 10065  00C96E  EFBB  F064         	goto	u3290
 10066  00C972                     u3291:
 10067  00C972  EFDE  F064         	goto	l1184
 10068  00C976                     u3290:
 10069  00C976                     l3092:
 10070  00C976  EE20 F002          	lfsr	2,2
 10071  00C97A  5003               	movf	fputc@fp^0,w,c
 10072  00C97C  26D9               	addwf	fsr2l,f,c
 10073  00C97E  5004               	movf	(fputc@fp+1)^0,w,c
 10074  00C980  22DA               	addwfc	fsr2h,f,c
 10075  00C982  CFDE F005          	movff	postinc2,??_fputc
 10076  00C986  CFDD F006          	movff	postdec2,??_fputc+1
 10077  00C98A  C003  FFD9         	movff	fputc@fp,fsr2l
 10078  00C98E  C004  FFDA         	movff	fputc@fp+1,fsr2h
 10079  00C992  CFDE F007          	movff	postinc2,??_fputc+2
 10080  00C996  CFDD F008          	movff	postdec2,??_fputc+3
 10081  00C99A  5005               	movf	??_fputc^0,w,c
 10082  00C99C  2407               	addwf	(??_fputc+2)^0,w,c
 10083  00C99E  6ED9               	movwf	fsr2l,c
 10084  00C9A0  5006               	movf	(??_fputc+1)^0,w,c
 10085  00C9A2  2008               	addwfc	(??_fputc+3)^0,w,c
 10086  00C9A4  6EDA               	movwf	fsr2h,c
 10087  00C9A6  C001  FFDF         	movff	fputc@c,indf2
 10088  00C9AA  EE20 F002          	lfsr	2,2
 10089  00C9AE  5003               	movf	fputc@fp^0,w,c
 10090  00C9B0  26D9               	addwf	fsr2l,f,c
 10091  00C9B2  5004               	movf	(fputc@fp+1)^0,w,c
 10092  00C9B4  22DA               	addwfc	fsr2h,f,c
 10093  00C9B6  2ADE               	incf	postinc2,f,c
 10094  00C9B8  0E00               	movlw	0
 10095  00C9BA  22DD               	addwfc	postdec2,f,c
 10096  00C9BC                     l1184:
 10097  00C9BC  0012               	return		;funcret
 10098  00C9BE                     __end_of_fputc:
 10099                           	callstack 0
 10100                           
 10101 ;; *************** function _putch *****************
 10102 ;; Defined at:
 10103 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
 10104 ;; Parameters:    Size  Location     Type
 10105 ;;  c               1    wreg     unsigned char 
 10106 ;; Auto vars:     Size  Location     Type
 10107 ;;  c               1    0[COMRAM] unsigned char 
 10108 ;; Return value:  Size  Location     Type
 10109 ;;                  1    wreg      void 
 10110 ;; Registers used:
 10111 ;;		wreg
 10112 ;; Tracked objects:
 10113 ;;		On entry : 0/0
 10114 ;;		On exit  : 0/0
 10115 ;;		Unchanged: 0/0
 10116 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10121 ;;Total ram usage:        0 bytes
 10122 ;; Hardware stack levels used: 1
 10123 ;; This function calls:
 10124 ;;		Nothing
 10125 ;; This function is called by:
 10126 ;;		_fputc
 10127 ;; This function uses a non-reentrant model
 10128 ;;
 10129                           
 10130                           	psect	text34
 10131  00C020                     __ptext34:
 10132                           	callstack 0
 10133  00C020                     _putch:
 10134                           	callstack 23
 10135  00C020  0012               	return		;funcret
 10136  00C022                     __end_of_putch:
 10137                           	callstack 0
 10138                           
 10139 ;; *************** function _atoi *****************
 10140 ;; Defined at:
 10141 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 10142 ;; Parameters:    Size  Location     Type
 10143 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10144 ;;		 -> STR_13(3), STR_12(20), STR_11(43), STR_10(34), 
 10145 ;;		 -> STR_9(8), STR_8(14), STR_7(41), STR_6(42), 
 10146 ;;		 -> STR_5(33), STR_4(41), STR_3(38), STR_2(33), 
 10147 ;; Auto vars:     Size  Location     Type
 10148 ;;  n               2   20[COMRAM] int 
 10149 ;;  neg             2   13[COMRAM] int 
 10150 ;; Return value:  Size  Location     Type
 10151 ;;                  2    7[COMRAM] int 
 10152 ;; Registers used:
 10153 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10154 ;; Tracked objects:
 10155 ;;		On entry : 0/0
 10156 ;;		On exit  : 0/0
 10157 ;;		Unchanged: 0/0
 10158 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10159 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10160 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10161 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10162 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10163 ;;Total ram usage:       15 bytes
 10164 ;; Hardware stack levels used: 1
 10165 ;; Hardware stack levels required when called: 1
 10166 ;; This function calls:
 10167 ;;		___wmul
 10168 ;;		_isdigit
 10169 ;;		_isspace
 10170 ;; This function is called by:
 10171 ;;		_vfpfcnvrt
 10172 ;; This function uses a non-reentrant model
 10173 ;;
 10174                           
 10175                           	psect	text35
 10176  00D1A8                     __ptext35:
 10177                           	callstack 0
 10178  00D1A8                     _atoi:
 10179                           	callstack 26
 10180  00D1A8  0E00               	movlw	0
 10181  00D1AA  6E16               	movwf	(atoi@n+1)^0,c
 10182  00D1AC  0E00               	movlw	0
 10183  00D1AE  6E15               	movwf	atoi@n^0,c
 10184  00D1B0  0E00               	movlw	0
 10185  00D1B2  6E0F               	movwf	(atoi@neg+1)^0,c
 10186  00D1B4  0E00               	movlw	0
 10187  00D1B6  6E0E               	movwf	atoi@neg^0,c
 10188  00D1B8  EFE0  F068         	goto	l4442
 10189  00D1BC                     l4440:
 10190  00D1BC  4A08               	infsnz	atoi@s^0,f,c
 10191  00D1BE  2A09               	incf	(atoi@s+1)^0,f,c
 10192  00D1C0                     l4442:
 10193  00D1C0  0E01               	movlw	1
 10194  00D1C2  6E14               	movwf	_atoi$1149^0,c
 10195  00D1C4  C008  FFF6         	movff	atoi@s,tblptrl
 10196  00D1C8  C009  FFF7         	movff	atoi@s+1,tblptrh
 10197  00D1CC                     	if	0	;tblptru may be non-zero
 10198  00D1CC                     	endif
 10199  00D1CC                     	if	0	;tblptru may be non-zero
 10200  00D1CC                     	endif
 10201  00D1CC  0008               	tblrd		*
 10202  00D1CE  50F5               	movf	tablat,w,c
 10203  00D1D0  0A20               	xorlw	32
 10204  00D1D2  B4D8               	btfsc	status,2,c
 10205  00D1D4  EFEE  F068         	goto	u5851
 10206  00D1D8  EFF0  F068         	goto	u5850
 10207  00D1DC                     u5851:
 10208  00D1DC  EF0D  F069         	goto	l4450
 10209  00D1E0                     u5850:
 10210  00D1E0  0EF7               	movlw	247
 10211  00D1E2  6E0A               	movwf	??_atoi^0,c
 10212  00D1E4  0EFF               	movlw	255
 10213  00D1E6  6E0B               	movwf	(??_atoi+1)^0,c
 10214  00D1E8  C008  FFF6         	movff	atoi@s,tblptrl
 10215  00D1EC  C009  FFF7         	movff	atoi@s+1,tblptrh
 10216  00D1F0                     	if	0	;tblptru may be non-zero
 10217  00D1F0                     	endif
 10218  00D1F0                     	if	0	;tblptru may be non-zero
 10219  00D1F0                     	endif
 10220  00D1F0  0008               	tblrd		*
 10221  00D1F2  50F5               	movf	tablat,w,c
 10222  00D1F4  6E0C               	movwf	(??_atoi+2)^0,c
 10223  00D1F6  6A0D               	clrf	(??_atoi+3)^0,c
 10224  00D1F8  500A               	movf	??_atoi^0,w,c
 10225  00D1FA  260C               	addwf	(??_atoi+2)^0,f,c
 10226  00D1FC  500B               	movf	(??_atoi+1)^0,w,c
 10227  00D1FE  220D               	addwfc	(??_atoi+3)^0,f,c
 10228  00D200  500D               	movf	(??_atoi+3)^0,w,c
 10229  00D202  E109               	bnz	u5860
 10230  00D204  0E05               	movlw	5
 10231  00D206  5C0C               	subwf	(??_atoi+2)^0,w,c
 10232  00D208  A0D8               	btfss	status,0,c
 10233  00D20A  EF09  F069         	goto	u5861
 10234  00D20E  EF0B  F069         	goto	u5860
 10235  00D212                     u5861:
 10236  00D212  EF0D  F069         	goto	l4450
 10237  00D216                     u5860:
 10238  00D216  0E00               	movlw	0
 10239  00D218  6E14               	movwf	_atoi$1149^0,c
 10240  00D21A                     l4450:
 10241  00D21A  C014  F010         	movff	_atoi$1149,_atoi$1148
 10242  00D21E  6A11               	clrf	(_atoi$1148+1)^0,c
 10243  00D220  5010               	movf	_atoi$1148^0,w,c
 10244  00D222  1011               	iorwf	(_atoi$1148+1)^0,w,c
 10245  00D224  A4D8               	btfss	status,2,c
 10246  00D226  EF17  F069         	goto	u5871
 10247  00D22A  EF19  F069         	goto	u5870
 10248  00D22E                     u5871:
 10249  00D22E  EFDE  F068         	goto	l4440
 10250  00D232                     u5870:
 10251  00D232  EF23  F069         	goto	l4460
 10252  00D236                     l4456:
 10253  00D236  0E00               	movlw	0
 10254  00D238  6E0F               	movwf	(atoi@neg+1)^0,c
 10255  00D23A  0E01               	movlw	1
 10256  00D23C  6E0E               	movwf	atoi@neg^0,c
 10257  00D23E                     l4458:
 10258  00D23E  4A08               	infsnz	atoi@s^0,f,c
 10259  00D240  2A09               	incf	(atoi@s+1)^0,f,c
 10260  00D242  EF58  F069         	goto	l4466
 10261  00D246                     l4460:
 10262  00D246  C008  FFF6         	movff	atoi@s,tblptrl
 10263  00D24A  C009  FFF7         	movff	atoi@s+1,tblptrh
 10264  00D24E                     	if	0	;tblptru may be non-zero
 10265  00D24E                     	endif
 10266  00D24E                     	if	0	;tblptru may be non-zero
 10267  00D24E                     	endif
 10268  00D24E  0008               	tblrd		*
 10269  00D250  50F5               	movf	tablat,w,c
 10270  00D252  6E0A               	movwf	??_atoi^0,c
 10271  00D254  6A0B               	clrf	(??_atoi+1)^0,c
 10272                           
 10273                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10274                           ; Switch size 1, requested type "simple"
 10275                           ; Number of cases is 1, Range of values is 0 to 0
 10276                           ; switch strategies available:
 10277                           ; Name         Instructions Cycles
 10278                           ; simple_byte            4     3 (average)
 10279                           ;	Chosen strategy is simple_byte
 10280  00D256  500B               	movf	(??_atoi+1)^0,w,c
 10281  00D258  0A00               	xorlw	0	; case 0
 10282  00D25A  B4D8               	btfsc	status,2,c
 10283  00D25C  EF32  F069         	goto	l4916
 10284  00D260  EF58  F069         	goto	l4466
 10285  00D264                     l4916:
 10286                           
 10287                           ; Switch size 1, requested type "simple"
 10288                           ; Number of cases is 2, Range of values is 43 to 45
 10289                           ; switch strategies available:
 10290                           ; Name         Instructions Cycles
 10291                           ; simple_byte            7     4 (average)
 10292                           ;	Chosen strategy is simple_byte
 10293  00D264  500A               	movf	??_atoi^0,w,c
 10294  00D266  0A2B               	xorlw	43	; case 43
 10295  00D268  B4D8               	btfsc	status,2,c
 10296  00D26A  EF1F  F069         	goto	l4458
 10297  00D26E  0A06               	xorlw	6	; case 45
 10298  00D270  B4D8               	btfsc	status,2,c
 10299  00D272  EF1B  F069         	goto	l4456
 10300  00D276  EF58  F069         	goto	l4466
 10301  00D27A                     l4462:
 10302  00D27A  C015  F001         	movff	atoi@n,___wmul@multiplier
 10303  00D27E  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10304  00D282  0E00               	movlw	0
 10305  00D284  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10306  00D286  0E0A               	movlw	10
 10307  00D288  6E03               	movwf	___wmul@multiplicand^0,c
 10308  00D28A  EC51  F060         	call	___wmul	;wreg free
 10309  00D28E  C008  FFF6         	movff	atoi@s,tblptrl
 10310  00D292  C009  FFF7         	movff	atoi@s+1,tblptrh
 10311  00D296                     	if	0	;tblptru may be non-zero
 10312  00D296                     	endif
 10313  00D296                     	if	0	;tblptru may be non-zero
 10314  00D296                     	endif
 10315  00D296  0008               	tblrd		*
 10316  00D298  50F5               	movf	tablat,w,c
 10317  00D29A  5E01               	subwf	?___wmul^0,f,c
 10318  00D29C  0E00               	movlw	0
 10319  00D29E  5A02               	subwfb	(?___wmul+1)^0,f,c
 10320  00D2A0  0E30               	movlw	48
 10321  00D2A2  2401               	addwf	?___wmul^0,w,c
 10322  00D2A4  6E15               	movwf	atoi@n^0,c
 10323  00D2A6  0E00               	movlw	0
 10324  00D2A8  2002               	addwfc	(?___wmul+1)^0,w,c
 10325  00D2AA  6E16               	movwf	(atoi@n+1)^0,c
 10326  00D2AC  EF1F  F069         	goto	l4458
 10327  00D2B0                     l4466:
 10328  00D2B0  0ED0               	movlw	208
 10329  00D2B2  6E0A               	movwf	??_atoi^0,c
 10330  00D2B4  0EFF               	movlw	255
 10331  00D2B6  6E0B               	movwf	(??_atoi+1)^0,c
 10332  00D2B8  C008  FFF6         	movff	atoi@s,tblptrl
 10333  00D2BC  C009  FFF7         	movff	atoi@s+1,tblptrh
 10334  00D2C0                     	if	0	;tblptru may be non-zero
 10335  00D2C0                     	endif
 10336  00D2C0                     	if	0	;tblptru may be non-zero
 10337  00D2C0                     	endif
 10338  00D2C0  0008               	tblrd		*
 10339  00D2C2  50F5               	movf	tablat,w,c
 10340  00D2C4  6E0C               	movwf	(??_atoi+2)^0,c
 10341  00D2C6  6A0D               	clrf	(??_atoi+3)^0,c
 10342  00D2C8  500A               	movf	??_atoi^0,w,c
 10343  00D2CA  260C               	addwf	(??_atoi+2)^0,f,c
 10344  00D2CC  500B               	movf	(??_atoi+1)^0,w,c
 10345  00D2CE  220D               	addwfc	(??_atoi+3)^0,f,c
 10346  00D2D0  500D               	movf	(??_atoi+3)^0,w,c
 10347  00D2D2  E10A               	bnz	u5880
 10348  00D2D4  0E0A               	movlw	10
 10349  00D2D6  5C0C               	subwf	(??_atoi+2)^0,w,c
 10350  00D2D8  A0D8               	btfss	status,0,c
 10351  00D2DA  EF71  F069         	goto	u5881
 10352  00D2DE  EF74  F069         	goto	u5880
 10353  00D2E2                     u5881:
 10354  00D2E2  0E01               	movlw	1
 10355  00D2E4  EF75  F069         	goto	u5890
 10356  00D2E8                     u5880:
 10357  00D2E8  0E00               	movlw	0
 10358  00D2EA                     u5890:
 10359  00D2EA  6E12               	movwf	_atoi$1150^0,c
 10360  00D2EC  6A13               	clrf	(_atoi$1150+1)^0,c
 10361  00D2EE  5012               	movf	_atoi$1150^0,w,c
 10362  00D2F0  1013               	iorwf	(_atoi$1150+1)^0,w,c
 10363  00D2F2  A4D8               	btfss	status,2,c
 10364  00D2F4  EF7E  F069         	goto	u5901
 10365  00D2F8  EF80  F069         	goto	u5900
 10366  00D2FC                     u5901:
 10367  00D2FC  EF3D  F069         	goto	l4462
 10368  00D300                     u5900:
 10369  00D300  500E               	movf	atoi@neg^0,w,c
 10370  00D302  100F               	iorwf	(atoi@neg+1)^0,w,c
 10371  00D304  A4D8               	btfss	status,2,c
 10372  00D306  EF87  F069         	goto	u5911
 10373  00D30A  EF89  F069         	goto	u5910
 10374  00D30E                     u5911:
 10375  00D30E  EF97  F069         	goto	l1130
 10376  00D312                     u5910:
 10377  00D312  C015  F00A         	movff	atoi@n,??_atoi
 10378  00D316  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10379  00D31A  1E0A               	comf	??_atoi^0,f,c
 10380  00D31C  1E0B               	comf	(??_atoi+1)^0,f,c
 10381  00D31E  4A0A               	infsnz	??_atoi^0,f,c
 10382  00D320  2A0B               	incf	(??_atoi+1)^0,f,c
 10383  00D322  C00A  F008         	movff	??_atoi,?_atoi
 10384  00D326  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10385  00D32A  EF9B  F069         	goto	l1133
 10386  00D32E                     l1130:
 10387  00D32E  C015  F008         	movff	atoi@n,?_atoi
 10388  00D332  C016  F009         	movff	atoi@n+1,?_atoi+1
 10389  00D336                     l1133:
 10390  00D336  0012               	return		;funcret
 10391  00D338                     __end_of_atoi:
 10392                           	callstack 0
 10393                           
 10394 ;; *************** function _isspace *****************
 10395 ;; Defined at:
 10396 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 10397 ;; Parameters:    Size  Location     Type
 10398 ;;  c               2    0[COMRAM] int 
 10399 ;; Auto vars:     Size  Location     Type
 10400 ;;		None
 10401 ;; Return value:  Size  Location     Type
 10402 ;;                  2    0[COMRAM] int 
 10403 ;; Registers used:
 10404 ;;		wreg, status,2, status,0
 10405 ;; Tracked objects:
 10406 ;;		On entry : 0/0
 10407 ;;		On exit  : 0/0
 10408 ;;		Unchanged: 0/0
 10409 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10410 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10411 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10412 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10413 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10414 ;;Total ram usage:        7 bytes
 10415 ;; Hardware stack levels used: 1
 10416 ;; This function calls:
 10417 ;;		Nothing
 10418 ;; This function is called by:
 10419 ;;		_atoi
 10420 ;; This function uses a non-reentrant model
 10421 ;;
 10422                           
 10423                           	psect	text36
 10424  00C390                     __ptext36:
 10425                           	callstack 0
 10426  00C390                     _isspace:
 10427                           	callstack 26
 10428  00C390  0E01               	movlw	1
 10429  00C392  6E07               	movwf	_isspace$1188^0,c
 10430  00C394  0E20               	movlw	32
 10431  00C396  1801               	xorwf	isspace@c^0,w,c
 10432  00C398  1002               	iorwf	(isspace@c+1)^0,w,c
 10433  00C39A  B4D8               	btfsc	status,2,c
 10434  00C39C  EFD2  F061         	goto	u4921
 10435  00C3A0  EFD4  F061         	goto	u4920
 10436  00C3A4                     u4921:
 10437  00C3A4  EFED  F061         	goto	l3970
 10438  00C3A8                     u4920:
 10439  00C3A8  0EF7               	movlw	247
 10440  00C3AA  6E03               	movwf	??_isspace^0,c
 10441  00C3AC  0EFF               	movlw	255
 10442  00C3AE  6E04               	movwf	(??_isspace+1)^0,c
 10443  00C3B0  C001  F005         	movff	isspace@c,??_isspace+2
 10444  00C3B4  C002  F006         	movff	isspace@c+1,??_isspace+3
 10445  00C3B8  5003               	movf	??_isspace^0,w,c
 10446  00C3BA  2605               	addwf	(??_isspace+2)^0,f,c
 10447  00C3BC  5004               	movf	(??_isspace+1)^0,w,c
 10448  00C3BE  2206               	addwfc	(??_isspace+3)^0,f,c
 10449  00C3C0  5006               	movf	(??_isspace+3)^0,w,c
 10450  00C3C2  E109               	bnz	u4930
 10451  00C3C4  0E05               	movlw	5
 10452  00C3C6  5C05               	subwf	(??_isspace+2)^0,w,c
 10453  00C3C8  A0D8               	btfss	status,0,c
 10454  00C3CA  EFE9  F061         	goto	u4931
 10455  00C3CE  EFEB  F061         	goto	u4930
 10456  00C3D2                     u4931:
 10457  00C3D2  EFED  F061         	goto	l3970
 10458  00C3D6                     u4930:
 10459  00C3D6  0E00               	movlw	0
 10460  00C3D8  6E07               	movwf	_isspace$1188^0,c
 10461  00C3DA                     l3970:
 10462  00C3DA  C007  F001         	movff	_isspace$1188,?_isspace
 10463  00C3DE  6A02               	clrf	(?_isspace+1)^0,c
 10464  00C3E0  0012               	return		;funcret
 10465  00C3E2                     __end_of_isspace:
 10466                           	callstack 0
 10467                           
 10468 ;; *************** function _isdigit *****************
 10469 ;; Defined at:
 10470 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 10471 ;; Parameters:    Size  Location     Type
 10472 ;;  c               2    0[COMRAM] int 
 10473 ;; Auto vars:     Size  Location     Type
 10474 ;;		None
 10475 ;; Return value:  Size  Location     Type
 10476 ;;                  2    0[COMRAM] int 
 10477 ;; Registers used:
 10478 ;;		wreg, status,2, status,0
 10479 ;; Tracked objects:
 10480 ;;		On entry : 0/0
 10481 ;;		On exit  : 0/0
 10482 ;;		Unchanged: 0/0
 10483 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10484 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10486 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10487 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10488 ;;Total ram usage:        6 bytes
 10489 ;; Hardware stack levels used: 1
 10490 ;; This function calls:
 10491 ;;		Nothing
 10492 ;; This function is called by:
 10493 ;;		_vfpfcnvrt
 10494 ;;		_atoi
 10495 ;; This function uses a non-reentrant model
 10496 ;;
 10497                           
 10498                           	psect	text37
 10499  00C168                     __ptext37:
 10500                           	callstack 0
 10501  00C168                     _isdigit:
 10502                           	callstack 27
 10503  00C168  0ED0               	movlw	208
 10504  00C16A  6E03               	movwf	??_isdigit^0,c
 10505  00C16C  0EFF               	movlw	255
 10506  00C16E  6E04               	movwf	(??_isdigit+1)^0,c
 10507  00C170  C001  F005         	movff	isdigit@c,??_isdigit+2
 10508  00C174  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 10509  00C178  5003               	movf	??_isdigit^0,w,c
 10510  00C17A  2605               	addwf	(??_isdigit+2)^0,f,c
 10511  00C17C  5004               	movf	(??_isdigit+1)^0,w,c
 10512  00C17E  2206               	addwfc	(??_isdigit+3)^0,f,c
 10513  00C180  5006               	movf	(??_isdigit+3)^0,w,c
 10514  00C182  E10A               	bnz	u4900
 10515  00C184  0E0A               	movlw	10
 10516  00C186  5C05               	subwf	(??_isdigit+2)^0,w,c
 10517  00C188  A0D8               	btfss	status,0,c
 10518  00C18A  EFC9  F060         	goto	u4901
 10519  00C18E  EFCC  F060         	goto	u4900
 10520  00C192                     u4901:
 10521  00C192  0E01               	movlw	1
 10522  00C194  EFCD  F060         	goto	u4910
 10523  00C198                     u4900:
 10524  00C198  0E00               	movlw	0
 10525  00C19A                     u4910:
 10526  00C19A  6E01               	movwf	?_isdigit^0,c
 10527  00C19C  6A02               	clrf	(?_isdigit+1)^0,c
 10528  00C19E  0012               	return		;funcret
 10529  00C1A0                     __end_of_isdigit:
 10530                           	callstack 0
 10531                           
 10532 ;; *************** function ___wmul *****************
 10533 ;; Defined at:
 10534 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 10535 ;; Parameters:    Size  Location     Type
 10536 ;;  multiplier      2    0[COMRAM] unsigned int 
 10537 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10538 ;; Auto vars:     Size  Location     Type
 10539 ;;  product         2    4[COMRAM] unsigned int 
 10540 ;; Return value:  Size  Location     Type
 10541 ;;                  2    0[COMRAM] unsigned int 
 10542 ;; Registers used:
 10543 ;;		wreg, status,2, status,0, prodl, prodh
 10544 ;; Tracked objects:
 10545 ;;		On entry : 0/0
 10546 ;;		On exit  : 0/0
 10547 ;;		Unchanged: 0/0
 10548 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10549 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10550 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10552 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10553 ;;Total ram usage:        6 bytes
 10554 ;; Hardware stack levels used: 1
 10555 ;; This function calls:
 10556 ;;		Nothing
 10557 ;; This function is called by:
 10558 ;;		_atoi
 10559 ;; This function uses a non-reentrant model
 10560 ;;
 10561                           
 10562                           	psect	text38
 10563  00C0A2                     __ptext38:
 10564                           	callstack 0
 10565  00C0A2                     ___wmul:
 10566                           	callstack 26
 10567  00C0A2  5001               	movf	___wmul@multiplier^0,w,c
 10568  00C0A4  0203               	mulwf	___wmul@multiplicand^0,c
 10569  00C0A6  CFF3 F005          	movff	prodl,___wmul@product
 10570  00C0AA  CFF4 F006          	movff	prodh,___wmul@product+1
 10571  00C0AE  5001               	movf	___wmul@multiplier^0,w,c
 10572  00C0B0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10573  00C0B2  50F3               	movf	243,w,c
 10574  00C0B4  2606               	addwf	(___wmul@product+1)^0,f,c
 10575  00C0B6  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10576  00C0B8  0203               	mulwf	___wmul@multiplicand^0,c
 10577  00C0BA  50F3               	movf	243,w,c
 10578  00C0BC  2606               	addwf	(___wmul@product+1)^0,f,c
 10579  00C0BE  C005  F001         	movff	___wmul@product,?___wmul
 10580  00C0C2  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10581  00C0C6  0012               	return		;funcret
 10582  00C0C8                     __end_of___wmul:
 10583                           	callstack 0
 10584                           
 10585 ;; *************** function _setupSerial *****************
 10586 ;; Defined at:
 10587 ;;		line 3 in file "my_ser.c"
 10588 ;; Parameters:    Size  Location     Type
 10589 ;;		None
 10590 ;; Auto vars:     Size  Location     Type
 10591 ;;  dummy           1    0        unsigned char 
 10592 ;; Return value:  Size  Location     Type
 10593 ;;                  1    wreg      void 
 10594 ;; Registers used:
 10595 ;;		wreg, status,2
 10596 ;; Tracked objects:
 10597 ;;		On entry : 0/0
 10598 ;;		On exit  : 0/0
 10599 ;;		Unchanged: 0/0
 10600 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10605 ;;Total ram usage:        0 bytes
 10606 ;; Hardware stack levels used: 1
 10607 ;; This function calls:
 10608 ;;		Nothing
 10609 ;; This function is called by:
 10610 ;;		_main
 10611 ;; This function uses a non-reentrant model
 10612 ;;
 10613                           
 10614                           	psect	text39
 10615  00C082                     __ptext39:
 10616                           	callstack 0
 10617  00C082                     _setupSerial:
 10618                           	callstack 30
 10619  00C082                     
 10620                           ;my_ser.c: 4:     unsigned char dummy;;my_ser.c: 5:     BAUDCONbits.BRG16 = 0;
 10621  00C082  96B8               	bcf	184,3,c	;volatile
 10622  00C084                     
 10623                           ;my_ser.c: 6:     SPBRG = 25;
 10624  00C084  0E19               	movlw	25
 10625  00C086  6EAF               	movwf	175,c	;volatile
 10626                           
 10627                           ;my_ser.c: 7:     SPBRGH = 0;
 10628  00C088  0E00               	movlw	0
 10629  00C08A  6EB0               	movwf	176,c	;volatile
 10630                           
 10631                           ;my_ser.c: 8:     TXSTA = 0;
 10632  00C08C  0E00               	movlw	0
 10633  00C08E  6EAC               	movwf	172,c	;volatile
 10634  00C090                     
 10635                           ;my_ser.c: 9:     TXSTAbits.BRGH = 1;
 10636  00C090  84AC               	bsf	172,2,c	;volatile
 10637  00C092                     
 10638                           ;my_ser.c: 10:     TXSTAbits.TXEN = 1;
 10639  00C092  8AAC               	bsf	172,5,c	;volatile
 10640                           
 10641                           ;my_ser.c: 12:     RCSTA = 0;
 10642  00C094  0E00               	movlw	0
 10643  00C096  6EAB               	movwf	171,c	;volatile
 10644  00C098                     
 10645                           ;my_ser.c: 13:     RCSTAbits.CREN = 1;
 10646  00C098  88AB               	bsf	171,4,c	;volatile
 10647  00C09A                     
 10648                           ;my_ser.c: 14:     RCSTAbits.SPEN = 1;
 10649  00C09A  8EAB               	bsf	171,7,c	;volatile
 10650  00C09C  50AE               	movf	174,w,c	;volatile
 10651  00C09E  50AE               	movf	174,w,c	;volatile
 10652  00C0A0  0012               	return		;funcret
 10653  00C0A2                     __end_of_setupSerial:
 10654                           	callstack 0
 10655                           
 10656 ;; *************** function _setupPorts *****************
 10657 ;; Defined at:
 10658 ;;		line 142 in file "main.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;		None
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;		None
 10663 ;; Return value:  Size  Location     Type
 10664 ;;                  1    wreg      void 
 10665 ;; Registers used:
 10666 ;;		wreg, status,2
 10667 ;; Tracked objects:
 10668 ;;		On entry : 0/0
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10676 ;;Total ram usage:        0 bytes
 10677 ;; Hardware stack levels used: 1
 10678 ;; This function calls:
 10679 ;;		Nothing
 10680 ;; This function is called by:
 10681 ;;		_main
 10682 ;; This function uses a non-reentrant model
 10683 ;;
 10684                           
 10685                           	psect	text40
 10686  00C030                     __ptext40:
 10687                           	callstack 0
 10688  00C030                     _setupPorts:
 10689                           	callstack 30
 10690  00C030                     
 10691                           ;main.c: 143:     ADCON0 = 0;
 10692  00C030  0E00               	movlw	0
 10693  00C032  6EC2               	movwf	194,c	;volatile
 10694                           
 10695                           ;main.c: 144:     ADCON1 = 0b00001100;
 10696  00C034  0E0C               	movlw	12
 10697  00C036  6EC1               	movwf	193,c	;volatile
 10698  00C038                     
 10699                           ;main.c: 146:     TRISB = 0xFF;
 10700  00C038  6893               	setf	147,c	;volatile
 10701                           
 10702                           ;main.c: 147:     TRISC = 0x80;
 10703  00C03A  0E80               	movlw	128
 10704  00C03C  6E94               	movwf	148,c	;volatile
 10705  00C03E                     
 10706                           ;main.c: 148:     TRISA = 0xFF;
 10707  00C03E  6892               	setf	146,c	;volatile
 10708                           
 10709                           ;main.c: 149:     TRISD = 0x00;
 10710  00C040  0E00               	movlw	0
 10711  00C042  6E95               	movwf	149,c	;volatile
 10712                           
 10713                           ;main.c: 150:     TRISE = 0x00;
 10714  00C044  0E00               	movlw	0
 10715  00C046  6E96               	movwf	150,c	;volatile
 10716  00C048  0012               	return		;funcret
 10717  00C04A                     __end_of_setupPorts:
 10718                           	callstack 0
 10719                           
 10720 ;; *************** function _read_byte_no_lib *****************
 10721 ;; Defined at:
 10722 ;;		line 33 in file "my_ser.c"
 10723 ;; Parameters:    Size  Location     Type
 10724 ;;		None
 10725 ;; Auto vars:     Size  Location     Type
 10726 ;;  c               1    0[COMRAM] unsigned char 
 10727 ;; Return value:  Size  Location     Type
 10728 ;;                  1    wreg      unsigned char 
 10729 ;; Registers used:
 10730 ;;		wreg, status,2
 10731 ;; Tracked objects:
 10732 ;;		On entry : 0/0
 10733 ;;		On exit  : 0/0
 10734 ;;		Unchanged: 0/0
 10735 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10740 ;;Total ram usage:        1 bytes
 10741 ;; Hardware stack levels used: 1
 10742 ;; This function calls:
 10743 ;;		Nothing
 10744 ;; This function is called by:
 10745 ;;		_main
 10746 ;; This function uses a non-reentrant model
 10747 ;;
 10748                           
 10749                           	psect	text41
 10750  00C066                     __ptext41:
 10751                           	callstack 0
 10752  00C066                     _read_byte_no_lib:
 10753                           	callstack 30
 10754  00C066                     
 10755                           ;my_ser.c: 34:     unsigned char c;;my_ser.c: 35:     while(!PIR1bits.RCIF) {
 10756  00C066  EF36  F060         	goto	l115
 10757  00C06A                     l116:
 10758  00C06A  0004               	clrwdt		;# 
 10759  00C06C                     l115:
 10760                           
 10761                           ;my_ser.c: 35:     while(!PIR1bits.RCIF) {
 10762  00C06C  AA9E               	btfss	158,5,c	;volatile
 10763  00C06E  EF3B  F060         	goto	u6331
 10764  00C072  EF3D  F060         	goto	u6330
 10765  00C076                     u6331:
 10766  00C076  EF35  F060         	goto	l116
 10767  00C07A                     u6330:
 10768  00C07A                     
 10769                           ;my_ser.c: 38:     c = RCREG;
 10770  00C07A  CFAE F001          	movff	4014,read_byte_no_lib@c	;volatile
 10771  00C07E                     
 10772                           ;my_ser.c: 39:     return c;
 10773  00C07E  5001               	movf	read_byte_no_lib@c^0,w,c
 10774  00C080  0012               	return		;funcret
 10775  00C082                     __end_of_read_byte_no_lib:
 10776                           	callstack 0
 10777                           
 10778 ;; *************** function _print_line *****************
 10779 ;; Defined at:
 10780 ;;		line 153 in file "main.c"
 10781 ;; Parameters:    Size  Location     Type
 10782 ;;		None
 10783 ;; Auto vars:     Size  Location     Type
 10784 ;;		None
 10785 ;; Return value:  Size  Location     Type
 10786 ;;                  1    wreg      void 
 10787 ;; Registers used:
 10788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10798 ;;Total ram usage:        0 bytes
 10799 ;; Hardware stack levels used: 1
 10800 ;; Hardware stack levels required when called: 2
 10801 ;; This function calls:
 10802 ;;		_send_string_no_lib
 10803 ;; This function is called by:
 10804 ;;		_main
 10805 ;;		_print_structure
 10806 ;;		_print_union
 10807 ;;		_print_byte
 10808 ;; This function uses a non-reentrant model
 10809 ;;
 10810                           
 10811                           	psect	text42
 10812  00C022                     __ptext42:
 10813                           	callstack 0
 10814  00C022                     _print_line:
 10815                           	callstack 28
 10816  00C022                     
 10817                           ;main.c: 155:     send_string_no_lib("--------------------------------------------------
      +                          -------\r\n");
 10818  00C022  0E71               	movlw	low STR_1
 10819  00C024  6E02               	movwf	send_string_no_lib@p^0,c
 10820  00C026  0EFE               	movlw	high STR_1
 10821  00C028  6E03               	movwf	(send_string_no_lib@p+1)^0,c
 10822  00C02A  ECA8  F062         	call	_send_string_no_lib	;wreg free
 10823  00C02E  0012               	return		;funcret
 10824  00C030                     __end_of_print_line:
 10825                           	callstack 0
 10826                           
 10827 ;; *************** function _send_string_no_lib *****************
 10828 ;; Defined at:
 10829 ;;		line 50 in file "my_ser.c"
 10830 ;; Parameters:    Size  Location     Type
 10831 ;;  p               2    1[COMRAM] PTR unsigned char 
 10832 ;;		 -> gotten(1), buffer(200), STR_1(60), 
 10833 ;; Auto vars:     Size  Location     Type
 10834 ;;		None
 10835 ;; Return value:  Size  Location     Type
 10836 ;;                  1    wreg      void 
 10837 ;; Registers used:
 10838 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10839 ;; Tracked objects:
 10840 ;;		On entry : 0/0
 10841 ;;		On exit  : 0/0
 10842 ;;		Unchanged: 0/0
 10843 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10847 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10848 ;;Total ram usage:        2 bytes
 10849 ;; Hardware stack levels used: 1
 10850 ;; Hardware stack levels required when called: 1
 10851 ;; This function calls:
 10852 ;;		_send_byte_no_lib
 10853 ;; This function is called by:
 10854 ;;		_print_line
 10855 ;;		_main
 10856 ;;		_print_structure
 10857 ;;		_print_union
 10858 ;;		_print_byte
 10859 ;; This function uses a non-reentrant model
 10860 ;;
 10861                           
 10862                           	psect	text43
 10863  00C550                     __ptext43:
 10864                           	callstack 0
 10865  00C550                     _send_string_no_lib:
 10866                           	callstack 29
 10867  00C550                     
 10868                           ;my_ser.c: 51:     while (*p) {
 10869  00C550  EFBF  F062         	goto	l4690
 10870  00C554                     l4686:
 10871                           
 10872                           ;my_ser.c: 52:         send_byte_no_lib(*p);
 10873  00C554  C002  FFF6         	movff	send_string_no_lib@p,tblptrl
 10874  00C558  C003  FFF7         	movff	send_string_no_lib@p+1,tblptrh
 10875  00C55C  0E00               	movlw	low (__mediumconst shr (0+16))
 10876  00C55E  6EF8               	movwf	tblptru,c
 10877  00C560  0E0F               	movlw	(high __ramtop+-1)
 10878  00C562  64F7               	cpfsgt	tblptrh,c
 10879  00C564  D003               	bra	u6257
 10880  00C566  0008               	tblrd		*
 10881  00C568  50F5               	movf	tablat,w,c
 10882  00C56A  D005               	bra	u6250
 10883  00C56C                     u6257:
 10884  00C56C  CFF6 FFE1          	movff	tblptrl,fsr1l
 10885  00C570  CFF7 FFE2          	movff	tblptrh,fsr1h
 10886  00C574  50E7               	movf	indf1,w,c
 10887  00C576                     u6250:
 10888  00C576  EC25  F060         	call	_send_byte_no_lib
 10889  00C57A                     
 10890                           ;my_ser.c: 53:         p++;
 10891  00C57A  4A02               	infsnz	send_string_no_lib@p^0,f,c
 10892  00C57C  2A03               	incf	(send_string_no_lib@p+1)^0,f,c
 10893  00C57E                     l4690:
 10894                           
 10895                           ;my_ser.c: 51:     while (*p) {
 10896  00C57E  C002  FFF6         	movff	send_string_no_lib@p,tblptrl
 10897  00C582  C003  FFF7         	movff	send_string_no_lib@p+1,tblptrh
 10898  00C586  0E00               	movlw	low (__mediumconst shr (0+16))
 10899  00C588  6EF8               	movwf	tblptru,c
 10900  00C58A  0E0F               	movlw	(high __ramtop+-1)
 10901  00C58C  64F7               	cpfsgt	tblptrh,c
 10902  00C58E  D003               	bra	u6267
 10903  00C590  0008               	tblrd		*
 10904  00C592  50F5               	movf	tablat,w,c
 10905  00C594  D005               	bra	u6260
 10906  00C596                     u6267:
 10907  00C596  CFF6 FFE1          	movff	tblptrl,fsr1l
 10908  00C59A  CFF7 FFE2          	movff	tblptrh,fsr1h
 10909  00C59E  50E7               	movf	indf1,w,c
 10910  00C5A0                     u6260:
 10911  00C5A0  0900               	iorlw	0
 10912  00C5A2  A4D8               	btfss	status,2,c
 10913  00C5A4  EFD6  F062         	goto	u6271
 10914  00C5A8  EFD8  F062         	goto	u6270
 10915  00C5AC                     u6271:
 10916  00C5AC  EFAA  F062         	goto	l4686
 10917  00C5B0                     u6270:
 10918  00C5B0  0012               	return		;funcret
 10919  00C5B2                     __end_of_send_string_no_lib:
 10920                           	callstack 0
 10921                           
 10922 ;; *************** function _send_byte_no_lib *****************
 10923 ;; Defined at:
 10924 ;;		line 42 in file "my_ser.c"
 10925 ;; Parameters:    Size  Location     Type
 10926 ;;  c               1    wreg     unsigned char 
 10927 ;; Auto vars:     Size  Location     Type
 10928 ;;  c               1    0[COMRAM] unsigned char 
 10929 ;; Return value:  Size  Location     Type
 10930 ;;                  1    wreg      void 
 10931 ;; Registers used:
 10932 ;;		wreg
 10933 ;; Tracked objects:
 10934 ;;		On entry : 0/0
 10935 ;;		On exit  : 0/0
 10936 ;;		Unchanged: 0/0
 10937 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10939 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10941 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10942 ;;Total ram usage:        1 bytes
 10943 ;; Hardware stack levels used: 1
 10944 ;; This function calls:
 10945 ;;		Nothing
 10946 ;; This function is called by:
 10947 ;;		_send_string_no_lib
 10948 ;; This function uses a non-reentrant model
 10949 ;;
 10950                           
 10951                           	psect	text44
 10952  00C04A                     __ptext44:
 10953                           	callstack 0
 10954  00C04A                     _send_byte_no_lib:
 10955                           	callstack 29
 10956                           
 10957                           ;incstack = 0
 10958                           ;send_byte_no_lib@c stored from wreg
 10959  00C04A  6E01               	movwf	send_byte_no_lib@c^0,c
 10960  00C04C                     
 10961                           ;my_ser.c: 43:     while (!TXSTAbits.TRMT)
 10962  00C04C  EF29  F060         	goto	l121
 10963  00C050                     l122:
 10964  00C050  0004               	clrwdt		;# 
 10965  00C052                     l121:
 10966                           
 10967                           ;my_ser.c: 43:     while (!TXSTAbits.TRMT)
 10968  00C052  A2AC               	btfss	172,1,c	;volatile
 10969  00C054  EF2E  F060         	goto	u5991
 10970  00C058  EF30  F060         	goto	u5990
 10971  00C05C                     u5991:
 10972  00C05C  EF28  F060         	goto	l122
 10973  00C060                     u5990:
 10974  00C060                     
 10975                           ;my_ser.c: 47:     TXREG = c;
 10976  00C060  C001  FFAD         	movff	send_byte_no_lib@c,4013	;volatile
 10977  00C064  0012               	return		;funcret
 10978  00C066                     __end_of_send_byte_no_lib:
 10979                           	callstack 0
 10980                           
 10981 ;; *************** function _is_byte_available *****************
 10982 ;; Defined at:
 10983 ;;		line 22 in file "my_ser.c"
 10984 ;; Parameters:    Size  Location     Type
 10985 ;;		None
 10986 ;; Auto vars:     Size  Location     Type
 10987 ;;		None
 10988 ;; Return value:  Size  Location     Type
 10989 ;;                  1    wreg      unsigned char 
 10990 ;; Registers used:
 10991 ;;		wreg
 10992 ;; Tracked objects:
 10993 ;;		On entry : 0/0
 10994 ;;		On exit  : 0/0
 10995 ;;		Unchanged: 0/0
 10996 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 10997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 10999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 11000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 11001 ;;Total ram usage:        0 bytes
 11002 ;; Hardware stack levels used: 1
 11003 ;; This function calls:
 11004 ;;		Nothing
 11005 ;; This function is called by:
 11006 ;;		_main
 11007 ;; This function uses a non-reentrant model
 11008 ;;
 11009                           
 11010                           	psect	text45
 11011  00C130                     __ptext45:
 11012                           	callstack 0
 11013  00C130                     _is_byte_available:
 11014                           	callstack 30
 11015  00C130                     
 11016                           ;my_ser.c: 24:     if (RCSTAbits.FERR || RCSTAbits.OERR)
 11017  00C130  B4AB               	btfsc	171,2,c	;volatile
 11018  00C132  EF9D  F060         	goto	u6301
 11019  00C136  EF9F  F060         	goto	u6300
 11020  00C13A                     u6301:
 11021  00C13A  EFA6  F060         	goto	l109
 11022  00C13E                     u6300:
 11023  00C13E  A2AB               	btfss	171,1,c	;volatile
 11024  00C140  EFA4  F060         	goto	u6311
 11025  00C144  EFA6  F060         	goto	u6310
 11026  00C148                     u6311:
 11027  00C148  EFA8  F060         	goto	l107
 11028  00C14C                     u6310:
 11029  00C14C                     l109:
 11030                           
 11031                           ;my_ser.c: 25:     {;my_ser.c: 26:         RCSTAbits.CREN = 0;
 11032  00C14C  98AB               	bcf	171,4,c	;volatile
 11033                           
 11034                           ;my_ser.c: 27:         RCSTAbits.CREN = 1;
 11035  00C14E  88AB               	bsf	171,4,c	;volatile
 11036  00C150                     l107:
 11037                           
 11038                           ;my_ser.c: 30:     if (PIR1bits.RCIF) return 1;
 11039  00C150  AA9E               	btfss	158,5,c	;volatile
 11040  00C152  EFAD  F060         	goto	u6321
 11041  00C156  EFAF  F060         	goto	u6320
 11042  00C15A                     u6321:
 11043  00C15A  EFB2  F060         	goto	l4754
 11044  00C15E                     u6320:
 11045  00C15E  0E01               	movlw	1
 11046  00C160  EFB3  F060         	goto	l111
 11047  00C164                     l4754:
 11048  00C164  0E00               	movlw	0
 11049  00C166                     l111:
 11050  00C166  0012               	return		;funcret
 11051  00C168                     __end_of_is_byte_available:
 11052                           	callstack 0
 11053                           
 11054 ;; *************** function _delay_ms *****************
 11055 ;; Defined at:
 11056 ;;		line 134 in file "main.c"
 11057 ;; Parameters:    Size  Location     Type
 11058 ;;  n               2    0[COMRAM] unsigned int 
 11059 ;; Auto vars:     Size  Location     Type
 11060 ;;  i               2    2[COMRAM] int 
 11061 ;; Return value:  Size  Location     Type
 11062 ;;                  1    wreg      void 
 11063 ;; Registers used:
 11064 ;;		wreg, status,2, status,0
 11065 ;; Tracked objects:
 11066 ;;		On entry : 0/0
 11067 ;;		On exit  : 0/0
 11068 ;;		Unchanged: 0/0
 11069 ;; Data sizes:    COMRAMh COMRAMl  BANK0h  BANK0l   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK
      +9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15
 11070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 11071 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 11072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 11073 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0
 11074 ;;Total ram usage:        4 bytes
 11075 ;; Hardware stack levels used: 1
 11076 ;; This function calls:
 11077 ;;		Nothing
 11078 ;; This function is called by:
 11079 ;;		_main
 11080 ;; This function uses a non-reentrant model
 11081 ;;
 11082                           
 11083                           	psect	text46
 11084  00C0C8                     __ptext46:
 11085                           	callstack 0
 11086  00C0C8                     _delay_ms:
 11087                           	callstack 30
 11088  00C0C8                     
 11089                           ;main.c: 134: void delay_ms(unsigned int n);main.c: 135: {;main.c: 136:     int i;;main.
      +                          c: 137:     for (i=0; i < n; i++){
 11090  00C0C8  0E00               	movlw	0
 11091  00C0CA  6E04               	movwf	(delay_ms@i+1)^0,c
 11092  00C0CC  0E00               	movlw	0
 11093  00C0CE  6E03               	movwf	delay_ms@i^0,c
 11094  00C0D0  EF71  F060         	goto	l43
 11095  00C0D4                     l4702:
 11096                           
 11097                           ;main.c: 138:         _delaywdt((unsigned long)((1)*(4000000UL/4000.0)));
 11098  00C0D4  0EC8               	movlw	200
 11099  00C0D6                     u6517:
 11100  00C0D6  0004               	clrwdt	
 11101  00C0D8  0004               	clrwdt	
 11102  00C0DA  2EE8               	decfsz	wreg,f,c
 11103  00C0DC  D7FC               	bra	u6517
 11104  00C0DE                     
 11105                           ;main.c: 139:     }
 11106  00C0DE  4A03               	infsnz	delay_ms@i^0,f,c
 11107  00C0E0  2A04               	incf	(delay_ms@i+1)^0,f,c
 11108  00C0E2                     l43:
 11109  00C0E2  5001               	movf	delay_ms@n^0,w,c
 11110  00C0E4  5C03               	subwf	delay_ms@i^0,w,c
 11111  00C0E6  5002               	movf	(delay_ms@n+1)^0,w,c
 11112  00C0E8  5804               	subwfb	(delay_ms@i+1)^0,w,c
 11113  00C0EA  A0D8               	btfss	status,0,c
 11114  00C0EC  EF7A  F060         	goto	u6291
 11115  00C0F0  EF7C  F060         	goto	u6290
 11116  00C0F4                     u6291:
 11117  00C0F4  EF6A  F060         	goto	l4702
 11118  00C0F8                     u6290:
 11119  00C0F8  0012               	return		;funcret
 11120  00C0FA                     __end_of_delay_ms:
 11121                           	callstack 0
 11122                           
 11123                           	psect	rparam
 11124  0000                     
 11125                           	psect	idloc
 11126                           
 11127                           ;Config register IDLOC0 @ 0x200000
 11128                           ;	unspecified, using default values
 11129  200000                     	org	2097152
 11130  200000  FF                 	db	255
 11131                           
 11132                           ;Config register IDLOC1 @ 0x200001
 11133                           ;	unspecified, using default values
 11134  200001                     	org	2097153
 11135  200001  FF                 	db	255
 11136                           
 11137                           ;Config register IDLOC2 @ 0x200002
 11138                           ;	unspecified, using default values
 11139  200002                     	org	2097154
 11140  200002  FF                 	db	255
 11141                           
 11142                           ;Config register IDLOC3 @ 0x200003
 11143                           ;	unspecified, using default values
 11144  200003                     	org	2097155
 11145  200003  FF                 	db	255
 11146                           
 11147                           ;Config register IDLOC4 @ 0x200004
 11148                           ;	unspecified, using default values
 11149  200004                     	org	2097156
 11150  200004  FF                 	db	255
 11151                           
 11152                           ;Config register IDLOC5 @ 0x200005
 11153                           ;	unspecified, using default values
 11154  200005                     	org	2097157
 11155  200005  FF                 	db	255
 11156                           
 11157                           ;Config register IDLOC6 @ 0x200006
 11158                           ;	unspecified, using default values
 11159  200006                     	org	2097158
 11160  200006  FF                 	db	255
 11161                           
 11162                           ;Config register IDLOC7 @ 0x200007
 11163                           ;	unspecified, using default values
 11164  200007                     	org	2097159
 11165  200007  FF                 	db	255
 11166                           
 11167                           	psect	config
 11168                           
 11169                           ; Padding undefined space
 11170  300000                     	org	3145728
 11171  300000  FF                 	db	255
 11172                           
 11173                           ;Config register CONFIG1H @ 0x300001
 11174                           ;	Oscillator Selection bits
 11175                           ;	OSC = XT, XT oscillator
 11176                           ;	Fail-Safe Clock Monitor Enable bit
 11177                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 11178                           ;	Internal/External Oscillator Switchover bit
 11179                           ;	IESO = OFF, Oscillator Switchover mode disabled
 11180  300001                     	org	3145729
 11181  300001  01                 	db	1
 11182                           
 11183                           ;Config register CONFIG2L @ 0x300002
 11184                           ;	Power-up Timer Enable bit
 11185                           ;	PWRT = OFF, PWRT disabled
 11186                           ;	Brown-out Reset Enable bits
 11187                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 11188                           ;	Brown Out Reset Voltage bits
 11189                           ;	BORV = 3, Minimum setting
 11190  300002                     	org	3145730
 11191  300002  1F                 	db	31
 11192                           
 11193                           ;Config register CONFIG2H @ 0x300003
 11194                           ;	Watchdog Timer Enable bit
 11195                           ;	WDT = ON, WDT enabled
 11196                           ;	Watchdog Timer Postscale Select bits
 11197                           ;	WDTPS = 32768, 1:32768
 11198  300003                     	org	3145731
 11199  300003  1F                 	db	31
 11200                           
 11201                           ; Padding undefined space
 11202  300004                     	org	3145732
 11203  300004  FF                 	db	255
 11204                           
 11205                           ;Config register CONFIG3H @ 0x300005
 11206                           ;	CCP2 MUX bit
 11207                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 11208                           ;	PORTB A/D Enable bit
 11209                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 11210                           ;	Low-Power Timer1 Oscillator Enable bit
 11211                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 11212                           ;	MCLR Pin Enable bit
 11213                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 11214  300005                     	org	3145733
 11215  300005  83                 	db	131
 11216                           
 11217                           ;Config register CONFIG4L @ 0x300006
 11218                           ;	Stack Full/Underflow Reset Enable bit
 11219                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11220                           ;	Single-Supply ICSP Enable bit
 11221                           ;	LVP = ON, Single-Supply ICSP enabled
 11222                           ;	Extended Instruction Set Enable bit
 11223                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 11224                           ;	Background Debugger Enable bit
 11225                           ;	DEBUG = 0x1, unprogrammed default
 11226  300006                     	org	3145734
 11227  300006  85                 	db	133
 11228                           
 11229                           ; Padding undefined space
 11230  300007                     	org	3145735
 11231  300007  FF                 	db	255
 11232                           
 11233                           ;Config register CONFIG5L @ 0x300008
 11234                           ;	Code Protection bit
 11235                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 11236                           ;	Code Protection bit
 11237                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 11238                           ;	Code Protection bit
 11239                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 11240                           ;	Code Protection bit
 11241                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 11242  300008                     	org	3145736
 11243  300008  0F                 	db	15
 11244                           
 11245                           ;Config register CONFIG5H @ 0x300009
 11246                           ;	Boot Block Code Protection bit
 11247                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 11248                           ;	Data EEPROM Code Protection bit
 11249                           ;	CPD = OFF, Data EEPROM not code-protected
 11250  300009                     	org	3145737
 11251  300009  C0                 	db	192
 11252                           
 11253                           ;Config register CONFIG6L @ 0x30000A
 11254                           ;	Write Protection bit
 11255                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 11256                           ;	Write Protection bit
 11257                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 11258                           ;	Write Protection bit
 11259                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 11260                           ;	Write Protection bit
 11261                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 11262  30000A                     	org	3145738
 11263  30000A  0F                 	db	15
 11264                           
 11265                           ;Config register CONFIG6H @ 0x30000B
 11266                           ;	Configuration Register Write Protection bit
 11267                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 11268                           ;	Boot Block Write Protection bit
 11269                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 11270                           ;	Data EEPROM Write Protection bit
 11271                           ;	WRTD = OFF, Data EEPROM not write-protected
 11272  30000B                     	org	3145739
 11273  30000B  E0                 	db	224
 11274                           
 11275                           ;Config register CONFIG7L @ 0x30000C
 11276                           ;	Table Read Protection bit
 11277                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 11278                           ;	Table Read Protection bit
 11279                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 11280                           ;	Table Read Protection bit
 11281                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 11282                           ;	Table Read Protection bit
 11283                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 11284  30000C                     	org	3145740
 11285  30000C  0F                 	db	15
 11286                           
 11287                           ;Config register CONFIG7H @ 0x30000D
 11288                           ;	Boot Block Table Read Protection bit
 11289                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 11290  30000D                     	org	3145741
 11291  30000D  40                 	db	64
 11292                           tosu	equ	0xFFF
 11293                           tosh	equ	0xFFE
 11294                           tosl	equ	0xFFD
 11295                           stkptr	equ	0xFFC
 11296                           pclatu	equ	0xFFB
 11297                           pclath	equ	0xFFA
 11298                           pcl	equ	0xFF9
 11299                           tblptru	equ	0xFF8
 11300                           tblptrh	equ	0xFF7
 11301                           tblptrl	equ	0xFF6
 11302                           tablat	equ	0xFF5
 11303                           prodh	equ	0xFF4
 11304                           prodl	equ	0xFF3
 11305                           indf0	equ	0xFEF
 11306                           postinc0	equ	0xFEE
 11307                           postdec0	equ	0xFED
 11308                           preinc0	equ	0xFEC
 11309                           plusw0	equ	0xFEB
 11310                           fsr0h	equ	0xFEA
 11311                           fsr0l	equ	0xFE9
 11312                           wreg	equ	0xFE8
 11313                           indf1	equ	0xFE7
 11314                           postinc1	equ	0xFE6
 11315                           postdec1	equ	0xFE5
 11316                           preinc1	equ	0xFE4
 11317                           plusw1	equ	0xFE3
 11318                           fsr1h	equ	0xFE2
 11319                           fsr1l	equ	0xFE1
 11320                           bsr	equ	0xFE0
 11321                           indf2	equ	0xFDF
 11322                           postinc2	equ	0xFDE
 11323                           postdec2	equ	0xFDD
 11324                           preinc2	equ	0xFDC
 11325                           plusw2	equ	0xFDB
 11326                           fsr2h	equ	0xFDA
 11327                           fsr2l	equ	0xFD9
 11328                           status	equ	0xFD8

Data Sizes:
    Strings     397
    Constant    0
    Data        0
    BSS         298
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAMh          95     93      95
    COMRAMl          31     30      31
    BANK0h          106     90      96
    BANK0l           21      0       9
    BANK1           256      0      80
    BANK2           256      0     200
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), STR_38(CODE[3]), STR_33(CODE[3]), STR_28(CODE[3]), 
		 -> STR_24(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_42(CODE[3]), STR_38(CODE[3]), STR_33(CODE[3]), STR_28(CODE[3]), 
		 -> STR_24(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 43
		 -> vfpfcnvrt@ct(COMRAMl[3]), STR_13(CODE[3]), STR_12(CODE[20]), STR_11(CODE[43]), 
		 -> STR_10(CODE[34]), STR_9(CODE[8]), STR_8(CODE[14]), STR_7(CODE[41]), 
		 -> STR_6(CODE[42]), STR_5(CODE[33]), STR_4(CODE[41]), STR_3(CODE[38]), 
		 -> STR_2(CODE[33]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 43
		 -> vfpfcnvrt@ct(COMRAMl[3]), STR_13(CODE[3]), STR_12(CODE[20]), STR_11(CODE[43]), 
		 -> STR_10(CODE[34]), STR_9(CODE[8]), STR_8(CODE[14]), STR_7(CODE[41]), 
		 -> STR_6(CODE[42]), STR_5(CODE[33]), STR_4(CODE[41]), STR_3(CODE[38]), 
		 -> STR_2(CODE[33]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0h[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 200
		 -> buffer(BANK2[200]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0h[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_13(CODE[3]), STR_12(CODE[20]), STR_11(CODE[43]), STR_10(CODE[34]), 
		 -> STR_9(CODE[8]), STR_8(CODE[14]), STR_7(CODE[41]), STR_6(CODE[42]), 
		 -> STR_5(CODE[33]), STR_4(CODE[41]), STR_3(CODE[38]), STR_2(CODE[33]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0h[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0h[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_13(CODE[3]), STR_12(CODE[20]), STR_11(CODE[43]), STR_10(CODE[34]), 
		 -> STR_9(CODE[8]), STR_8(CODE[14]), STR_7(CODE[41]), STR_6(CODE[42]), 
		 -> STR_5(CODE[33]), STR_4(CODE[41]), STR_3(CODE[38]), STR_2(CODE[33]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 43
		 -> STR_13(CODE[3]), STR_12(CODE[20]), STR_11(CODE[43]), STR_10(CODE[34]), 
		 -> STR_9(CODE[8]), STR_8(CODE[14]), STR_7(CODE[41]), STR_6(CODE[42]), 
		 -> STR_5(CODE[33]), STR_4(CODE[41]), STR_3(CODE[38]), STR_2(CODE[33]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0h[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0h[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAMh[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0h[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0h[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0h[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0h[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0h[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_13(CODE[3]), STR_12(CODE[20]), STR_11(CODE[43]), STR_10(CODE[34]), 
		 -> STR_9(CODE[8]), STR_8(CODE[14]), STR_7(CODE[41]), STR_6(CODE[42]), 
		 -> STR_5(CODE[33]), STR_4(CODE[41]), STR_3(CODE[38]), STR_2(CODE[33]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 200
		 -> buffer(BANK2[200]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0h[2]), 

    S896_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 200
		 -> buffer(BANK2[200]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 200
		 -> buffer(BANK2[200]), 

    send_string_no_lib@p	PTR unsigned char  size(2) Largest target is 200
		 -> gotten(BIGRAMl[1]), buffer(BANK2[200]), STR_1(CODE[60]), 

    main@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> gotten(BIGRAMl[1]), 


Critical Paths under _main in COMRAMh

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _atoi->_isspace
    _print_line->_send_string_no_lib
    _send_string_no_lib->_send_byte_no_lib

Critical Paths under _main in COMRAMl

    _vfprintf->_vfpfcnvrt

Critical Paths under _main in BANK0h

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK0l

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   51274
                                             88 COMRAMh    5     5      0
                           _delay_ms
                  _is_byte_available
                         _print_line
                   _read_byte_no_lib
                 _send_string_no_lib
                         _setupPorts
                        _setupSerial
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             30    10     20   48616
                                             62 BANK0h    28     8     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   46577
                                             86 COMRAMh    2     2      0
                                             56 BANK0h     6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           58    52      6   46176
                                             66 COMRAMh   20    14      6
                                              0 COMRAMl   30    30      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    6695
                                             27 COMRAMh   39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMRAMh    8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAMh    6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAMh    6     4      2
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6    1365
                                              0 COMRAMh   11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   23608
                                             45 COMRAMh   12     5      7
                                              0 BANK0h    56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1020
                                              6 COMRAMh    8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     541
                                              0 COMRAMh    6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAMh   10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAMh   20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAMh   14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAMh   10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAMh    8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAMh   16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAMh    4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                              0 COMRAMh   25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAMh   12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAMh   12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAMh   25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAMh    6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAMh    8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6334
                                             27 COMRAMh   36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4533
                                             16 COMRAMh   11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAMh    4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1691
                                              9 COMRAMh    7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAMh    4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAMh   18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAMh   26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1645
                                              9 COMRAMh    8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1290
                                              0 COMRAMh    9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1382
                                              7 COMRAMh   15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAMh    7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAMh    6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     541
                                              0 COMRAMh    6     2      4
 ---------------------------------------------------------------------------------
 (1) _setupSerial                                          1     1      0       2
 ---------------------------------------------------------------------------------
 (1) _setupPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_byte_no_lib                                     1     1      0      23
                                              0 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (1) _print_line                                           0     0      0    1131
                 _send_string_no_lib
 ---------------------------------------------------------------------------------
 (1) _send_string_no_lib                                   2     0      2    1131
                                              1 COMRAMh    2     0      2
                   _send_byte_no_lib
 ---------------------------------------------------------------------------------
 (2) _send_byte_no_lib                                     1     1      0      22
                                              0 COMRAMh    1     1      0
 ---------------------------------------------------------------------------------
 (1) _is_byte_available                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             4     2      2     122
                                              0 COMRAMh    4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_ms
   _is_byte_available
   _print_line
     _send_string_no_lib
       _send_byte_no_lib
   _read_byte_no_lib
   _send_string_no_lib
   _setupPorts
   _setupSerial
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower
         _xtoa
           _isalpha
           _isupper
           _pad
           _toupper
             _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMhh           EEA      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      39        0.0%
BANK14             100      0       0      36        0.0%
BITBANK13          100      0       0      34        0.0%
BANK13             100      0       0      35        0.0%
BITBANK12          100      0       0      32        0.0%
BANK12             100      0       0      33        0.0%
BITBANK11          100      0       0      30        0.0%
BANK11             100      0       0      31        0.0%
BITBANK10          100      0       0      28        0.0%
BANK10             100      0       0      29        0.0%
BITBANK9           100      0       0      26        0.0%
BANK9              100      0       0      27        0.0%
BITBANK8           100      0       0      24        0.0%
BANK8              100      0       0      25        0.0%
BITBANK7           100      0       0      22        0.0%
BANK7              100      0       0      23        0.0%
BITBANK6           100      0       0      20        0.0%
BANK6              100      0       0      21        0.0%
BITBANK5           100      0       0      18        0.0%
BANK5              100      0       0      19        0.0%
BITBANK4           100      0       0      16        0.0%
BANK4              100      0       0      17        0.0%
BITBANK3           100      0       0      14        0.0%
BANK3              100      0       0      15        0.0%
BITBANK2           100      0       0      12        0.0%
BANK2              100      0      C8      13       78.1%
BITBANK1           100      0       0      10        0.0%
BANK1              100      0      50      11       31.2%
BITBANK15           80      0       0      40        0.0%
BANK15              80      0       0      37        0.0%
BIGRAMhl            74      0       0      42        0.0%
BANK0h              6A     5A      60       8       90.6%
BITBANK0h           6A      0       0       6        0.0%
COMRAMh             5F     5D      5F       2      100.0%
BITCOMRAMh          5F      0       0       0        0.0%
BIGRAMl             1F      0       0      43        0.0%
BITCOMRAMl          1F      0       0       1        0.0%
COMRAMl             1F     1E      1F       3      100.0%
BITBANK0l           15      0       0       7        0.0%
BANK0l              15      0       9       9       42.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       4        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FF      38        0.0%
DATA                 0      0     1FF       5        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Nov 09 06:02:59 2021

               ___fldiv@aexp 0019                 ___fldiv@bexp 0018                 ___fldiv@sign 0011  
                         l43 C0E2                           l52 C02E                           l46 C0F8  
                         l49 C048                           _X1 00F8                 ___awdiv@sign 0006  
        ___wmul@multiplicand 0003                          l111 C166                          l104 C0A0  
                        l121 C052                          l122 C050                          l130 C5B0  
                        l107 C150                          l115 C06C                          l124 C064  
                        l116 C06A                          l109 C14C                          l117 C07A  
                        l133 C0C6                          l118 C080                          l403 CC94  
                        l260 D01E                          l430 CD9A                          l247 D1A6  
                        l407 C1D6                          l364 C8F2                          l703 C38E  
                        l720 DE56                          l392 C6BC                          l377 C76C  
                        l715 E032                          l811 C432                          l717 DE92  
                        l661 E64C                          l726 DED8                          l398 CC4E  
                        l670 E91C                          l662 E63A                          l751 E45C  
                        l663 E600                          l728 DF50                          l905 DC98  
                        l729 DF3E                          l754 E2EE                          l747 E0F8  
                        l923 FE6E                          l764 E41E                          l756 E366  
                        l861 C7F4                          l757 E354                          l941 F602  
                        l678 E766                          l863 C82E                          l687 E836  
                        l688 E824                          l874 CA24                          l858 C7B2  
                        l877 CA66                          l885 DA5A                          l879 CA92  
                        l887 DA62                          l969 FA42                          _abs C284  
                        _lcd 000F83                          _pad C76E                 ___awmod@sign 0006  
                        wreg 000FE8                 ___flmul@aexp 0012                 ___flmul@bexp 0013  
               ___flmul@sign 000D                 ___flmul@temp 0018                 ___flmul@prod 0014  
               ___fltol@exp1 000A                         l1003 D71C                         l1012 D7BA  
                       l1005 D724                         l1102 C2C2                         l1201 C490  
                       l1130 D32E                         l1026 D956                         l1042 EA10  
                       l1211 CEBA                         ?_abs 0013                         l1028 D9B8  
                       l1133 D336                         l1221 C546                         l1142 D626  
                       l1207 C12E                         l1071 EF8C                         l1057 F214  
                       l1226 C54E                         l1234 C4E6                         l1155 C19E  
                       l1163 C3E0                         l1139 D6E2                         l1083 C60A  
                       l3100 E478                         l1084 C612                         l1149 C282  
                       l1245 C246                         l3110 E4AC                         l3102 E47A  
                       l1094 CB90                         l1239 C4EE                         l1184 C9BC  
                       l1192 C348                         l3120 E4DE                         l3104 E48A  
                       l3112 E4B4                         l1169 C20E                         l4010 DA32  
                       l4002 D9BA                         l3210 E6B6                         l3202 E67E  
                       l3130 E514                         l3122 E4E4                         l3114 E4C4  
                       l3106 E49A                         l1195 C020                         l1099 C2BA  
                       l3300 C312                         l4020 DA8A                         l4012 DA34  
                       l4004 D9DA                         l3212 E6BA                         l3204 E68E  
                       l3220 E6DA                         l3140 E550                         l3132 E524  
                       l3124 E4F2                         l3116 E4CA                         l3108 E4AA  
                       l4100 F32C                         l3302 C324                         l3310 C10A  
                       l4030 DB2A                         l4022 DA90                         l4014 DA4E  
                       l4006 DA02                         l3222 E700                         l3230 E756  
                       l3214 E6C8                         l3206 E69C                         l3150 E56E  
                       l3142 E55E                         l3134 E526                         l3126 E4F4  
                       l3118 E4DC                         l4102 F33E                         l3400 CFC8  
                       l3304 C328                         l3312 C122                         l4040 DBD2  
                       l4032 DB30                         l4024 DA98                         l4016 DA6A  
                       l4008 DA22                         l3240 E7AA                         l3232 E77C  
                       l3224 E734                         l3216 E6CA                         l3208 E6AA  
                       l3160 E582                         l3152 E572                         l3144 E562  
                       l3128 E504                         l3136 E52E                         l4200 F728  
                       l4120 F412                         l4104 F35A                         l4112 F3A4  
                       l3320 C210                         l3090 C940                         l3082 C8F4  
                       l3330 D020                         l3402 CFCE                         l3306 C0FA  
                       l4050 DC34                         l4042 DBEC                         l4034 DB36  
                       l4026 DAA2                         l4018 DA7C                         l3410 DC9A  
                       l3250 E7D4                         l3242 E7B8                         l3234 E78C  
                       l3226 E736                         l3218 E6D4                         l3170 E596  
                       l3162 E586                         l3154 E576                         l3146 E566  
                       l3138 E53E                         l4210 F83C                         l4202 F738  
                       l4122 F42E                         l4114 F3CA                         l4130 F44A  
                       l4106 F372                         l3324 C0A2                         l3092 C976  
                       l3084 C906                         l3340 D064                         l3332 D024  
                       l3404 CFDE                         l3308 C106                         l4052 DC3A  
                       l4060 DC70                         l4044 DC06                         l4028 DAA8  
                       l4036 DB9A                         l3500 DEC8                         l3420 DCD6  
                       l3412 DCA6                         l3260 E806                         l3252 E7E4  
                       l3244 E7BA                         l3228 E746                         l3180 E5E8  
                       l3172 E59A                         l3164 E58A                         l3156 E57A  
                       l3148 E56A                         l3316 C1D8                         l4300 FC86  
                       l4220 F8DC                         l4204 F74C                         l4212 F842  
                       l4140 F4D4                         l4132 F464                         l4108 F37C  
                       l3326 C0BE                         l3086 C918                         l3350 D0BA  
                       l3342 D084                         l3334 D032                         l3406 CFFE  
                       l4054 DC4C                         l4038 DBB4                         l4046 DC14  
                       l3510 DF08                         l3502 DED6                         l3430 DD06  
                       l3422 DCE6                         l3414 DCB4                         l3270 E860  
                       l3262 E81C                         l3246 E7C8                         l3238 E7A0  
                       l3254 E7E6                         l3190 E62C                         l3182 E5F8  
                       l3166 E58E                         l3158 E57E                         l3174 E59E  
                       l4310 FCCA                         l4302 FC94                         l4230 F9B8  
                       l4222 F90E                         l4214 F860                         l4206 F7B0  
                       l4150 F5AC                         l4142 F52E                         l4118 F400  
                       l4070 F23E                         l3088 C922                         l3360 D13C  
                       l3352 D0CE                         l3344 D088                         l3336 D052  
                       l4056 DC58                         l4048 DC26                         l3520 DF7A  
                       l3512 DF36                         l3504 DEE8                         l3440 DD3C  
                       l3432 DD0C                         l3424 DCE8                         l3416 DCB6  
                       l3600 E188                         l3280 E8DC                         l3272 E89A  
                       l3248 E7D0                         l3256 E7F4                         l3192 E62E  
                       l3184 E60E                         l3176 E5A2                         l3168 E592  
                       l3096 E45E                         l4320 FD00                         l4312 FCD2  
                       l4304 FCA4                         l4240 FA1A                         l4232 F9BE  
                       l4224 F91E                         l4216 F894                         l4208 F808  
                       l4160 F5F6                         l4152 F5B0                         l4144 F562  
                       l4136 F49A                         l4080 F28E                         l4072 F246  
                       l4064 F216                         l4400 D7EE                         l3370 D186  
                       l3362 D13E                         l3354 D0DC                         l3346 D094  
                       l3338 D056                         l4058 DC60                         l3530 DFF2  
                       l3522 DFA4                         l3506 DEF6                         l3450 DD7C  
                       l3442 DD4C                         l3434 DD1A                         l3418 DCC6  
                       l3426 DCF0                         l3610 E1CA                         l3602 E194  
                       l3290 E8FC                         l3282 E8E0                         l3266 E846  
                       l3274 E89C                         l3258 E7F8                         l3194 E638  
                       l3186 E61A                         l3178 E5CC                         l3098 E46A  
                       l4330 FD5C                         l4322 FD08                         l4314 FCE2  
                       l4306 FCA8                         l4250 FAD0                         l4242 FA2E  
                       l4234 F9F2                         l4226 F92E                         l4218 F8C6  
                       l4170 F632                         l4154 F5C2                         l4162 F60E  
                       l4146 F56A                         l4138 F4CE                         l4090 F2C6  
                       l4082 F29C                         l4074 F26A                         l4066 F220  
                       l4402 D800                         l4410 D860                         l4500 C04C  
                       l3364 D150                         l3356 D0EE                         l3348 D0B2  
                       l3380 CEEE                         l3700 C870                         l3540 E028  
                       l3532 E00E                         l3516 DF60                         l3524 DFA8  
                       l3508 DEFA                         l3452 DD8C                         l3460 DDAC  
                       l3444 DD4E                         l3436 DD1C                         l3428 DD00  
                       l3620 E22C                         l3612 E1DA                         l3604 E1A2  
                       l3292 E90A                         l3284 E8EE                         l3276 E8AC  
                       l3268 E852                         l3196 E65A                         l3188 E61E  
                       l4340 FD9C                         l4332 FD64                         l4324 FD14  
                       l4316 FCEA                         l4308 FCB8                         l4260 FB20  
                       l4252 FAE4                         l4244 FA3A                         l4236 FA06  
                       l4228 F962                         l4180 F698                         l4172 F64E  
                       l4156 F5D4                         l4148 F59C                         l4092 F2CA  
                       l4084 F2AE                         l4076 F274                         l4068 F230  
                       l4420 D8F6                         l4412 D870                         l4502 C060  
                       l3358 D11C                         l3366 D156                         l3390 CF46  
                       l3382 CEF2                         l3374 CEBC                         l3710 C8A6  
                       l3702 C882                         l3534 E012                         l3526 DFC2  
                       l3518 DF6C                         l3470 DDEA                         l3462 DDBC  
                       l3454 DD94                         l3438 DD2C                         l3446 DD56  
                       l3630 E2D4                         l3622 E248                         l3614 E1F4  
                       l3606 E1AE                         l3550 E040                         l3294 E90C  
                       l3286 E8F4                         l3278 E8BC                         l3198 E66A  
                       l4350 FDD8                         l4342 FDAE                         l4326 FD1A  
                       l4334 FD6A                         l4318 FCF8                         l4270 FB54  
                       l4262 FB2E                         l4254 FAF6                         l4246 FA5E  
                       l4238 FA0A                         l4190 F6E0                         l4182 F6AA  
                       l4174 F684                         l4158 F5DC                         l4086 F2BA  
                       l4094 F2D0                         l4078 F27C                         l4430 D96A  
                       l4422 D914                         l4414 D876                         l4406 D83A  
                       l4510 E962                         l4440 D1BC                         l3368 D166  
                       l3392 CF5A                         l3384 CF00                         l3376 CEC0  
                       l3712 C8BC                         l3704 C88A                         l3720 C8D2  
                       l3536 E020                         l3528 DFD8                         l3480 DE32  
                       l3472 DDFA                         l3464 DDBC                         l3456 DD98  
                       l3448 DD66                         l3640 E310                         l3632 E2DE  
                       l3624 E272                         l3616 E204                         l3608 E1BE  
                       l3560 E080                         l3552 E04E                         l3288 E8F6  
                       l4360 FE30                         l4352 FDDE                         l4344 FDBA  
                       l4336 FD7C                         l4328 FD40                         l4280 FB86  
                       l4272 FB64                         l4264 FB3E                         l4256 FB04  
                       l4248 FAC2                         l4192 F6EE                         l4184 F6BC  
                       l4176 F68C                         l4168 F620                         l4096 F2F6  
                       l4088 F2C2                         l4432 D97A                         l4424 D92E  
                       l4416 D87C                         l4408 D84C                         l4600 EDEA  
                       l4512 E966                         l4504 E91E                         l4450 D21A  
                       l4442 D1C0                         l3394 CF68                         l3386 CF20  
                       l3378 CECE                         l3298 C306                         l3722 C8E2  
                       l3714 C8C4                         l3706 C892                         l3730 C6C2  
                       l3538 E026                         l3490 DE80                         l3482 DE46  
                       l3474 DE0A                         l3650 E382                         l3642 E31E  
                       l3634 E2EC                         l3626 E2A8                         l3618 E220  
                       l3570 E0B0                         l3562 E086                         l3554 E050  
                       l3802 C1A0                         l3810 CC96                         l4362 FE38  
                       l4346 FDC2                         l4338 FD96                         l4290 FC2E  
                       l4282 FB98                         l4274 FB68                         l4266 FB42  
                       l4258 FB0C                         l4194 F706                         l4186 F6CA  
                       l4178 F690                         l4434 D990                         l4426 D948  
                       l4418 D8DA                         l4602 EDFC                         l4530 E998  
                       l4522 E98C                         l4514 E972                         l4506 E942  
                       l4700 C0C8                         l4460 D246                         l4444 D1C4  
                       l3396 CF96                         l3388 CF3E                         l3724 C8EA  
                       l3716 C8C6                         l3708 C8A0                         l3740 C6F2  
                       l3732 C6D0                         l3492 DE90                         l3484 DE54  
                       l3476 DE1A                         l3468 DDD0                         l3660 E3EC  
                       l3652 E390                         l3644 E34C                         l3636 E2FE  
                       l3628 E2B6                         l3580 E0E8                         l3572 E0B2  
                       l3564 E096                         l3556 E060                         l3548 E034  
                       l3804 C1B6                         l3820 CCEC                         l3812 CCAC  
                       l4364 FE48                         l4356 FE12                         l4348 FDD2  
                       l4292 FC36                         l4284 FB9C                         l4276 FB6E  
                       l4268 FB48                         l4196 F718                         l4188 F6CE  
                       l4428 D964                         l4380 D73A                         l4372 D6E4  
                       l4620 EF28                         l4604 EE12                         l4612 EE7C  
                       l4516 E974                         l4540 E9FE                         l4508 E950  
                       l4702 C0D4                         l4710 C03E                         l4470 D2EE  
                       l4462 D27A                         l4454 D220                         l4446 D1E0  
                       l4438 D1A8                         l3398 CFB6                         l3718 C8CC  
                       l3750 C738                         l3742 C704                         l3734 C6D8  
                       l3494 DEA2                         l3486 DE60                         l3478 DE22  
                       l3670 E442                         l3662 E406                         l3654 E3BA  
                       l3638 E30C                         l3590 E138                         l3582 E108  
                       l3574 E0C2                         l3566 E09C                         l3558 E070  
                       l3806 C1C6                         l3822 CCFC                         l3902 C434  
                       l3910 C526                         l4366 FE4E                         l4358 FE24  
                       l4278 FB74                         l4286 FBA2                         l4294 FC3A  
                       l4198 F720                         l4390 D77A                         l4382 D742  
                       l4374 D6F4                         l4630 EFC4                         l4622 EF5C  
                       l4614 EEAA                         l4606 EE20                         l4550 EA8A  
                       l4542 EA1E                         l4534 E99E                         l4526 E992  
                       l4518 E986                         ?_pad 0011                         l4704 C0DE  
                       l4712 C022                         l4472 D300                         l4456 D236  
                       l4448 D216                         l3760 C764                         l3752 C740  
                       l3744 C70C                         l3736 C6DC                         l3728 C6BE  
                       l3496 DEB8                         l3488 DE7E                         l3664 E422  
                       l3672 E448                         l3648 E376                         l3656 E3BE  
                       l3592 E142                         l3584 E118                         l3576 E0D2  
                       l3568 E0A2                         l3680 C35A                         l3832 CD26  
                       l3824 CD00                         l3816 CCC0                         l3920 D548  
                       l3904 C444                         l3912 C538                         l4296 FC58  
                       l4288 FBFA                         l4480 CD9C                         l4392 D782  
                       l4384 D762                         l4376 D6F6                         l4632 EFE8  
                       l4608 EE50                         l4560 EB0C                         l4552 EA98  
                       l4544 EA20                         l4720 C404                         l4706 C030  
                       l4730 C090                         l4474 D312                         l4466 D2B0  
                       l4458 D23E                         l3690 C84A                         l3754 C746  
                       l3746 C714                         l3738 C6EA                         l3498 DEBE  
                       l3770 C680                         l3674 E44C                         l3666 E432  
                       l3658 E3D8                         l3594 E158                         l3578 E0E2  
                       l3850 CD8A                         l3842 CD4E                         l3834 CD30  
                       l3826 CD0E                         l3818 CCEA                         l3930 D616  
                       l3922 D55C                         l3906 C4F0                         l4298 FC74  
                       l4490 CE12                         l4482 CDC6                         l4394 D79E  
                       l4386 D76A                         l4378 D710                         l4650 F126  
                       l4634 EFFE                         l4642 F084                         l4618 EF16  
                       l4570 EB8E                         l4554 EAB8                         l4562 EB1E  
                       l4546 EA44                         l4538 E9AA                         l4722 C420  
                       l4714 C3E2                         l4708 C038                         l4740 C09E  
                       l4732 C092                         l3860 C79E                         l3692 C84E  
                       l3684 C830                         l3748 C722                         l3756 C74C  
                       l3772 C690                         l3764 C614                         l3780 CB92  
                       l3668 E440                         l3596 E164                         l3588 E12C  
                       l3844 CD5A                         l3836 CD3A                         l3940 D6D2  
                       l3924 D56A                         l3932 D64A                         l3916 D4D2  
                       l4492 CE2E                         l4396 D7AE                         l4388 D774  
                       l4660 F1A4                         l4644 F0BA                         l4636 F00C  
                       l4628 EFA0                         l4580 EC30                         l4572 EBBE  
                       l4564 EB3E                         l4556 EAC6                         l4548 EA7A  
                       l4716 C3F4                         l4820 D362                         l4734 C098  
                       l4726 C082                         l3870 C802                         l3862 C7AA  
                       l3854 C76E                         l3694 C85C                         l3686 C834  
                       l3758 C75C                         l3774 C6B4                         l3766 C642  
                       l3790 CC1C                         l3782 CBC0                         l3598 E17C  
                       l3678 C34A                         l3846 CD6A                         l3934 D686  
                       l3918 D4F2                         l4494 CE40                         l4486 CDD2  
                       l4662 F1B8                         l4646 F0F0                         l4638 F048  
                       l4590 ECF8                         l4582 EC54                         l4574 EBE2  
                       l4566 EB4E                         l4718 C3FC                         l4830 D376  
                       l4822 D366                         l4814 D338                         l4744 C130  
                       l4760 C07E                         l4736 C09A                         l4728 C084  
                       l3872 C816                         l3864 C7BE                         l3856 C77C  
                       l3696 C864                         l3688 C842                         l3776 C6BA  
                       l3768 C652                         l3792 CC2E                         l3784 CBD0  
                       l3848 CD7A                         l3880 CA94                         l3936 D69A  
                       l3928 D5DA                         l4496 CE80                         l4488 CDE0  
                       l3944 C248                         l3952 C4C8                         l4648 F116  
                       l4656 F172                         l4592 ED2E                         l4584 EC78  
                       l4576 EC14                         l4568 EB7E                         l4672 F1DE  
                       l4840 D3AC                         l4832 D382                         l4824 D36E  
                       l4816 D340                         l4754 C164                         l4746 C13E  
                       l4690 C57E                         l4738 C09C                         l3970 C3DA  
                       l3962 C390                         l3866 C7D2                         l3858 C790  
                       l3698 C868                         l3794 CC3C                         l3786 CBFE  
                       l3882 CAB4                         l3938 D6C2                         l3954 C4DA  
                       l4674 F202                         l4658 F196                         l4666 F1C4  
                       l4594 ED64                         l4586 ECC0                         l4914 E9D0  
                       l4850 D414                         l4842 D3C8                         l4834 D396  
                       l4818 D356                         l4748 C15E                         l4684 C550  
                       l3964 C394                         l4916 D264                         l3980 C9EA  
                       l3876 C284                         l3868 C7D6                         l3796 CC8C  
                       l3788 CC0E                         l3884 CAF2                         l3892 CB32  
                       l3948 C492                         l4668 F1D2                         l4692 C5B2  
                       l4860 D46C                         l4852 D42C                         l4844 D3D4  
                       l4836 D3A4                         l4686 C554                         l4758 C066  
                       l3958 C168                         l3966 C3A8                         l3990 CA30  
                       l3982 C9F8                         l3974 C9BE                         l3878 C29E  
                       l3798 CC92                         l3894 CB44                         l3886 CB1A  
                       l4694 C5BA                         l4870 D4B8                         l4862 D474  
                       l4854 D444                         l4846 D3EC                         l4838 D3A8  
                       l4688 C57A                         l3968 C3D6                         l3992 CA44  
                       l3984 CA0A                         l3976 C9D2                         l3888 CB26  
                       l4696 C5C8                         l4872 D4C4                         l4864 D48A  
                       l4856 D450                         l4848 D404                         l3994 CA48  
                       l3978 C9DE                         l3898 CB88                         l4698 C5EE  
                       l4866 D496                         l4858 D454                         l3996 CA74  
                       l3988 CA1C                         l4868 D4A2                         l3998 CA86  
                       STR_1 FE71                         STR_2 FF73                         STR_3 FF2B  
                       STR_4 FF02                         STR_5 FF94                         STR_6 FED8  
                       STR_8 FFC9                         STR_9 FFD7                         u4000 DEB8  
                       u4001 DEB4                         u4010 DED6                         u4011 DED2  
                       u4100 E020                         u4020 DEF6                         u3300 E478  
                       u4101 E01C                         u4021 DEF2                         u3301 E474  
                       u4030 DF08                         u4110 E04E                         u3310 E48A  
                       u4031 DF04                         u4111 E04A                         u3311 E486  
                       u5000 D9EC                         u4040 DF36                         u4200 E2EC  
                       u4120 E060                         u3400 E5E4                         u3320 E49A  
                       u4041 DF32                         u4201 E2E8                         u4121 E05C  
                       u3401 E5DE                         u3321 E496                         u5010 DA02  
                       u4050 DF4C                         u4210 E30C                         u4130 E070  
                       u3410 E5E6                         u3330 E4DC                         u5011 D9FE  
                       u4051 DF48                         u4211 E308                         u4131 E06C  
                       u3331 E4D8                         u3260 C906                         u5100 DC14  
                       u5020 DA32                         u4300 C842                         u4060 DF60  
                       u4220 E31E                         u4140 E0B0                         u3500 E700  
                       u3420 E60E                         u3340 E4F2                         u3261 C902  
                       u5101 DC10                         u5021 DA2E                         u4301 C83E  
                       u4061 DF5C                         u4221 E31A                         u4141 E0AC  
                       u3501 E6FC                         u3421 E60A                         u3341 E4EE  
                       u3270 C918                         u5110 DC26                         u5030 DA4E  
                       u4310 C85C                         u4070 DF7A                         u4230 E34C  
                       u4150 E0C2                         u3510 E746                         u3430 E62C  
                       u3350 E504                         u3271 C914                         u5111 DC22  
                       u5031 DA4A                         u4311 C858                         u4071 DF76  
                       u4231 E348                         u4151 E0BE                         u3511 E742  
                       u3431 E628                         u3351 E500                         u3280 C940  
                       u5120 DC34                         u5040 DA7C                         u4320 C882  
                       u4400 C738                         u4080 DFC2                         u4240 E362  
                       u4160 E0D2                         u3600 E832                         u3520 E77C  
                       u3440 E64C                         u3360 E514                         u5200 F326  
                       u6000 E942                         u3281 C93C                         u5121 DC30  
                       u5041 DA78                         u4321 C87E                         u4401 C734  
                       u4081 DFBE                         u4241 E35E                         u4161 E0CE  
                       u3601 E82E                         u3521 E778                         u3441 E648  
                       u3361 E510                         u6001 E93E                         u3290 C976  
                       u5130 DC4C                         u5050 DA8A                         u4330 C8A0  
                       u4410 C75C                         u4090 DFF2                         u4250 E376  
                       u4170 E108                         u3610 E846                         u3530 E78C  
                       u3450 E65A                         u3370 E550                         u5210 F33E  
                       u6010 EA10                         u3291 C972                         u5131 DC48  
                       u5051 DA86                         u4331 C89C                         u4411 C758  
                       u4091 DFEE                         u4251 E372                         u4171 E104  
                       u3611 E842                         u3531 E788                         u3451 E656  
                       u3371 E54C                         u5211 F33A                         u6011 EA0C  
                       u3700 C122                         u5060 DBB4                         u4340 C8BC  
                       u4420 C642                         u4260 E390                         u4180 E118  
                       u4500 C1B6                         u3620 E860                         u3540 E7B8  
                       u3460 E66A                         u3380 E55E                         u5300 F5D4  
                       u5220 F3CA                         u5140 F23E                         u6100 EBE2  
                       u6020 EA1E                         u3701 C11E                         u5061 DBB0  
                       u4341 C8B8                         u4421 C63E                         u4261 E38C  
                       u4181 E114                         u4501 C1B2                         u3621 E85C  
                       u3541 E7B4                         u3461 E666                         u3381 E55A  
                       u5301 F5D0                         u5221 F3C6                         u5141 F23A  
                       u6101 EBDE                         u6021 EA1A                         u5070 DBD2  
                       u4350 C8E2                         u4430 C680                         u4270 E3D8  
                       u4190 E292                         u3630 E89A                         u3550 E7C8  
                       u3470 E69C                         u3390 E5CC                         u4510 CCAC  
                       u3710 C208                         u5310 F5F6                         u5230 F3F8  
                       u5150 F28E                         u6110 EC54                         u6030 EA44  
                       u5071 DBCE                         u4351 C8DE                         u4431 C67C  
                       u4271 E3D4                         u3631 E896                         u3551 E7C4  
                       u3471 E698                         u3391 E5C8                         u4511 CCA8  
                       u3711 C202                         u5311 F5F2                         u5231 F3F2  
                       u5151 F28A                         u6111 EC50                         u6031 EA40  
                       u3800 D11C                         u4600 C7F4                         u5080 DBEC  
                       u4360 C6D0                         u4440 C6B4                         u4280 E406  
                       u3640 E8AC                         u3560 E7E4                         u3480 E6AA  
                       u4520 CCE0                         u3720 C20A                         u5400 F6EE  
                       u5320 F61C                         u5240 F3FA                         u5160 F29C  
                       u6200 EFC4                         u6120 EC78                         u6040 EA8A  
                       u3801 D118                         u4601 C7F0                         u5081 DBE8  
                       u4361 C6CC                         u4441 C6B0                         u4281 E402  
                       u3641 E8A8                         u3561 E7E0                         u3481 E6A6  
                       u5401 F6EA                         u5321 F618                         u5161 F298  
                       u6201 EFC0                         u6121 EC74                         u6041 EA86  
                       u3810 D166                         u4610 C802                         u5090 DC06  
                       u4370 C6EA                         u4450 CBC0                         u4290 E440  
                       u3650 E8BC                         u3570 E7F4                         u3490 E6C8  
                       u4530 CD0E                         u5410 F718                         u5330 F632  
                       u5250 F412                         u5170 F2AE                         u3730 C240  
                       u6210 EFE8                         u6130 ED2E                         u6050 EB06  
                       u3811 D162                         u4611 C7FE                         u5091 DC02  
                       u4371 C6E6                         u4451 CBBC                         u4291 E43C  
                       u4195 E288                         u3651 E8B8                         u3571 E7F0  
                       u3491 E6C4                         u4531 CD0A                         u5411 F714  
                       u5331 F62E                         u5251 F40E                         u5171 F2AA  
                       u3731 C23A                         u6211 EFE4                         u6131 ED2A  
                       u6051 EB00                         u6300 C13E                         u3820 CECE  
                       u4620 C29E                         u4380 C704                         u3900 DCD6  
                       u4460 CBFE                         u3660 E8DC                         u3580 E806  
                       u4540 CD22                         u4700 C47E                         u5500 FAE4  
                       u5420 F860                         u5340 F64E                         u5260 F496  
                       u5180 F2F6                         u3740 C242                         u6220 F0BA  
                       u6140 ED64                         u6060 EB08                         u6301 C13A  
                       u3821 CECA                         u4621 C29A                         u4381 C700  
                       u3901 DCD2                         u4461 CBFA                         u3661 E8D8  
                       u3581 E802                         u4541 CD1E                         u4525 CCD6  
                       u5501 FAE0                         u5421 F85C                         u5341 F64A  
                       u5261 F492                         u5181 F2F2                         u6221 F0B6  
                       u6141 ED60                         u6310 C14C                         u3750 D032  
                       u3830 CF00                         u4390 C722                         u3910 DD1A  
                       u4470 CC1C                         u3670 E8EE                         u3590 E81C  
                       u4550 CD4A                         u4630 CAD4                         u4710 C490  
                       u5510 FAF6                         u5430 F8C6                         u5350 F684  
                       u5270 F52A                         u5190 F324                         u6230 F0F0  
                       u6150 EDFC                         u6070 EB1E                         u6311 C148  
                       u3751 D02E                         u3831 CEFC                         u4391 C71E  
                       u3911 DD16                         u4471 CC18                         u3671 E8EA  
                       u3591 E818                         u4551 CD46                         u4711 C48C  
                       u5511 FAF2                         u5431 F8C2                         u5351 F680  
                       u5271 F526                         u5191 F31E                         u6231 F0EC  
                       u6151 EDF8                         u6071 EB1A                         u6320 C15E  
                       u3760 D064                         u3840 CF3E                         u3920 DD2C  
                       u4480 CC3C                         u3680 E90A                         u4560 CD6A  
                       u4640 CAF2                         u4800 D5FA                         u4720 C520  
                       u5600 FCCA                         u5520 FB04                         u5440 F90E  
                       u5360 F6AA                         u5280 F59C                         u6240 F196  
                       u6160 EEAA                         u6080 EB4E                         u6321 C15A  
                       u3761 D060                         u3841 CF3A                         u3921 DD28  
                       u4481 CC38                         u3681 E906                         u4561 CD66  
                       u4641 CAEE                         u4721 C51A                         u5601 FCC6  
                       u5521 FB00                         u5441 F90A                         u5361 F6A6  
                       u5281 F598                         u6241 F192                         u6161 EEA6  
                       u6081 EB4A                         u6250 C576                         u6330 C07A  
                       u3850 CF68                         u3690 C348                         u3930 DD3C  
                       u4490 CC8C                         u4570 CD7A                         u4650 CB1A  
                       u4810 D616                         u4730 C522                         u5610 FCF8  
                       u5530 FB20                         u5450 F91E                         u5370 F6BC  
                       u5290 F5C2                         u6170 EF10                         u6090 EB8E  
                       u6331 C076                         u3771 D08E                         u3851 CF64  
                       u3691 C344                         u3931 DD38                         u4491 CC88  
                       u4571 CD76                         u4651 CB16                         u4635 CACA  
                       u4811 D612                         u4707 C474                         u5611 FCF4  
                       u5531 FB1C                         u5451 F91A                         u5371 F6B8  
                       u5291 F5BE                         u6171 EF0A                         u6091 EB8A  
                       u6260 C5A0                         u4900 C198                         u3780 D0B2  
                       u3860 CF96                         u4580 C77C                         u3940 DD7C  
                       u4660 CB44                         u4820 D66A                         u4740 C538  
                       u5620 FD7C                         u5540 FB2E                         u5460 F9B8  
                       u5380 F6CA                         u5700 D73A                         u6180 EF12  
                       u6500 D46C                         u4901 C192                         u3781 D0AE  
                       u3861 CF92                         u4581 C778                         u3941 DD78  
                       u4661 CB40                         u4805 D5F0                         u4741 C534  
                       u5621 FD78                         u5541 FB2A                         u5461 F9B4  
                       u5381 F6C6                         u5701 D736                         u6501 D468  
                       u6270 C5B0                         u4910 C19A                         u3790 D0DC  
                       u3870 CFDE                         u4590 C79E                         u3950 DDBC  
                       u4830 D686                         u4750 D51A                         u5630 FD96  
                       u5550 FB86                         u5470 FA06                         u5390 F6E0  
                       u5710 D79E                         u6190 EF28                         u6271 C5AC  
                       u3791 D0D8                         u3871 CFDA                         u4591 C79A  
                       u3951 DDB8                         u4831 D682                         u5631 FD92  
                       u5551 FB82                         u5471 FA02                         u5391 F6DC  
                       u5711 D79A                         u6191 EF24                         u4920 C3A8  
                       u3960 DE32                         u3880 DCB4                         u4680 CB7E  
                       u4840 D6C2                         u4760 D548                         u5640 FDAE  
                       u5560 FC58                         u5480 FA2E                         u5800 D914  
                       u5720 D7E8                         u6280 C60A                         u6440 D396  
                       u6257 C56C                         u4921 C3A4                         u3961 DE2E  
                       u3881 DCB0                         u4681 CB78                         u4841 D6BE  
                       u4825 D660                         u4761 D544                         u5641 FDAA  
                       u5561 FC54                         u5481 FA2A                         u5801 D910  
                       u5721 D7E2                         u6281 C606                         u6441 D392  
                       u6290 C0F8                         u4930 C3D6                         u3970 DE54  
                       u3890 DCC6                         u4690 CB80                         u4770 D56A  
                       u5650 FE0C                         u5570 FC74                         u5490 FAD0  
                       u4850 C27C                         u5810 D92E                         u5730 D7EA  
                       u6450 D3C8                         u6291 C0F4                         u6267 C596  
                       u4931 C3D2                         u3971 DE50                         u3891 DCC2  
                       u4675 CB56                         u4771 D566                         u4755 D510  
                       u5651 FE06                         u5571 FC70                         u5491 FACC  
                       u4851 C276                         u5811 D92A                         u6451 D3C4  
                       u5900 D300                         u4940 C9D2                         u3980 DE7E  
                       u5660 FE0E                         u5580 FC86                         u4860 C27E  
                       u5820 D948                         u5740 D800                         u6460 D3EC  
                       u6517 C0D6                         u5901 D2FC                         u4941 C9CE  
                       u3981 DE7A                         u5581 FC82                         u5821 D944  
                       u5741 D7FC                         u6461 D3E8                         u5910 D312  
                       u4950 C9F8                         u3990 DEA2                         u4790 D5D6  
                       u5670 FE24                         u5590 FC94                         u4870 C4C2  
                       u5830 D956                         u5750 D834                         u6470 D404  
                       u5911 D30E                         u4951 C9F4                         u3991 DE9E  
                       u4791 D5D2                         u5671 FE20                         u5591 FC90  
                       u4871 C4BC                         u5831 D952                         u5751 D82E  
                       u6471 D400                         u4960 CA18                         u5920 CDC6  
                       u4880 C4C4                         u5840 D964                         u5760 D836  
                       u5680 D6F4                         u6480 D42C                         u4961 CA14  
                       u4785 D57E                         u5921 CDC2                         u5841 D960  
                       u5681 D6F0                         u6481 D428                         u5850 D1E0  
                       u4970 CA66                         u4786 D588                         u5930 CE02  
                       u4890 C4DA                         u5770 D84C                         u5690 D710  
                       u6490 D444                         u5851 D1DC                         u4971 CA62  
                       u4787 D598                         u4891 C4D6                         u5771 D848  
                       u5691 D70C                         u6491 D440                         u5860 D216  
                       u4980 CA74                         u5940 CE12                         u5780 D8B4  
                       u5861 D212                         u4981 CA70                         u5941 CE0E  
                       u5870 D232                         u4990 D9EA                         u5950 CE2E  
                       u5790 D8F6                         u5871 D22E                         u4991 D9E4  
                       u5951 CE2A                         u5791 D8F2                         u5880 D2E8  
                       u5960 CE40                         u5881 D2E2                         u5961 CE3C  
                       u5937 CDF8                         u5785 D8A2                         u5890 D2EA  
                       u5970 CE80                         u5971 CE7C                         u5980 CEA2  
                       u5990 C060                         u5991 C05C                         u5975 CE70  
                       u5977 CE66                         u5987 CE98                         abs@a 0013  
                       _dbuf 0100                         _atoi D1A8                         _ctoa C9BE  
                       _main D338                         _dtoa D9BA             _send_byte_no_lib C04A  
                       _prec 00FD                         _nout 00F9                         pad@i 0018  
                       pad@p 0015                         fsr1h 000FE2                         fsr2h 000FDA  
                       indf1 000FE7                         indf2 000FDF                         fsr1l 000FE1  
                       pad@w 001A                         fsr2l 000FD9                         _xtoa D6E4  
              ___fpclassifyf CA94                         prodh 000FF4                         prodl 000FF3  
                       start 0000              ___fldiv@new_exp 0012                 _tolower$1252 000D  
               ___param_bank 000000                        ??_abs 0015                        ??_pad 0017  
              ___fltol@sign1 0009              __end_of___aodiv D1A8                        ?_atoi 0008  
                      ?_ctoa 000A              __end_of___fladd E91E                        ?_main 0001  
                      ?_dtoa 001C              __end_of___aomod D020              __end_of___fldiv E034  
            __end_of___awdiv C8F4              __end_of___flneg C1D8                        STR_10 FF51  
                      STR_11 FEAD                        STR_12 FFB5                        STR_13 FEAA  
                      STR_22 FFF2                        STR_14 FFDF                        STR_31 FFF5  
                      STR_15 FFE7                        STR_24 FFF2                        STR_40 FFEF  
                      STR_33 FFF5                        STR_42 FFEF                        STR_26 FFF8  
                      STR_18 FFE3                        STR_19 FFEB                        STR_28 FFF8  
                      STR_36 FFFB              __end_of___awmod C76E                        STR_38 FFFB  
            __end_of___flmul E45E              __end_of___flsub C390              __end_of___fltol CD9C  
            ___awdiv@divisor 0003                        ?_xtoa 001C              ___awdiv@counter 0005  
                      _RCREG 000FAE                        _RCSTA 000FAB                 vfpfcnvrt@fmt 0045  
               vfpfcnvrt@llu 006C                        _SPBRG 000FAF                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                        _TXREG 000FAD                        _TXSTA 000FAC  
                      _data1 007E                        _flags 007C                        _fputc C8F4  
            __end_of_isalpha C284                        _fputs C306              __end_of_isdigit C1A0  
                      atoi@n 0015                        pad@fp 0011                        atoi@s 0008  
                      _width 00FB                        ctoa@c 000C                        _putch C020  
                      ctoa@l 000E                        ctoa@w 0010                        main@i 005A  
                      dtoa@d 001E                        dtoa@i 003E                        dtoa@n 0036  
                      dtoa@p 0030                        dtoa@s 0034                        dtoa@w 0032  
            __end_of_islower C248              __end_of_isspace C3E2              __end_of_isupper C210  
                      tablat 000FF5                        status 000FD8              __end_of_sprintf C434  
             ?___fpclassifyf 0001              __end_of_tolower C550                        xtoa@c 0041  
                      xtoa@d 001E                        xtoa@i 003F                        xtoa@n 0037  
                      xtoa@p 0033                        xtoa@w 0035                        xtoa@x 0026  
            __end_of_strncmp CEBC              __end_of_toupper C4F0                 _toupper$1267 000D  
            __initialization C2C4                 __end_of_atoi D338                 __end_of_ctoa CA94  
               __end_of_main D4D2                 __end_of_dtoa DC9A                 __end_of_xtoa D9BA  
                     ??_atoi 000A                       ??_ctoa 000D                       ??_main 0059  
                     ??_dtoa 0026                       ??_xtoa 0027                __activetblptr 000002  
                     _ADCON0 000FC2                       _ADCON1 000FC1                       ?_fputc 0001  
                     ?_fputs 000A             ___awdiv@dividend 0001                       ?_putch 005E  
              vfpfcnvrt@done 005E                       _SPBRGH 000FB0             __end_of_delay_ms C0FA  
               vfprintf@cfmt 0057                       ___flge CB92                       ___fleq C614  
                  ??___aodiv 0011                    ??___fladd 0009                    ??___aomod 0011  
                     ___wmul C0A2                    ??___fldiv 0009                    ??___awdiv 0005  
                  ??___flneg 0005                    ??___awmod 0005                    ??___flmul 0009  
                  ??___flsub 0022                    ??___fltol 0005                       _efgtoa F216  
                     _buffer 0200                       _floorf D4D2                       _gotten 000020  
                     clear_0 C2CA                       clear_1 C2D6                       clear_2 C2F6  
           ___awdiv@quotient 0007              ___awmod@divisor 0003                       isa$std 000001  
            ___awmod@counter 0005                       _port_d 000F83                       pad@buf 0013  
                     ctoa@fp 000A                       dtoa@fp 001C                       _strcpy C434  
                     _strlen C0FA                       fputc@c 0001                       fputs@c 000E  
                     fputs@i 000F                       fputs@s 000A                    ??_isalpha 0003  
                  ??_isdigit 0003              ___fpclassifyf@e 0009              ___fpclassifyf@u 000B  
            ___fpclassifyf@x 0001                    ??_islower 0003                 __mediumconst FE70  
                  ??_isspace 0003          send_string_no_lib@p 0002                       tblptrh 000FF7  
                  ??_isupper 0003                       tblptrl 000FF6                       tblptru 000FF8  
                     putch@c 005E           _send_string_no_lib C550             __end_of_vfprintf C614  
               ?_setupSerial 005E                    ??_sprintf 0059                    ??_tolower 0009  
                     xtoa@fp 001C                    ??_strncmp 0007                    ??_toupper 0009  
                 ___flge@ff1 001A                   ___flge@ff2 001E              ??___fpclassifyf 0005  
                 ___fleq@ff1 0001                   ___fleq@ff2 0005                   __accesstop 0080  
    __end_of__initialization C2FC                   ___flneg@f1 0001          ?_send_string_no_lib 0002  
          ?_read_byte_no_lib 005E                 __pbssCOMRAMh 007C                ___rparam_used 000001  
               __pbssCOMRAMl 007E                   ___fltol@f1 0001           ??_read_byte_no_lib 0001  
             __pcstackBANK0h 0096                __end_of_fputc C9BE                __end_of_fputs C34A  
              __end_of_putch C022         ??_send_string_no_lib 0004     __end_of_send_byte_no_lib C066  
                    ??_fputc 0005                      ??_fputs 000E                      ??_putch 0001  
                 __pbssBANK1 0100                   __pbssBANK2 0200            read_byte_no_lib@c 0001  
                    ?___flge 001A                      ?___fleq 0001                      ?___wmul 0001  
                    ?_efgtoa 002E                      ?_floorf 001A                      ?_strcpy 0001  
                    ?_strlen 0001                    ?_delay_ms 0001           __size_of_vfpfcnvrt 08F8  
          _is_byte_available C130                      __Hparam 0000                      __Lparam 0000  
         ?_is_byte_available 005E              __size_of___flge 0104              __size_of___fleq 00AA  
                    ___aodiv D020                      ___fladd E45E                      ___aomod CEBC  
                    ___fldiv DC9A                      ___awdiv C830                      ___flneg C1A0  
                    ___awmod C6BE                      ___flmul E034                      ___flsub C34A  
                    ___fltol CC96              __size_of___wmul 0026                    ?_vfprintf 00CE  
            __size_of_efgtoa 0C5A              __size_of_floorf 0212                      __pcinit C2C4  
                    __ramtop 1000          ??_is_byte_available 0001                      __ptext0 D338  
                    __ptext1 C3E2                      __ptext2 C5B2                      __ptext3 E91E  
                    __ptext4 D6E4                      __ptext5 C492                      __ptext6 C210  
                    __ptext7 C248                      __ptext8 CD9C                      __ptext9 F216  
            __size_of_strcpy 005E              __size_of_strlen 0036                 __size_of_abs 0040  
               __size_of_pad 00C2                      _isalpha C248                      _isdigit C168  
           ___awmod@dividend 0001                      _islower C210                      _isspace C390  
                 ??_delay_ms 0003                      _isupper C1D8                      efgtoa@c 0034  
                    efgtoa@d 00AE                      efgtoa@e 00C6                      efgtoa@f 0030  
                    efgtoa@g 00C2                      efgtoa@h 00B8                      efgtoa@i 00C0  
                    efgtoa@l 00BC                      efgtoa@m 00A8                      efgtoa@n 00C8  
                    efgtoa@p 00B2                      efgtoa@t 00A2                      efgtoa@u 00CA  
                    efgtoa@w 00B4                      atoi@neg 000E                      _sprintf C3E2  
                    _tolower C4F0                      main@ptr 005C                      _strncmp CD9C  
                    _toupper C492         end_of_initialization C2FC                      floorf@e 0028  
                    floorf@m 0024                      floorf@u 002A                      floorf@x 001A  
       __size_of_setupSerial 0020                      fputc@fp 0003                __Lmediumconst FE70  
  __end_of_is_byte_available C168                      fputs@fp 000C            __end_of_vfpfcnvrt F216  
                 efgtoa@mode 00B7                   efgtoa@sign 00B0                    _RCSTAbits 000FAB  
                    postdec2 000FDD                      postinc0 000FEE                      postinc1 000FE6  
                    postinc2 000FDE                   ??_vfprintf 0057                      strcpy@d 0009  
                    strlen@a 0003                      strcpy@s 0007                      strlen@s 0001  
                 _setupPorts C030                   _print_line C022                  ___fladd@grs 0010  
                ___fldiv@grs 0014                  ___fldiv@rem 000D                  ___flmul@grs 000E  
                  _TXSTAbits 000FAC            send_byte_no_lib@c 0001              __pcstackCOMRAMh 0001  
            __pcstackCOMRAMl 005E               __end_of___flge CC96               __end_of___fleq C6BE  
                vfpfcnvrt@ap 0047                  vfpfcnvrt@ct 0078                  vfpfcnvrt@fp 0043  
                vfpfcnvrt@ll 0064               __end_of___wmul C0C8                  _BAUDCONbits 000FB8  
             __end_of_efgtoa FE70               __end_of_floorf D6E4    __size_of_read_byte_no_lib 001C  
                 floorf@F527 00F0            ?_send_byte_no_lib 0001               __end_of_strcpy C492  
             __end_of_strlen C130          start_initialization C2C4           ??_send_byte_no_lib 0001  
                __end_of_abs C2C4                  __end_of_pad C830   __size_of_is_byte_available 0038  
      __end_of___fpclassifyf CB92                  vfprintf@fmt 00D0                     ??___flge 0022  
                   ??___fleq 0009                     ??___wmul 0005                     ??_efgtoa 0035  
                   ??_floorf 001E  __size_of_send_string_no_lib 0062                     ??_strcpy 0005  
                   ??_strlen 0003                  ?_setupPorts 0001                    ___fladd@a 0005  
                  ___fladd@b 0001                  __pbssBANK0h 00F9                  __pbssBANK0l 00F0  
                ?_print_line 0001                    ___fldiv@a 0005                    ___fldiv@b 0001  
                  ___flmul@a 0005                    ___flmul@b 0001                    ___flsub@a 001E  
                  ___flsub@b 001A             ___aodiv@dividend 0001            __size_of_delay_ms 0032  
                  _atoi$1150 0012                    _atoi$1148 0010                    _atoi$1149 0014  
                _efgtoa$1051 0096                  _efgtoa$1060 009C                  _efgtoa$1052 0098  
                _efgtoa$1061 009E                  _efgtoa$1062 00A0                  _efgtoa$1056 009A  
                  _dtoa$1027 002E                __pmediumconst FE70                     ?___aodiv 0001  
                   ?___fladd 0001                     ?___aomod 0001                     ?___fldiv 0001  
                   ?___awdiv 0001             ___aodiv@quotient 0013                     ?___flneg 0001  
                   ?___awmod 0001                     ?___flmul 0001                     ?___flsub 001A  
                   ?___fltol 0001            __size_of_vfprintf 0062                     ?_isalpha 0001  
                   ?_isdigit 0001                     ?_islower 0001                     ?_isspace 0001  
                   ?_isupper 0001                     ?_sprintf 00D4                     ?_tolower 0007  
             __size_of_fputc 00CA               __size_of_fputs 0044                     ?_strncmp 0001  
                   ?_toupper 0007               __size_of_putch 0002               ___wmul@product 0005  
                  delay_ms@i 0003                    delay_ms@n 0001          __size_of_setupPorts 001A  
        __size_of_print_line 000E                     _PIR1bits 000F9E                    _vfpfcnvrt E91E  
                  _xtoa$1072 002F                    _xtoa$1073 0031             _read_byte_no_lib C066  
          ___wmul@multiplier 0001                 _isspace$1188 0007                ??_setupSerial 0001  
                 vfpfcnvrt@c 007B                   vfpfcnvrt@f 0074                     __Hrparam 0000  
                 vfprintf@ap 00D2                     __Lrparam 0000                   vfprintf@fp 00CE  
           __size_of___aodiv 0188             __size_of___fladd 04C0             __size_of___aomod 0164  
           __size_of___fldiv 039A             __size_of___awdiv 00C4             __size_of___flneg 0038  
           __size_of___awmod 00B0             __size_of___flmul 042A             __size_of___flsub 0046  
           __size_of___fltol 0106                   ?_vfpfcnvrt 0043              ___aodiv@divisor 0009  
            ___aodiv@counter 0011           ___fpclassifyf@F465 00F4                   sprintf@fmt 00D6  
           __size_of_isalpha 003C             __size_of_isdigit 0038                     _delay_ms C0C8  
           __size_of_islower 0038             __size_of_isspace 0052                     __ptext10 C4F0  
                   __ptext11 C1D8                     __ptext20 CB92                     __ptext12 C434  
                   __ptext21 C614                     __ptext13 D4D2                     __ptext30 CEBC  
                   __ptext22 DC9A                     __ptext14 CA94                     __ptext31 D020  
                   __ptext23 C6BE                     __ptext15 CC96                     __ptext40 C030  
                   __ptext32 C9BE                     __ptext24 C830                     __ptext16 C34A  
                   __ptext41 C066                     __ptext33 C8F4                     __ptext25 D9BA  
                   __ptext17 E45E                     __ptext42 C022                     __ptext34 C020  
                   __ptext26 C76E                     __ptext18 C1A0                     __ptext43 C550  
                   __ptext35 D1A8                     __ptext27 C0FA                     __ptext19 E034  
                   __ptext44 C04A                     __ptext36 C390                     __ptext28 C306  
                   __ptext45 C130                     __ptext37 C168                     __ptext29 C284  
                   __ptext46 C0C8                     __ptext38 C0A2                     __ptext39 C082  
           __size_of_isupper 0038                     _lcd_tris 000095             __size_of_sprintf 0052  
           __size_of_tolower 0060                   strcpy@dest 0001             __size_of_strncmp 0120  
           __size_of_toupper 005E                __size_of_atoi 0190                __size_of_ctoa 00D6  
              __size_of_main 019A                __size_of_dtoa 02E0    __size_of_send_byte_no_lib 001C  
              __size_of_xtoa 02D6          __end_of_setupSerial C0A2                     efgtoa@fp 002E  
                   efgtoa@ne 00A6                     efgtoa@pp 00A4                     efgtoa@ou 00AA  
                   isa$xinst 000000                     _vfprintf C5B2                 ??_setupPorts 0001  
           ___aomod@dividend 0001                 ??_print_line 0004               _vfpfcnvrt$1087 0060  
             _vfpfcnvrt$1098 0062                     isalpha@c 0001                     isdigit@c 0001  
                  sprintf@ap 00E8                     islower@c 0001                     isspace@c 0001  
                  strcpy@src 0003                     isupper@c 0001                    strncmp@_l 0001  
                  strncmp@_r 0003           __end_of_setupPorts C04A           __end_of_print_line C030  
                efgtoa@nmode 00B6   __end_of_send_string_no_lib C5B2              ___aomod@divisor 0009  
                ??_vfpfcnvrt 0049              ___aomod@counter 0011                     sprintf@f 00EA  
                   tolower@c 0007                     sprintf@s 00D4       __size_of___fpclassifyf 00FE  
                   strncmp@l 0008                     strncmp@n 0005                     strncmp@r 000A  
                   toupper@c 0007                  _setupSerial C082                ___fladd@signs 000D  
               ___aodiv@sign 0012                 ___fladd@aexp 000E                 ___fladd@bexp 000F  
   __end_of_read_byte_no_lib C082                 ___aomod@sign 0012  
